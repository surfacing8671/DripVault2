{"version":3,"sources":["../../../src/parsers/string.ts"],"names":["string","isDynamic","encode","buffer","value","bytes","type","decode","args"],"mappings":";;;;;;;AACA;;AACA;;AAEO,MAAMA,MAAsB,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;;AAGpCC,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAgC;AACpC,WAAOC,aAAMH,MAAN,CAAa;AAAEI,MAAAA,IAAI,EAAE,OAAR;AAAiBH,MAAAA,MAAjB;AAAyBC,MAAAA,KAAK,EAAE,qBAASA,KAAT;AAAhC,KAAb,CAAP;AACD,GALmC;;AAOpCG,EAAAA,MAAM,CAACC,IAAD,EAA2B;AAC/B,WAAO,mBAAOH,aAAME,MAAN,CAAaC,IAAb,CAAP,CAAP;AACD;;AATmC,CAA/B","sourcesContent":["import { DecodeArgs, Parser } from '../types';\nimport { fromUtf8, toUtf8 } from '../utils';\nimport { bytes } from './bytes';\n\nexport const string: Parser<string> = {\n  isDynamic: true,\n\n  encode({ buffer, value }): Uint8Array {\n    return bytes.encode({ type: 'bytes', buffer, value: fromUtf8(value) });\n  },\n\n  decode(args: DecodeArgs): string {\n    return toUtf8(bytes.decode(args));\n  }\n};\n"],"file":"string.js"}