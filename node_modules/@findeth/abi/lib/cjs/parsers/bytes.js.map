{"version":3,"sources":["../../../src/parsers/bytes.ts"],"names":["bytes","isDynamic","encode","buffer","value","bufferValue","paddedSize","Math","ceil","byteLength","decode","slice","length","Number","subarray"],"mappings":";;;;;;;AACA;;AAEO,MAAMA,KAAoC,GAAG;AAClDC,EAAAA,SAAS,EAAE,IADuC;;AAGlDC,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAgC;AACpC,UAAMC,WAAW,GAAG,qBAASD,KAAT,CAApB;AACA,UAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,CAACI,UAAZ,GAAyB,EAAnC,IAAyC,EAA5D;AAEA,WAAO,mBAAO,CAACN,MAAD,EAAS,qBAASE,WAAW,CAACI,UAArB,CAAT,EAA2C,uBAAWJ,WAAX,EAAwBC,UAAxB,CAA3C,CAAP,CAAP;AACD,GARiD;;AAUlDI,EAAAA,MAAM,CAAC;AAAEN,IAAAA;AAAF,GAAD,EAAoC;AACxC,UAAMD,MAAM,GAAGC,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAf;AACA,UAAMC,MAAM,GAAGC,MAAM,CAAC,qBAASV,MAAT,CAAD,CAArB;AAEA,WAAOC,KAAK,CAACU,QAAN,CAAe,EAAf,EAAmB,KAAKF,MAAxB,CAAP;AACD;;AAfiD,CAA7C","sourcesContent":["import { BytesLike, DecodeArgs, Parser } from '../types';\nimport { addPadding, concat, toBuffer, toNumber } from '../utils';\n\nexport const bytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: true,\n\n  encode({ buffer, value }): Uint8Array {\n    const bufferValue = toBuffer(value);\n    const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n\n    return concat([buffer, toBuffer(bufferValue.byteLength), addPadding(bufferValue, paddedSize)]);\n  },\n\n  decode({ value }: DecodeArgs): Uint8Array {\n    const buffer = value.slice(0, 32);\n    const length = Number(toNumber(buffer));\n\n    return value.subarray(32, 32 + length);\n  }\n};\n"],"file":"bytes.js"}