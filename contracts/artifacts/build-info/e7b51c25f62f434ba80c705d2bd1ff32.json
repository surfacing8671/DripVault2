{
	"id": "e7b51c25f62f434ba80c705d2bd1ff32",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n\n        /* @dev Subtracts two numbers, else returns zero */\n    function safeSub(uint a, uint b) internal pure returns (uint) {\n        if (b > a) {\n            return 0;\n        } else {\n            return a - b;\n        }\n    }\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":1302:10776  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":1939:2084  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":2021:2026  name_ */\n  dup2\n    /* \"contracts/ERC20.sol\":2013:2018  _name */\n  0x03\n    /* \"contracts/ERC20.sol\":2013:2026  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/ERC20.sol\":2046:2053  symbol_ */\n  dup1\n    /* \"contracts/ERC20.sol\":2036:2043  _symbol */\n  0x04\n    /* \"contracts/ERC20.sol\":2036:2053  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/ERC20.sol\":2075:2077  18 */\n  0x12\n    /* \"contracts/ERC20.sol\":2063:2072  _decimals */\n  0x05\n  0x00\n    /* \"contracts/ERC20.sol\":2063:2077  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20.sol\":1939:2084  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":1302:10776  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":1302:10776  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":2149:2238  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4225:4391  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3216:3322  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4858:5175  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3067:3156  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5570:5785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3380:3505  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2351:2444  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":6272:6538  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3708:3880  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3938:4087  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2149:2238  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"contracts/ERC20.sol\":2194:2207  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":2226:2231  _name */\n      0x03\n        /* \"contracts/ERC20.sol\":2219:2231  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2149:2238  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4225:4391  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/ERC20.sol\":4308:4312  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4324:4363  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"contracts/ERC20.sol\":4333:4345  _msgSender() */\n      tag_58\n        /* \"contracts/ERC20.sol\":4333:4343  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":4333:4345  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/ERC20.sol\":4347:4354  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":4356:4362  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":4324:4332  _approve */\n      tag_60\n        /* \"contracts/ERC20.sol\":4324:4363  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/ERC20.sol\":4380:4384  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4373:4384  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4225:4391  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3216:3322  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"contracts/ERC20.sol\":3277:3284  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3303:3315  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20.sol\":3296:3315  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3216:3322  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4858:5175  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"contracts/ERC20.sol\":4964:4968  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4980:5016  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"contracts/ERC20.sol\":4990:4996  sender */\n      dup5\n        /* \"contracts/ERC20.sol\":4998:5007  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":5009:5015  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":4980:4989  _transfer */\n      tag_64\n        /* \"contracts/ERC20.sol\":4980:5016  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/ERC20.sol\":5026:5147  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"contracts/ERC20.sol\":5035:5041  sender */\n      dup5\n        /* \"contracts/ERC20.sol\":5043:5055  _msgSender() */\n      tag_66\n        /* \"contracts/ERC20.sol\":5043:5053  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":5043:5055  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/ERC20.sol\":5057:5146  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"contracts/ERC20.sol\":5095:5101  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":5057:5146  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/ERC20.sol\":5057:5068  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":5057:5076  _allowances[sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5069:5075  sender */\n      dup12\n        /* \"contracts/ERC20.sol\":5057:5076  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5057:5090  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/ERC20.sol\":5077:5089  _msgSender() */\n      tag_68\n        /* \"contracts/ERC20.sol\":5077:5087  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":5077:5089  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/ERC20.sol\":5057:5090  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":5057:5094  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"contracts/ERC20.sol\":5057:5146  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/ERC20.sol\":5026:5034  _approve */\n      tag_60\n        /* \"contracts/ERC20.sol\":5026:5147  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/ERC20.sol\":5164:5168  true */\n      0x01\n        /* \"contracts/ERC20.sol\":5157:5168  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4858:5175  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3067:3156  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"contracts/ERC20.sol\":3116:3121  uint8 */\n      0x00\n        /* \"contracts/ERC20.sol\":3140:3149  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":3133:3149  return _decimals */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3067:3156  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5570:5785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/ERC20.sol\":5658:5662  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5674:5757  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"contracts/ERC20.sol\":5683:5695  _msgSender() */\n      tag_73\n        /* \"contracts/ERC20.sol\":5683:5693  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":5683:5695  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/ERC20.sol\":5697:5704  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":5706:5756  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"contracts/ERC20.sol\":5745:5755  addedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":5706:5717  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":5706:5731  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/ERC20.sol\":5718:5730  _msgSender() */\n      tag_75\n        /* \"contracts/ERC20.sol\":5718:5728  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":5718:5730  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/ERC20.sol\":5706:5731  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5706:5740  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5732:5739  spender */\n      dup10\n        /* \"contracts/ERC20.sol\":5706:5740  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":5706:5744  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"contracts/ERC20.sol\":5706:5756  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"contracts/ERC20.sol\":5674:5682  _approve */\n      tag_60\n        /* \"contracts/ERC20.sol\":5674:5757  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/ERC20.sol\":5774:5778  true */\n      0x01\n        /* \"contracts/ERC20.sol\":5767:5778  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5570:5785  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3380:3505  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"contracts/ERC20.sol\":3454:3461  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3480:3489  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":3480:3498  _balances[account] */\n      0x00\n        /* \"contracts/ERC20.sol\":3490:3497  account */\n      dup4\n        /* \"contracts/ERC20.sol\":3480:3498  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3473:3498  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3380:3505  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2351:2444  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"contracts/ERC20.sol\":2398:2411  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":2430:2437  _symbol */\n      0x04\n        /* \"contracts/ERC20.sol\":2423:2437  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2351:2444  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":6272:6538  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"contracts/ERC20.sol\":6365:6369  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":6381:6510  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"contracts/ERC20.sol\":6390:6402  _msgSender() */\n      tag_84\n        /* \"contracts/ERC20.sol\":6390:6400  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":6390:6402  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/ERC20.sol\":6404:6411  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":6413:6509  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"contracts/ERC20.sol\":6452:6467  subtractedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":6413:6509  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/ERC20.sol\":6413:6424  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":6413:6438  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/ERC20.sol\":6425:6437  _msgSender() */\n      tag_86\n        /* \"contracts/ERC20.sol\":6425:6435  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":6425:6437  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/ERC20.sol\":6413:6438  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":6413:6447  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":6439:6446  spender */\n      dup11\n        /* \"contracts/ERC20.sol\":6413:6447  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6413:6451  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"contracts/ERC20.sol\":6413:6509  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC20.sol\":6381:6389  _approve */\n      tag_60\n        /* \"contracts/ERC20.sol\":6381:6510  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/ERC20.sol\":6527:6531  true */\n      0x01\n        /* \"contracts/ERC20.sol\":6520:6531  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":6272:6538  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3708:3880  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":3794:3798  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3810:3852  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"contracts/ERC20.sol\":3820:3832  _msgSender() */\n      tag_89\n        /* \"contracts/ERC20.sol\":3820:3830  _msgSender */\n      tag_59\n        /* \"contracts/ERC20.sol\":3820:3832  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/ERC20.sol\":3834:3843  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":3845:3851  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3810:3819  _transfer */\n      tag_64\n        /* \"contracts/ERC20.sol\":3810:3852  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/ERC20.sol\":3869:3873  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3862:3873  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3708:3880  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3938:4087  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"contracts/ERC20.sol\":4027:4034  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":4053:4064  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":4053:4071  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":4065:4070  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":4053:4071  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4053:4080  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":4072:4079  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":4053:4080  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4046:4080  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3938:4087  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"contracts/Context.sol\":651:666  address payable */\n      0x00\n        /* \"contracts/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":9336:9676  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"contracts/ERC20.sol\":9454:9455  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":9437:9456  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":9437:9442  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":9437:9456  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":9429:9497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/ERC20.sol\":9534:9535  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":9515:9536  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":9515:9522  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":9515:9536  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":9507:9575  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/ERC20.sol\":9616:9622  amount */\n      dup1\n        /* \"contracts/ERC20.sol\":9586:9597  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":9586:9604  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":9598:9603  owner */\n      dup6\n        /* \"contracts/ERC20.sol\":9586:9604  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":9586:9613  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":9605:9612  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":9586:9613  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":9586:9622  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":9653:9660  spender */\n      dup2\n        /* \"contracts/ERC20.sol\":9637:9669  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":9646:9651  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":9637:9669  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":9662:9668  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":9637:9669  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":9336:9676  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":7012:7542  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"contracts/ERC20.sol\":7135:7136  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7117:7137  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7117:7123  sender */\n      dup4\n        /* \"contracts/ERC20.sol\":7117:7137  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":7109:7179  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/ERC20.sol\":7218:7219  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7197:7220  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7197:7206  recipient */\n      dup3\n        /* \"contracts/ERC20.sol\":7197:7220  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":7189:7260  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/ERC20.sol\":7271:7318  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"contracts/ERC20.sol\":7292:7298  sender */\n      dup4\n        /* \"contracts/ERC20.sol\":7300:7309  recipient */\n      dup4\n        /* \"contracts/ERC20.sol\":7311:7317  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":7271:7291  _beforeTokenTransfer */\n      tag_99\n        /* \"contracts/ERC20.sol\":7271:7318  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/ERC20.sol\":7349:7420  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"contracts/ERC20.sol\":7371:7377  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":7349:7420  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/ERC20.sol\":7349:7358  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":7349:7366  _balances[sender] */\n      dup1\n        /* \"contracts/ERC20.sol\":7359:7365  sender */\n      dup8\n        /* \"contracts/ERC20.sol\":7349:7366  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":7349:7370  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"contracts/ERC20.sol\":7349:7420  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC20.sol\":7329:7338  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":7329:7346  _balances[sender] */\n      dup1\n        /* \"contracts/ERC20.sol\":7339:7345  sender */\n      dup6\n        /* \"contracts/ERC20.sol\":7329:7346  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":7329:7420  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":7453:7485  _balances[recipient].add(amount) */\n      tag_101\n        /* \"contracts/ERC20.sol\":7478:7484  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":7453:7462  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":7453:7473  _balances[recipient] */\n      dup1\n        /* \"contracts/ERC20.sol\":7463:7472  recipient */\n      dup6\n        /* \"contracts/ERC20.sol\":7453:7473  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":7453:7477  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"contracts/ERC20.sol\":7453:7485  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/ERC20.sol\":7430:7439  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":7430:7450  _balances[recipient] */\n      dup1\n        /* \"contracts/ERC20.sol\":7440:7449  recipient */\n      dup5\n        /* \"contracts/ERC20.sol\":7430:7450  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":7430:7485  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":7517:7526  recipient */\n      dup2\n        /* \"contracts/ERC20.sol\":7500:7535  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7509:7515  sender */\n      dup4\n        /* \"contracts/ERC20.sol\":7500:7535  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":7528:7534  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":7500:7535  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":7012:7542  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"contracts/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"contracts/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"contracts/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"contracts/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"contracts/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":10682:10774  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220d56b489df3c71194f4b3bd062b04d2388dd65e1e09ecfb246fdce72e6f4e614b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200139f3803806200139f833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110de80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d56b489df3c71194f4b3bd062b04d2388dd65e1e09ecfb246fdce72e6f4e614b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x139F CODESIZE SUB DUP1 PUSH3 0x139F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220D56B 0x48 SWAP14 RETURN 0xC7 GT SWAP5 DELEGATECALL 0xB3 0xBD MOD 0x2B DIV 0xD2 CODESIZE DUP14 0xD6 0x5E 0x1E MULMOD 0xEC 0xFB 0x24 PUSH16 0xDCE72E6F4E614B64736F6C634300060C STOP CALLER ",
							"sourceMap": "1302:9474:1:-:0;;;1939:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:5;2013;:13;;;;;;;;;;;;:::i;:::-;;2046:7;2036;:17;;;;;;;;;;;;:::i;:::-;;2075:2;2063:9;;:14;;;;;;;;;;;;;;;;;;1939:145;;1302:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d56b489df3c71194f4b3bd062b04d2388dd65e1e09ecfb246fdce72e6f4e614b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220D56B 0x48 SWAP14 RETURN 0xC7 GT SWAP5 DELEGATECALL 0xB3 0xBD MOD 0x2B DIV 0xD2 CODESIZE DUP14 0xD6 0x5E 0x1E MULMOD 0xEC 0xFB 0x24 PUSH16 0xDCE72E6F4E614B64736F6C634300060C STOP CALLER ",
							"sourceMap": "1302:9474:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4225:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3216:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4858:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3067:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5570:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3380:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2351:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6272:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3708:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3938:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2149:89;2194:13;2226:5;2219:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:89;:::o;4225:166::-;4308:4;4324:39;4333:12;:10;:12::i;:::-;4347:7;4356:6;4324:8;:39::i;:::-;4380:4;4373:11;;4225:166;;;;:::o;3216:106::-;3277:7;3303:12;;3296:19;;3216:106;:::o;4858:317::-;4964:4;4980:36;4990:6;4998:9;5009:6;4980:9;:36::i;:::-;5026:121;5035:6;5043:12;:10;:12::i;:::-;5057:89;5095:6;5057:89;;;;;;;;;;;;;;;;;:11;:19;5069:6;5057:19;;;;;;;;;;;;;;;:33;5077:12;:10;:12::i;:::-;5057:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5026:8;:121::i;:::-;5164:4;5157:11;;4858:317;;;;;:::o;3067:89::-;3116:5;3140:9;;;;;;;;;;;3133:16;;3067:89;:::o;5570:215::-;5658:4;5674:83;5683:12;:10;:12::i;:::-;5697:7;5706:50;5745:10;5706:11;:25;5718:12;:10;:12::i;:::-;5706:25;;;;;;;;;;;;;;;:34;5732:7;5706:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5674:8;:83::i;:::-;5774:4;5767:11;;5570:215;;;;:::o;3380:125::-;3454:7;3480:9;:18;3490:7;3480:18;;;;;;;;;;;;;;;;3473:25;;3380:125;;;:::o;2351:93::-;2398:13;2430:7;2423:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2351:93;:::o;6272:266::-;6365:4;6381:129;6390:12;:10;:12::i;:::-;6404:7;6413:96;6452:15;6413:96;;;;;;;;;;;;;;;;;:11;:25;6425:12;:10;:12::i;:::-;6413:25;;;;;;;;;;;;;;;:34;6439:7;6413:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6381:8;:129::i;:::-;6527:4;6520:11;;6272:266;;;;:::o;3708:172::-;3794:4;3810:42;3820:12;:10;:12::i;:::-;3834:9;3845:6;3810:9;:42::i;:::-;3869:4;3862:11;;3708:172;;;;:::o;3938:149::-;4027:7;4053:11;:18;4065:5;4053:18;;;;;;;;;;;;;;;:27;4072:7;4053:27;;;;;;;;;;;;;;;;4046:34;;3938:149;;;;:::o;598:104:0:-;651:15;685:10;678:17;;598:104;:::o;9336:340:1:-;9454:1;9437:19;;:5;:19;;;;9429:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9534:1;9515:21;;:7;:21;;;;9507:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9616:6;9586:11;:18;9598:5;9586:18;;;;;;;;;;;;;;;:27;9605:7;9586:27;;;;;;;;;;;;;;;:36;;;;9653:7;9637:32;;9646:5;9637:32;;;9662:6;9637:32;;;;;;;;;;;;;;;;;;9336:340;;;:::o;7012:530::-;7135:1;7117:20;;:6;:20;;;;7109:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7218:1;7197:23;;:9;:23;;;;7189:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7271:47;7292:6;7300:9;7311:6;7271:20;:47::i;:::-;7349:71;7371:6;7349:71;;;;;;;;;;;;;;;;;:9;:17;7359:6;7349:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7329:9;:17;7339:6;7329:17;;;;;;;;;;;;;;;:91;;;;7453:32;7478:6;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7430:9;:20;7440:9;7430:20;;;;;;;;;;;;;;;:55;;;;7517:9;7500:35;;7509:6;7500:35;;;7528:6;7500:35;;;;;;;;;;;;;;;;;;7012:530;;;:::o;5432:163:3:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10682:92:1:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2026,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2018,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2043,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2077,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2063,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2063,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2077,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 10776,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d56b489df3c71194f4b3bd062b04d2388dd65e1e09ecfb246fdce72e6f4e614b64736f6c634300060c0033",
									".code": [
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 10776,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2207,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4308,
											"end": 4312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4333,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4333,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4333,
											"end": 4345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4333,
											"end": 4345,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4333,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4354,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4324,
											"end": 4363,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4324,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4373,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4373,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4980,
											"end": 5016,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5016,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4980,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5068,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5077,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5090,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5057,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5057,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5026,
											"end": 5147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5026,
											"end": 5147,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5026,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5168,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5157,
											"end": 5168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 5175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5683,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5704,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5745,
											"end": 5755,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5718,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5718,
											"end": 5730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5718,
											"end": 5730,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5718,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5731,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5706,
											"end": 5744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5706,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5674,
											"end": 5757,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5674,
											"end": 5757,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5674,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5778,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5767,
											"end": 5778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6365,
											"end": 6369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6390,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6390,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6390,
											"end": 6402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6390,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6404,
											"end": 6411,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6424,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6425,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6438,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6446,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6413,
											"end": 6451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6413,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6381,
											"end": 6510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6381,
											"end": 6510,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6381,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6531,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6520,
											"end": 6531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6538,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3820,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3843,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3873,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3862,
											"end": 3873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4080,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 4087,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9336,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9336,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9429,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9534,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9507,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9597,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9598,
											"end": 9603,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9612,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9613,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9622,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9646,
											"end": 9651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9662,
											"end": 9668,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7012,
											"end": 7542,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7012,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7109,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7189,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7292,
											"end": 7298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7271,
											"end": 7318,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7271,
											"end": 7318,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7271,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7371,
											"end": 7377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7365,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7366,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7346,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7420,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7472,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7453,
											"end": 7477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7450,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7485,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7535,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7542,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10682,
											"end": 10774,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10682,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10774,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0xa2cc005cfc8f59bff1faea5460a04d10bb63c1ef296bbab0653f79539c16c36f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afe941c6539a2f25b7fc220e1c3a394b2465a08841acca8e3b31d32e0580f13d\",\"dweb:/ipfs/QmQSw6WAbLcwsn7dFY9P9D4VUXnRm7D3Lm1MNcCseEwT5Q\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 39,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 45,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 47,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 49,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 51,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 53,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":630:7455  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":630:7455  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122050f79161993649d7dfc940a1173cac388418bdfe45f006078b88d23154b47fa064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050f79161993649d7dfc940a1173cac388418bdfe45f006078b88d23154b47fa064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xF7 SWAP2 PUSH2 0x9936 0x49 0xD7 0xDF 0xC9 BLOCKHASH LOG1 OR EXTCODECOPY 0xAC CODESIZE DUP5 XOR 0xBD INVALID GASLIMIT CREATE MOD SMOD DUP12 DUP9 0xD2 BALANCE SLOAD 0xB4 PUSH32 0xA064736F6C634300060C00330000000000000000000000000000000000000000 ",
							"sourceMap": "630:6825:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050f79161993649d7dfc940a1173cac388418bdfe45f006078b88d23154b47fa064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xF7 SWAP2 PUSH2 0x9936 0x49 0xD7 0xDF 0xC9 BLOCKHASH LOG1 OR EXTCODECOPY 0xAC CODESIZE DUP5 XOR 0xBD INVALID GASLIMIT CREATE MOD SMOD DUP12 DUP9 0xD2 BALANCE SLOAD 0xB4 PUSH32 0xA064736F6C634300060C00330000000000000000000000000000000000000000 ",
							"sourceMap": "630:6825:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"safeSub(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050f79161993649d7dfc940a1173cac388418bdfe45f006078b88d23154b47fa064736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "668:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "678:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:0"
									},
									"scope": 22,
									"src": "598:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "773:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "783:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "916:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "759:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:0"
									},
									"scope": 22,
									"src": "708:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "566:374:0"
						}
					],
					"src": "33:907:0"
				},
				"id": 0
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							525
						]
					},
					"id": 526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 526,
							"sourceUnit": 23,
							"src": "66:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 526,
							"sourceUnit": 604,
							"src": "90:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 526,
							"sourceUnit": 981,
							"src": "113:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 29,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1320:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 30,
									"nodeType": "InheritanceSpecifier",
									"src": "1320:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 31,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 603,
										"src": "1329:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$603",
											"typeString": "contract IERC20"
										}
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "1329:6:1"
								}
							],
							"contractDependencies": [
								22,
								603
							],
							"contractKind": "contract",
							"documentation": {
								"id": 28,
								"nodeType": "StructuredDocumentation",
								"src": "139:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 525,
							"linearizedBaseContracts": [
								525,
								603,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 35,
									"libraryName": {
										"contractScope": null,
										"id": 33,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 980,
										"src": "1348:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$980",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1342:27:1",
									"typeName": {
										"id": 34,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1361:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 525,
									"src": "1375:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 38,
										"keyType": {
											"id": 36,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1384:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1375:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 37,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1395:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 525,
									"src": "1428:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1437:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1428:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 43,
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1457:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1448:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 42,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1468:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 525,
									"src": "1504:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1504:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 525,
									"src": "1539:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 48,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1539:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 525,
									"src": "1565:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 50,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1565:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 525,
									"src": "1593:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 52,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1593:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2003:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2013:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2021:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "2013:13:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "2036:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "2046:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2036:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "2036:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 69,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2063:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2075:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2063:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2063:14:1"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1623:311:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1952:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1952:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1973:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1973:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1951:44:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:1"
									},
									"scope": 525,
									"src": "1939:145:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "2209:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 80,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "2226:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 79,
												"id": 81,
												"nodeType": "Return",
												"src": "2219:12:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2090:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:2:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "2194:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 77,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2194:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2193:15:1"
									},
									"scope": 525,
									"src": "2149:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "2413:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 89,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "2430:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 88,
												"id": 90,
												"nodeType": "Return",
												"src": "2423:14:1"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2244:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 92,
												"src": "2398:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2398:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2397:15:1"
									},
									"scope": 525,
									"src": "2351:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3123:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 98,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "3140:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 97,
												"id": 99,
												"nodeType": "Return",
												"src": "3133:16:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2450:612:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "3116:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 95,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3116:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:7:1"
									},
									"scope": 525,
									"src": "3067:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										534
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3286:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "3303:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "3296:19:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3162:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3259:8:1"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3236:2:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "3277:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3276:9:1"
									},
									"scope": 525,
									"src": "3216:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										542
									],
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3463:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "3480:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 122,
													"indexExpression": {
														"argumentTypes": null,
														"id": 121,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 123,
												"nodeType": "Return",
												"src": "3473:25:1"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3328:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3436:8:1"
									},
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3399:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3398:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3454:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3453:9:1"
									},
									"scope": 525,
									"src": "3380:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										552
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3800:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3820:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3820:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3834:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 136,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3810:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3810:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3810:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3869:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 135,
												"id": 144,
												"nodeType": "Return",
												"src": "3862:11:1"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3511:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3776:8:1"
									},
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3726:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3725:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3794:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3794:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3793:6:1"
									},
									"scope": 525,
									"src": "3708:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										562
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4036:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 157,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4053:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 159,
														"indexExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4065:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4053:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 161,
													"indexExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "4072:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4053:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 162,
												"nodeType": "Return",
												"src": "4046:34:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3886:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4009:8:1"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3957:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3972:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3956:32:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "4027:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4026:9:1"
									},
									"scope": 525,
									"src": "3938:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										572
									],
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "4314:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 176,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4333:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4333:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 178,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4356:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "4324:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4324:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "4324:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4380:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 174,
												"id": 183,
												"nodeType": "Return",
												"src": "4373:11:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "4093:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4290:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4242:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4259:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4241:33:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4308:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4307:6:1"
									},
									"scope": 525,
									"src": "4225:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "4970:205:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4990:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "4998:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5009:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "4980:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4980:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "4980:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5035:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 206,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5043:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5043:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "5095:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5103:42:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 208,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "5057:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 210,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 209,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "5069:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5057:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 211,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5077:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5077:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5057:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 909,
																"src": "5057:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5057:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 204,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "5026:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5026:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5026:121:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5164:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 197,
												"id": 221,
												"nodeType": "Return",
												"src": "5157:11:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4397:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4946:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4880:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4896:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4896:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4915:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4879:51:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4964:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4964:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4963:6:1"
									},
									"scope": 525,
									"src": "4858:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "5664:121:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 234,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5683:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5683:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 236,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5697:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 244,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "5745:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 237,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "5706:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 240,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 238,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5718:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5718:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5706:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 242,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 241,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "5732:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5706:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "5706:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5706:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 233,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "5674:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5674:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "5674:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5774:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 232,
												"id": 249,
												"nodeType": "Return",
												"src": "5767:11:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5181:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5597:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5614:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5596:37:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5658:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5658:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5657:6:1"
									},
									"scope": 525,
									"src": "5570:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "6371:167:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6390:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6390:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "6404:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 272,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "6452:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6469:39:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "6413:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 266,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6425:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6425:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6413:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 269,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "6439:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6413:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 909,
																"src": "6413:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6413:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "6381:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "6381:129:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6527:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 260,
												"id": 278,
												"nodeType": "Return",
												"src": "6520:11:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "5791:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6299:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6316:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6298:42:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6364:6:1"
									},
									"scope": 525,
									"src": "6272:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7099:443:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 291,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "7117:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7135:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7127:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7127:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7127:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7117:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7139:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7109:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "7109:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 301,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "7197:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7218:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7210:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 302,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7210:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7210:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7197:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7222:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7189:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7189:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "7189:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 311,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7292:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 312,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7300:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7311:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "7271:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7271:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "7271:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 316,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "7329:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 318,
														"indexExpression": {
															"argumentTypes": null,
															"id": 317,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7339:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7329:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 323,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7371:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7379:40:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "7349:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 321,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 320,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "7359:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7349:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "7349:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7349:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7329:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "7329:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 328,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "7430:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 330,
														"indexExpression": {
															"argumentTypes": null,
															"id": 329,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7440:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7430:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 335,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7478:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 331,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "7453:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 333,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 332,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "7463:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7453:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "7453:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7453:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7430:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "7430:55:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 340,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7509:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 341,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7517:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7528:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "7500:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7500:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "EmitStatement",
												"src": "7495:40:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "6544:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7031:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7047:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7047:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7066:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7030:51:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7099:0:1"
									},
									"scope": 525,
									"src": "7012:530:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "7878:305:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "7896:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7915:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7907:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7907:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7907:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7896:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7919:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7888:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7888:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "7888:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7993:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7985:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7985:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7985:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "7997:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8006:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "7964:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7964:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "7964:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "8024:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 376,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8056:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 374,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "8039:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "8039:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8039:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8024:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "8024:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "8073:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8083:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8073:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 387,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8117:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "8094:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 385,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8104:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8094:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "8094:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8094:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8073:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "8073:51:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8156:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8148:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8148:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8148:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8160:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8169:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "8139:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8139:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "EmitStatement",
												"src": "8134:42:1"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "7548:260:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "7828:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "7845:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7845:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7827:33:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7878:0:1"
									},
									"scope": 525,
									"src": "7813:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "8568:345:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 410,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8586:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8605:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8597:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 411,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8597:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8597:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8586:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8609:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8578:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8578:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "8578:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 420,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8677:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8694:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8686:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8686:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8686:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "8698:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "8656:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8656:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "8656:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "8716:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 430,
														"indexExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8716:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "8760:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8768:36:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "8737:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 432,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "8747:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8737:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "8737:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8737:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8716:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "8716:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 440,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "8815:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "8847:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "8830:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "8830:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8830:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8815:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "8815:39:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 448,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8878:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8895:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8887:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 449,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8887:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8887:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 453,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "8899:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "8869:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8869:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "EmitStatement",
												"src": "8864:42:1"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "8189:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "8518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "8535:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8517:33:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8568:0:1"
									},
									"scope": 525,
									"src": "8503:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "9419:257:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 468,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9437:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9454:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9446:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9446:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9446:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9437:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9458:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9429:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9429:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "9429:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 478,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "9515:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9534:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9526:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 479,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9526:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9526:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9515:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9538:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9507:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9507:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "9507:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "9586:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 490,
															"indexExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9598:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9586:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 491,
														"indexExpression": {
															"argumentTypes": null,
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9605:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9586:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "9616:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9586:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "9586:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9646:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9662:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "9637:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9637:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "EmitStatement",
												"src": "9632:37:1"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "8919:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9354:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9369:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9386:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9386:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9353:48:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9419:0:1"
									},
									"scope": 525,
									"src": "9336:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10057:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 508,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "10067:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 509,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "10079:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10067:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10067:21:1"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "9682:312:1",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 504,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10023:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10022:17:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10057:0:1"
									},
									"scope": 525,
									"src": "9999:96:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "10771:3:1",
										"statements": []
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "10101:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "10712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "10726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "10738:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10711:42:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10771:0:1"
									},
									"scope": 525,
									"src": "10682:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 526,
							"src": "1302:9474:1"
						}
					],
					"src": "33:10744:1"
				},
				"id": 1
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							603
						]
					},
					"id": 604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 527,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 528,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 603,
							"linearizedBaseContracts": [
								603
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:2"
									},
									"scope": 603,
									"src": "231:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:2"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "428:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:2"
									},
									"scope": 603,
									"src": "369:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "675:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:2"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:2"
									},
									"scope": 603,
									"src": "657:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "1028:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:2"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "1083:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:2"
									},
									"scope": 603,
									"src": "1009:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 572,
												"src": "1762:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 572,
												"src": "1779:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 572,
												"src": "1813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:2"
									},
									"scope": 603,
									"src": "1745:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "2148:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "2164:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "2183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "2217:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:2"
									},
									"scope": 603,
									"src": "2126:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 593,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 593,
												"src": "2407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 593,
												"src": "2429:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 593,
												"src": "2449:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:2"
									},
									"src": "2392:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 602,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 602,
												"src": "2638:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 602,
												"src": "2661:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 602,
												"src": "2686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:2"
									},
									"src": "2623:78:2"
								}
							],
							"scope": 604,
							"src": "137:2566:2"
						}
					],
					"src": "33:2670:2"
				},
				"id": 2
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							980
						]
					},
					"id": 981,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 605,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 606,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 980,
							"linearizedBaseContracts": [
								980
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "865:98:3",
										"statements": [
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 636,
														"src": "875:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 620,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "887:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 621,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "891:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 624,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "906:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 625,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 631,
												"nodeType": "IfStatement",
												"src": "902:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 629,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 617,
													"id": 630,
													"nodeType": "Return",
													"src": "913:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 633,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "954:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 634,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 617,
												"id": 635,
												"nodeType": "Return",
												"src": "940:16:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "805:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "816:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:3"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "850:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "856:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:3"
									},
									"scope": 980,
									"src": "789:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "1185:75:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 649,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "1199:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 650,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1203:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 656,
												"nodeType": "IfStatement",
												"src": "1195:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 654,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 648,
													"id": 655,
													"nodeType": "Return",
													"src": "1206:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 658,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "1247:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 659,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "1251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 661,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 648,
												"id": 662,
												"nodeType": "Return",
												"src": "1233:20:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:3",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 664,
												"src": "1125:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 664,
												"src": "1136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:3"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 664,
												"src": "1170:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 664,
												"src": "1176:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:3"
									},
									"scope": 980,
									"src": "1109:151:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "1484:359:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 676,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1716:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 683,
												"nodeType": "IfStatement",
												"src": "1712:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 675,
													"id": 682,
													"nodeType": "Return",
													"src": "1724:16:3"
												}
											},
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 704,
														"src": "1750:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 686,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1762:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 687,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1766:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 690,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "1781:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 691,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1785:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 693,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1790:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 699,
												"nodeType": "IfStatement",
												"src": "1777:33:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 697,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 675,
													"id": 698,
													"nodeType": "Return",
													"src": "1793:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 701,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "1834:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 702,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 675,
												"id": 703,
												"nodeType": "Return",
												"src": "1820:16:3"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "1424:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "1435:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:3"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "1469:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "1475:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:3"
									},
									"scope": 980,
									"src": "1408:435:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2068:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 717,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "2082:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 724,
												"nodeType": "IfStatement",
												"src": "2078:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 722,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 716,
													"id": 723,
													"nodeType": "Return",
													"src": "2090:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 726,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "2131:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 727,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "2135:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 729,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 716,
												"id": 730,
												"nodeType": "Return",
												"src": "2117:20:3"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "2019:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:3"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "2053:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "2059:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:3"
									},
									"scope": 980,
									"src": "1992:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2379:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "2393:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 751,
												"nodeType": "IfStatement",
												"src": "2389:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 749,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 743,
													"id": 750,
													"nodeType": "Return",
													"src": "2401:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 753,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "2442:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2446:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 756,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 743,
												"id": 757,
												"nodeType": "Return",
												"src": "2428:20:3"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 759,
												"src": "2319:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 759,
												"src": "2330:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 759,
												"src": "2364:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 759,
												"src": "2370:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:3"
									},
									"scope": 980,
									"src": "2303:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "2757:108:3",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 784,
														"src": "2767:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 771,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2779:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 772,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "2783:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 776,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "2802:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 777,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "2807:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 782,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 770,
													"src": "2857:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 768,
												"id": 783,
												"nodeType": "Return",
												"src": "2850:8:3"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 785,
												"src": "2703:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 785,
												"src": "2714:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:3"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 785,
												"src": "2748:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:3"
									},
									"scope": 980,
									"src": "2690:175:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "3203:88:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 796,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "3221:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "3226:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 802,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3279:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "3283:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 794,
												"id": 805,
												"nodeType": "Return",
												"src": "3272:12:3"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 807,
												"src": "3149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 807,
												"src": "3160:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 807,
												"src": "3194:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:3"
									},
									"scope": 980,
									"src": "3136:155:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "3605:148:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 817,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3619:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 822,
												"nodeType": "IfStatement",
												"src": "3615:20:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 816,
													"id": 821,
													"nodeType": "Return",
													"src": "3627:8:3"
												}
											},
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 840,
														"src": "3645:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 825,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3657:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 826,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "3661:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 830,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "3680:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 831,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "3684:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "3689:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 838,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 824,
													"src": "3745:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 816,
												"id": 839,
												"nodeType": "Return",
												"src": "3738:8:3"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 841,
												"src": "3551:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 841,
												"src": "3562:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:3"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 841,
												"src": "3596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:3"
									},
									"scope": 980,
									"src": "3538:215:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "4284:83:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 852,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4302:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 858,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "4355:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 859,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "4359:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 850,
												"id": 861,
												"nodeType": "Return",
												"src": "4348:12:3"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 863,
												"src": "4230:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 863,
												"src": "4241:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:3"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 863,
												"src": "4275:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:3"
									},
									"scope": 980,
									"src": "4217:150:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "4887:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "4905:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 880,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "4956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 881,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 872,
												"id": 883,
												"nodeType": "Return",
												"src": "4949:12:3"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "4833:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "4844:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:3"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "4878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:3"
									},
									"scope": 980,
									"src": "4820:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "5527:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "5545:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 899,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "5550:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 901,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "5553:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 904,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "5583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 905,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "5587:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 896,
												"id": 907,
												"nodeType": "Return",
												"src": "5576:12:3"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 909,
												"src": "5445:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 909,
												"src": "5456:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 909,
												"src": "5467:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:3"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 909,
												"src": "5518:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:3"
									},
									"scope": 980,
									"src": "5432:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "6347:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 922,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "6365:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 925,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "6372:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 928,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6402:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 929,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "6406:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 920,
												"id": 931,
												"nodeType": "Return",
												"src": "6395:12:3"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "6265:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "6276:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "6287:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:3"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "6338:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:3"
									},
									"scope": 980,
									"src": "6252:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "7155:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 946,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "7173:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 949,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7180:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 952,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "7210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 953,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "7214:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 944,
												"id": 955,
												"nodeType": "Return",
												"src": "7203:12:3"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "7073:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "7084:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "7095:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:3"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "7146:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:3"
									},
									"scope": 980,
									"src": "7060:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "7350:103:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 966,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "7364:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 967,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "7368:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7364:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "7410:37:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 972,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "7431:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 973,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "7435:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7431:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 965,
															"id": 975,
															"nodeType": "Return",
															"src": "7424:12:3"
														}
													]
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "7360:87:3",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "7371:33:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7392:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 965,
															"id": 970,
															"nodeType": "Return",
															"src": "7385:8:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "7305:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7305:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "7313:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7304:16:3"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "7344:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7344:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7343:6:3"
									},
									"scope": 980,
									"src": "7288:165:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 981,
							"src": "630:6825:3"
						}
					],
					"src": "33:7422:3"
				},
				"id": 3
			}
		}
	}
}