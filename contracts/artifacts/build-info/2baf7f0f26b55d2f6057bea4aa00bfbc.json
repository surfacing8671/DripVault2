{
	"id": "2baf7f0f26b55d2f6057bea4aa00bfbc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DiamodSafe.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.4;\n\nimport \"./Address.sol\";\nimport \"./SafeMath.sol\";\nimport \"./SafeERC20.sol\";\n\nimport \"./IERC20.sol\";\n\nimport \"./Ownable.sol\";\nimport \"./IERC721.sol\";\n\ncontract DiamondSafe is Ownable {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint;\n\n    // Import the BEP20 token interface\n    IERC20 public stakingToken;\n    \n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$$CONFIGURABLES AND VARIABLES$$$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n    //NFT amount to hold for immunity\n    uint256 public requiredBalance;\n\n    // Store the token address and the reserve address as well as the NFTs\n    address public tokenAddress;\n    address payable public bnbReceiver;\n    IERC721[] public jpeg;\n    // Store the number of unique users and total Tx's\n    uint public users;\n    uint public totalTxs;\n\n    // Store the starting time & block number and the last payout time\n    uint public lastPayout; // What time was the last payout (timestamp)?\n\n    // Store the details of total deposits & claims\n    uint public totalClaims;\n    uint public totalDeposits;\n\n    // Store the total drip pool balance and rate\n    uint public dripPoolBalance;\n    uint8 public dripRate;\n\n    // 10% fee on deposit and withdrawal\n    uint8 internal constant divsFee = 10;\n    uint256 internal constant magnitude = 2 ** 64;\n\n    // How many portions of the fees does each receiver get?\n    uint public forPool;\n    uint public forDivs;\n\n    // Rebase and payout frequency\n    uint256 public constant rebaseFrequency = 6 hours;\n    uint256 public constant payoutFrequency = 2 seconds;\n\n    // Timestamp of last rebase\n    uint256 public lastRebaseTime;\n\n    // Current total tokens staked, and profit per share\n    uint256 private currentTotalStaked;\n    uint256 private profitPerShare_;\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ MODIFIERS                    $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // Only holders - Caller must have funds in the vault\n    modifier onlyHolders() {\n        require(myTokens() > 0);\n        _;\n    }\n\n    // Only earners - Caller must have some earnings\n    modifier onlyEarners() {\n        require(myEarnings() > 0);\n        _;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n     $$ ACCOUNT STRUCT                 $$\n     $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    struct Account {\n        uint deposited;\n        uint withdrawn;\n        uint compounded;\n        uint rewarded;\n        uint contributed;\n        uint transferredShares;\n        uint receivedShares;\n        uint xInvested;\n        uint xCompounded;\n        uint xRewarded;\n        uint xContributed;\n        uint xWithdrawn;\n        uint xTransferredShares;\n        uint xReceivedShares;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ MAPPINGS                       $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    mapping(address => int256) payoutsOf_;\n    mapping(address => uint256) balanceOf_;\n    mapping(address => Account) accountOf_;\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ EVENTS                         $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    event onDeposit(\n        address indexed _user,\n        uint256 _deposited,\n        uint256 tokensMinted,\n        uint timestamp\n    );\n    event onWithdraw(\n        address indexed _user,\n        uint256 _liquidated,\n        uint256 tokensEarned,\n        uint timestamp\n    );\n    event onCompound(\n        address indexed _user,\n        uint256 _compounded,\n        uint256 tokensMinted,\n        uint timestamp\n    );\n    event onWithdraw(address indexed _user, uint256 _withdrawn, uint timestamp);\n    event onTransfer(\n        address indexed from,\n        address indexed to,\n        uint256 tokens,\n        uint timestamp\n    );\n    event onUpdate(\n        address indexed _user,\n        uint256 invested,\n        uint256 tokens,\n        uint256 soldTokens,\n        uint timestamp\n    );\n\n    event onRebase(uint256 balance, uint256 timestamp);\n\n    event onDonate(address indexed from, uint256 _contributed, uint timestamp);\n    event onDonateBNB(address indexed from, uint256 amount, uint timestamp);\n\n    event onSetFeeSplit(uint _pool, uint _divs, uint256 timestamp);\n    event onSetImmunityToken(\n        address indexed _caller,\n        IERC721 []oldOne,\n        IERC721 []newOne,\n        uint256 timestamp\n    );\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ CONSTRUCTOR                    $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    constructor(address _tokenAddress, uint8 _dripRate) Ownable() {\n        require(\n            _tokenAddress != address(0) && Address.isContract(_tokenAddress),\n            \"INVALID_ADDRESS\"\n        );\n\n        tokenAddress = _tokenAddress;\n        stakingToken = IERC20(_tokenAddress);\n\n        bnbReceiver = msg.sender;\n\n        // Set Drip Rate and last payout date (first time around)...\n        dripRate = _dripRate;\n        lastPayout = (block.timestamp);\n\n        // Fee portions\n        forPool = 8;\n        forDivs = 2;\n\n        requiredBalance = 1;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ FALLBACK                       $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    receive() external payable {\n        Address.sendValue(bnbReceiver, msg.value);\n        emit onDonateBNB(msg.sender, msg.value, block.timestamp);\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ WRITE FUNCTIONS                $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // Donate\n    function donate(uint _amount) public returns (uint256) {\n        // Move the tokens from the caller's wallet to this contract.\n        require(stakingToken.transferFrom(msg.sender, address(this), _amount));\n\n        // Add the tokens to the drip pool balance\n        dripPoolBalance += _amount;\n        accountOf_[msg.sender].xContributed += 1;\n\n        // Tell the network, successful function - how much in the pool now?\n        emit onDonate(msg.sender, _amount, block.timestamp);\n        return dripPoolBalance;\n    }\n\n    // Deposit\n    function deposit(uint _amount) public returns (uint256) {\n        return depositTo(msg.sender, _amount);\n    }\n\n    // DepositTo\n    function depositTo(address _user, uint _amount) public returns (uint256) {\n        // Move the tokens from the caller's wallet to this contract.\n        require(stakingToken.transferFrom(msg.sender, address(this), _amount));\n\n        // Add the deposit to the totalDeposits...\n        totalDeposits += _amount;\n\n        // Then actually call the deposit method...\n        uint amount = _depositTokens(_user, _amount);\n\n        // Update the leaderboard...\n        emit onUpdate(\n            _user,\n            accountOf_[_user].deposited,\n            balanceOf_[_user],\n            accountOf_[_user].withdrawn,\n            block.timestamp\n        );\n\n        // Then trigger a distribution for everyone, kind soul!\n        distribute();\n\n        // Successful function - how many 'shares' (tokens) are the result?\n        return amount;\n    }\n\n    // Compound\n    function compound() public onlyEarners {\n        _compoundTokens();\n    }\n\n    // Harvest\n    function harvest() public onlyEarners {\n        address _user = msg.sender;\n        uint256 _dividends = myEarnings();\n\n        // Calculate the payout, add it to the user's total paid out accounting...\n        payoutsOf_[_user] += (int256)(_dividends * magnitude);\n\n        // Pay the user their tokens to their wallet\n        stakingToken.transfer(_user, _dividends);\n\n        // Update accounting for user/total withdrawal stats...\n        accountOf_[_user].withdrawn = SafeMath.add(\n            accountOf_[_user].withdrawn,\n            _dividends\n        );\n        accountOf_[_user].xWithdrawn += 1;\n\n        // Update total Tx's and claims stats\n        totalTxs += 1;\n        totalClaims += _dividends;\n\n        // Tell the network...\n        emit onWithdraw(_user, _dividends, block.timestamp);\n\n        // Trigger a distribution for everyone, kind soul!\n        distribute();\n    }\n\n    // Withdraw\n    function withdraw(uint256 _amount) public onlyHolders {\n        address _user = msg.sender;\n        require(_amount <= balanceOf_[_user]);\n         uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100;\n                \n        bool isImmune = checkImmunity(msg.sender);\n        //Checks immunity\n        if (isImmune) {\n            //Sets amount of tokens to be taxed to 0 of immune\n           _undividedDividends = 0;  \n           } \n         // Calculate dividends and 'shares' (tokens)\n        uint256  _taxedTokens = SafeMath.sub(_amount, _undividedDividends);\n        currentTotalStaked = SafeMath.sub(currentTotalStaked, _amount);\n        balanceOf_[_user] = SafeMath.sub(balanceOf_[_user], _amount);\n\n        // Update the payment ratios for the user and everyone else...\n        int256 _updatedPayouts = (int256)(\n            profitPerShare_ * _amount + (_taxedTokens * magnitude)\n        );\n        payoutsOf_[_user] -= _updatedPayouts;\n\n        // Serve dividends between the drip and instant divs (4:1)...\n        allocateFees(_undividedDividends);\n\n        // Tell the network, and trigger a distribution\n        emit onWithdraw(_user, _amount, _taxedTokens, block.timestamp);\n\n        // Update the leaderboard...\n        emit onUpdate(\n            _user,\n            accountOf_[_user].deposited,\n            balanceOf_[_user],\n            accountOf_[_user].withdrawn,\n            block.timestamp\n        );\n        // Trigger a distribution for everyone, kind soul!\n        distribute();\n        }\n     // Transfer\n    function transfer(\n        address _to,\n        uint256 _amount\n    ) external onlyHolders returns (bool) {\n        return _transferTokens(_to, _amount);\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$VIEW FUNCTIONS                 $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // User is immune to withdraw fees when holding an item\n    function checkImmunity(address _user) public view returns (bool isImmune) {\n        uint256 x = 0;\n        IERC721 jpegTest1;\n        for(uint i =0; i < jpeg.length; i++){\n            jpegTest1 = IERC721(jpeg[i]);\n             x += jpegTest1.balanceOf(_user);\n        }\n       if (x >= requiredBalance) {\n            return true;\n        }\n        return false;\n    }\n\n    function myTokens() public view returns (uint256) {\n        return balanceOf(msg.sender);\n    }\n\n    function myEarnings() public view returns (uint256) {\n        return dividendsOf(msg.sender);\n    }\n\n    function balanceOf(address _user) public view returns (uint256) {\n        return balanceOf_[_user];\n    }\n\n    function tokenBalance(address _user) public view returns (uint256) {\n        return _user.balance;\n    }\n\n    function totalBalance() public view returns (uint256) {\n        return stakingToken.balanceOf(address(this));\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return currentTotalStaked;\n    }\n\n    function dividendsOf(address _user) public view returns (uint256) {\n        return\n            (uint256)(\n                (int256)(profitPerShare_ * balanceOf_[_user]) -\n                    payoutsOf_[_user]\n            ) / magnitude;\n    }\n\n    function sellPrice() public pure returns (uint256) {\n        uint256 _tokens = 1e18;\n        uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100);\n        uint256 _taxedTokens = SafeMath.sub(_tokens, _dividends);\n        return _taxedTokens;\n    }\n\n    function buyPrice() public pure returns (uint256) {\n        uint256 _tokens = 1e18;\n        uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100);\n        uint256 _taxedTokens = SafeMath.add(_tokens, _dividends);\n        return _taxedTokens;\n    }\n\n    function calculateSharesReceived(\n        uint256 _amount\n    ) public pure returns (uint256) {\n        uint256 _divies = SafeMath.div(SafeMath.mul(_amount, divsFee), 100);\n        uint256 _remains = SafeMath.sub(_amount, _divies);\n        uint256 _result = _remains;\n        return _result;\n    }\n\n    function calculateTokensReceived(\n        uint256 _amount\n    ) public view returns (uint256) {\n        require(_amount <= currentTotalStaked);\n        uint256 _tokens = _amount;\n        uint256 _divies = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100);\n        uint256 _remains = SafeMath.sub(_tokens, _divies);\n        return _remains;\n    }\n\n    function accountOf(address _user) public view returns (uint256[14] memory) {\n        Account memory a = accountOf_[_user];\n        uint256[14] memory accountArray = [\n            a.deposited,\n            a.withdrawn,\n            a.rewarded,\n            a.compounded,\n            a.contributed,\n            a.transferredShares,\n            a.receivedShares,\n            a.xInvested,\n            a.xRewarded,\n            a.xContributed,\n            a.xWithdrawn,\n            a.xTransferredShares,\n            a.xReceivedShares,\n            a.xCompounded\n        ];\n        return accountArray;\n    }\n\n    function dailyEstimate(address _user) public view returns (uint256) {\n        uint256 share = dripPoolBalance.mul(dripRate).div(100);\n        return\n            (currentTotalStaked > 0)\n                ? share.mul(balanceOf_[_user]).div(currentTotalStaked)\n                : 0;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ PUBLIC OWNER-ONLY FUNCTIONS $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n    function setFeeSplit(\n        uint256 _pool,\n        uint256 _divs\n    ) public onlyOwner returns (bool _success) {\n        require(_pool.add(_divs) == 10, \"TEN_PORTIONS_REQUIRE_DIVISION\");\n\n        // Set the new values...\n        forPool = _pool;\n        forDivs = _divs;\n\n        // Tell the network, successful function!\n        emit onSetFeeSplit(_pool, _divs, block.timestamp);\n        return true;\n    }\n\n   // make a set of NFT available for immunity withdraw\n    function setImmunityToken(\n        IERC721[] memory _contract\n    ) public onlyOwner returns (bool _success) {\n    for(uint i =0; i < jpeg.length; i++){\n    // check to make sure they are ERC721 tokens\n   require(_contract[i].supportsInterface(0x80ac58cd), \"NOT_ERC721\");    \n    }\n        IERC721[] memory oldContract = jpeg;\n        jpeg = _contract;\n\n        emit onSetImmunityToken(\n            msg.sender,\n            oldContract,\n            _contract,\n            block.timestamp\n        );\n        return true;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ PRIVATE / INTERNAL FUNCTIONS   $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // Allocate fees (private method)\n    function allocateFees(uint fee) private {\n        uint256 _onePiece = fee.div(10);\n\n        uint256 _forPool = (_onePiece.mul(forPool)); // for the Drip Pool\n        uint256 _forDivs = (_onePiece.mul(forDivs)); // for Instant Divs\n\n        dripPoolBalance = dripPoolBalance.add(_forPool);\n\n        // If there's more than 0 tokens staked in the vault...\n        if (currentTotalStaked > 0) {\n            // Distribute those instant divs...\n            profitPerShare_ = SafeMath.add(\n                profitPerShare_,\n                (_forDivs * magnitude) / currentTotalStaked\n            );\n        } else {\n            // Otherwise add the divs portion to the drip pool balance.\n            dripPoolBalance += _forDivs;\n        }\n    }\n\n    // Distribute (private method)\n    function distribute() private {\n        uint _currentTimestamp = (block.timestamp);\n\n        // Log a rebase, if it's time to do so...\n        if (_currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency) {\n            // Tell the network...\n            emit onRebase(totalBalance(), _currentTimestamp);\n\n            // Update the time this was last updated...\n            lastRebaseTime = _currentTimestamp;\n        }\n\n        // If there's any time difference...\n        if (\n            SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency &&\n            currentTotalStaked > 0\n        ) {\n            // Calculate shares and profits...\n            uint256 share = dripPoolBalance.mul(dripRate).div(100).div(\n                24 hours\n            );\n            uint256 profit = share * _currentTimestamp.safeSub(lastPayout);\n\n            // Subtract from drip pool balance and add to all user earnings\n            dripPoolBalance = dripPoolBalance.safeSub(profit);\n            profitPerShare_ = SafeMath.add(\n                profitPerShare_,\n                (profit * magnitude) / currentTotalStaked\n            );\n\n            // Update the last payout timestamp\n            lastPayout = _currentTimestamp;\n        }\n    }\n\n    // Deposit Tokens (internal method)\n    function _depositTokens(\n        address _recipient,\n        uint256 _amount\n    ) internal returns (uint256) {\n        // If the recipient has zero activity, they're new - COUNT THEM!!!\n        if (\n            accountOf_[_recipient].deposited == 0 &&\n            accountOf_[_recipient].receivedShares == 0\n        ) {\n            users += 1;\n        }\n\n        // Count this tx...\n        totalTxs += 1;     \n         uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100;\n          uint256   _tokens = SafeMath.sub(_amount, _undividedDividends);\n\n       \n        // Tell the network...\n        emit onDeposit(_recipient, _amount, _tokens, block.timestamp);\n\n        // There needs to be something being added in this call...\n        require(\n            _tokens > 0 &&\n                SafeMath.add(_tokens, currentTotalStaked) > currentTotalStaked\n        );\n        if (currentTotalStaked > 0) {\n            currentTotalStaked += _tokens;\n        } else {\n            currentTotalStaked = _tokens;\n        }\n\n        // Allocate fees, and balance to the recipient\n        allocateFees(_undividedDividends);\n        balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _tokens);\n\n        // Updated payouts...\n        int256 _updatedPayouts = (int256)(profitPerShare_ * _tokens);\n\n        // Update stats...\n        payoutsOf_[_recipient] += _updatedPayouts;\n        accountOf_[_recipient].deposited += _amount;\n        accountOf_[_recipient].xInvested += 1;\n\n        // Successful function - how many \"shares\" generated?\n        return _tokens;\n    }\n\n    // Compound (internal method)\n    function _compoundTokens() internal returns (uint256) {\n        address _user = msg.sender;\n\n        // Quickly roll the caller's earnings into their payouts\n        uint256 _dividends = dividendsOf(_user);\n        payoutsOf_[_user] += (int256)(_dividends * magnitude);\n\n        // Then actually trigger the deposit method\n        // (NOTE: No tokens required here, earnings are tokens already within the contract)\n        uint256 _tokens = _depositTokens(msg.sender, _dividends);\n\n        // Tell the network...\n        emit onCompound(_user, _dividends, _tokens, block.timestamp);\n\n        // Then update the stats...\n        accountOf_[_user].compounded = SafeMath.add(\n            accountOf_[_user].compounded,\n            _dividends\n        );\n        accountOf_[_user].xCompounded += 1;\n\n        // Update the leaderboard...\n        emit onUpdate(\n            _user,\n            accountOf_[_user].deposited,\n            balanceOf_[_user],\n            accountOf_[_user].withdrawn,\n            block.timestamp\n        );\n\n        // Then trigger a distribution for everyone, you kind soul!\n        distribute();\n\n        // Successful function!\n        return _tokens;\n    }\n\n    // Transfer Tokens (internal method)\n    function _transferTokens(\n        address _recipient,\n        uint256 _amount\n    ) internal returns (bool _success) {\n        address _sender = msg.sender;\n        require(_amount <= balanceOf_[_sender]);\n\n        // Harvest any earnings before transferring, to help with cleaner accounting\n        if (myEarnings() > 0) {\n            harvest();\n        }\n\n        // \"Move\" the tokens...\n        balanceOf_[_sender] = SafeMath.sub(balanceOf_[_sender], _amount);\n        balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _amount);\n\n        // Adjust payout ratios to match the new balances...\n        payoutsOf_[_sender] -= (int256)(profitPerShare_ * _amount);\n        payoutsOf_[_recipient] += (int256)(profitPerShare_ * _amount);\n\n        // If the recipient has zero activity, they're new - COUNT THEM!!!\n        if (\n            accountOf_[_recipient].deposited == 0 &&\n            accountOf_[_recipient].receivedShares == 0\n        ) {\n            users += 1;\n        }\n        // Update stats...\n        accountOf_[_sender].xTransferredShares += 1;\n        accountOf_[_sender].transferredShares += _amount;\n        accountOf_[_recipient].receivedShares += _amount;\n        accountOf_[_recipient].xReceivedShares += 1;\n\n        // Add this to the Tx counter...\n        totalTxs += 1;\n\n        // Tell the network, successful function!\n        emit onTransfer(_sender, _recipient, _amount, block.timestamp);\n\n        // Update the leaderboard for sender...\n        emit onUpdate(\n            _sender,\n            accountOf_[_sender].deposited,\n            balanceOf_[_sender],\n            accountOf_[_sender].withdrawn,\n            block.timestamp\n        );\n\n        // Update the leaderboard for recipient...\n        emit onUpdate(\n            _recipient,\n            accountOf_[_recipient].deposited,\n            balanceOf_[_recipient],\n            accountOf_[_recipient].withdrawn,\n            block.timestamp\n        );\n\n        return true;\n    }\n}\n"
			},
			"contracts/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.7.4;\n\nimport \"../lib/utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n\n        /* @dev Subtracts two numbers, else returns zero */\n    function safeSub(uint a, uint b) internal pure returns (uint) {\n        if (b > a) {\n            return 0;\n        } else {\n            return a - b;\n        }\n    }\n}"
			},
			"contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			},
			"lib/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.7.4;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220439eb543ed6104a74b725b2b04a72531b5813299bda0c709dd800af907d425d964736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220439eb543ed6104a74b725b2b04a72531b5813299bda0c709dd800af907d425d964736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP15 0xB5 NUMBER 0xED PUSH2 0x4A7 0x4B PUSH19 0x5B2B04A72531B5813299BDA0C709DD800AF907 0xD4 0x25 0xD9 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "134:7684:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220439eb543ed6104a74b725b2b04a72531b5813299bda0c709dd800af907d425d964736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP15 0xB5 NUMBER 0xED PUSH2 0x4A7 0x4B PUSH19 0x5B2B04A72531B5813299BDA0C709DD800AF907 0xD4 0x25 0xD9 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "134:7684:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220439eb543ed6104a74b725b2b04a72531b5813299bda0c709dd800af907d425d964736f6c63430007040033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DiamodSafe.sol": {
				"DiamondSafe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "_dripRate",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_compounded",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onCompound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_deposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_contributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onDonate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onDonateBNB",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_divs",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onSetFeeSplit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IERC721[]",
									"name": "oldOne",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "contract IERC721[]",
									"name": "newOne",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onSetImmunityToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "invested",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "soldTokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_liquidated",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensEarned",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_withdrawn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onWithdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "accountOf",
							"outputs": [
								{
									"internalType": "uint256[14]",
									"name": "",
									"type": "uint256[14]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bnbReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "calculateSharesReceived",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "calculateTokensReceived",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "checkImmunity",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isImmune",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "dailyEstimate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "dividendsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "donate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dripPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dripRate",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forDivs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "jpeg",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPayout",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRebaseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myEarnings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "payoutFrequency",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFrequency",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiredBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pool",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_divs",
									"type": "uint256"
								}
							],
							"name": "setFeeSplit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721[]",
									"name": "_contract",
									"type": "address[]"
								}
							],
							"name": "setImmunityToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "tokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalClaims",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTxs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DiamodSafe.sol\":205:21435  contract DiamondSafe is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DiamodSafe.sol\":4489:5051  constructor(address _tokenAddress, uint8 _dripRate) Ownable() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"contracts/Ownable.sol\":877:894  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":897:909  _msgSender() */\n  tag_6\n    /* \"contracts/Ownable.sol\":897:907  _msgSender */\n  tag_7\n    /* \"contracts/Ownable.sol\":897:909  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"contracts/Ownable.sol\":919:925  _owner */\n  0x00\n    /* \"contracts/Ownable.sol\":919:937  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/Ownable.sol\":952:995  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/Ownable.sol\":919:937  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/Ownable.sol\":952:995  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Ownable.sol\":919:925  _owner */\n  dup3\n  swap1\n    /* \"contracts/Ownable.sol\":952:995  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/DiamodSafe.sol\":4582:4609  _tokenAddress != address(0) */\n  dup3\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"contracts/DiamodSafe.sol\":4582:4646  _tokenAddress != address(0) && Address.isContract(_tokenAddress) */\n  tag_10\n  jumpi\n  pop\n    /* \"contracts/DiamodSafe.sol\":4613:4646  Address.isContract(_tokenAddress) */\n  tag_10\n    /* \"contracts/DiamodSafe.sol\":4632:4645  _tokenAddress */\n  dup3\n    /* \"contracts/DiamodSafe.sol\":4613:4631  Address.isContract */\n  or(tag_0_209, shl(0x20, tag_11))\n    /* \"contracts/DiamodSafe.sol\":4613:4646  Address.isContract(_tokenAddress) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/DiamodSafe.sol\":4561:4687  require(... */\n  tag_12\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x0f\n  0x24\n  dup3\n  add\n  mstore\n  shl(0x88, 0x494e56414c49445f41444452455353)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_12:\n    /* \"contracts/DiamodSafe.sol\":4698:4710  tokenAddress */\n  0x03\n    /* \"contracts/DiamodSafe.sol\":4698:4726  tokenAddress = _tokenAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap4\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap4\n  dup5\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/DiamodSafe.sol\":4736:4772  stakingToken = IERC20(_tokenAddress) */\n  dup1\n  sload\n  dup5\n  and\n  swap1\n  swap2\n  or\n  dup2\n  sstore\n    /* \"contracts/DiamodSafe.sol\":4783:4794  bnbReceiver */\n  0x04\n    /* \"contracts/DiamodSafe.sol\":4783:4807  bnbReceiver = msg.sender */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n    /* \"contracts/DiamodSafe.sol\":4797:4807  msg.sender */\n  caller\n    /* \"contracts/DiamodSafe.sol\":4783:4807  bnbReceiver = msg.sender */\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/DiamodSafe.sol\":4887:4895  dripRate */\n  0x0c\n    /* \"contracts/DiamodSafe.sol\":4887:4907  dripRate = _dripRate */\n  dup1\n  sload\n  0xff\n  swap1\n  swap3\n  and\n  not(0xff)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/DiamodSafe.sol\":4931:4946  block.timestamp */\n  timestamp\n    /* \"contracts/DiamodSafe.sol\":4917:4927  lastPayout */\n  0x08\n    /* \"contracts/DiamodSafe.sol\":4917:4947  lastPayout = (block.timestamp) */\n  swap1\n  dup2\n  sstore\n    /* \"contracts/DiamodSafe.sol\":4982:4989  forPool */\n  0x0d\n    /* \"contracts/DiamodSafe.sol\":4982:4993  forPool = 8 */\n  sstore\n  0x02\n    /* \"contracts/DiamodSafe.sol\":5003:5010  forDivs */\n  0x0e\n    /* \"contracts/DiamodSafe.sol\":5003:5014  forDivs = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/DiamodSafe.sol\":5025:5044  requiredBalance = 1 */\n  sstore\n    /* \"contracts/DiamodSafe.sol\":205:21435  contract DiamondSafe is Ownable {... */\n  jump(tag_13)\n    /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_7:\n    /* \"contracts/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_11:\n    /* \"contracts/Address.sol\":1086:1106  extcodesize(account) */\n  extcodesize\n    /* \"contracts/Address.sol\":1124:1132  size > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"contracts/DiamodSafe.sol\":205:21435  contract DiamondSafe is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DiamodSafe.sol\":205:21435  contract DiamondSafe is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd7c3771d\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf69e2046\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf6db0da0\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xfbaf1bbd\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xffaad6a5\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xffe6bbd8\n      eq\n      tag_45\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0xd7c3771d\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe02e1e9c\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xeedc966a\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf14faf6f\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2020275\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0xad7a672f\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xad7a672f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xaecb6d28\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb03cf5a7\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb9db102a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd3261592\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x949e8acd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa01496de\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x4b750334\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x7d882097\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x7d882097\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7e6335c7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8086b8ba\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x81fce645\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8620410b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x89375abf\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x4b750334\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x537a39bb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x1f38b9cd\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x1f38b9cd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36599ead\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x41c61383\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x65318b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08560ace\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10d0ffdd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1924063e\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/DiamodSafe.sol\":5238:5249  bnbReceiver */\n      sload(0x04)\n        /* \"contracts/DiamodSafe.sol\":5220:5261  Address.sendValue(bnbReceiver, msg.value) */\n      tag_55\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":5238:5249  bnbReceiver */\n      and\n        /* \"contracts/DiamodSafe.sol\":5251:5260  msg.value */\n      callvalue\n        /* \"contracts/DiamodSafe.sol\":5220:5237  Address.sendValue */\n      tag_56\n        /* \"contracts/DiamodSafe.sol\":5220:5261  Address.sendValue(bnbReceiver, msg.value) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/DiamodSafe.sol\":5276:5327  onDonateBNB(msg.sender, msg.value, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/DiamodSafe.sol\":5300:5309  msg.value */\n      callvalue\n        /* \"contracts/DiamodSafe.sol\":5276:5327  onDonateBNB(msg.sender, msg.value, block.timestamp) */\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":5311:5326  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":5276:5327  onDonateBNB(msg.sender, msg.value, block.timestamp) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n        /* \"contracts/DiamodSafe.sol\":5288:5298  msg.sender */\n      caller\n      swap3\n        /* \"contracts/DiamodSafe.sol\":5276:5327  onDonateBNB(msg.sender, msg.value, block.timestamp) */\n      0x3c2bd1b3f5ca07afb09fbee41ac43da2b98d9c2e9832673052e546bd1d4c091d\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/DiamodSafe.sol\":205:21435  contract DiamondSafe is Ownable {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DiamodSafe.sol\":10942:11182  function dividendsOf(address _user) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_60\n      jump\t// in\n    tag_58:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/DiamodSafe.sol\":538:568  uint256 public requiredBalance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_58\n      tag_63\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":12032:12377  function calculateTokensReceived(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      calldataload\n      tag_67\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10841:10936  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_58\n      tag_70\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1652:1681  uint256 public lastRebaseTime */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_58\n      tag_73\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1446:1465  uint public forDivs */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_58\n      tag_76\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":8025:9550  function withdraw(uint256 _amount) public onlyHolders {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      calldataload\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/DiamodSafe.sol\":9920:10287  function checkImmunity(address _user) public view returns (bool isImmune) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_84\n      jump\t// in\n    tag_82:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/DiamodSafe.sol\":1053:1076  uint public totalClaims */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_58\n      tag_87\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":7113:8003  function harvest() public onlyEarners {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_78\n      tag_90\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":11188:11453  function sellPrice() public pure returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_58\n      tag_93\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":828:848  uint public totalTxs */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_58\n      tag_96\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10499:10604  function balanceOf(address _user) public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_100\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1710:1855  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_78\n      tag_103\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":345:371  IERC20 public stakingToken */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/DiamodSafe.sol\":1082:1107  uint public totalDeposits */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_58\n      tag_109\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":13391:13801  function setFeeSplit(... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_113\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":12383:12980  function accountOf(address _user) public view returns (uint256[14] memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      0x01c0\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_118:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_118)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe.sol\":1562:1613  uint256 public constant payoutFrequency = 2 seconds */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_58\n      tag_123\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":11459:11723  function buyPrice() public pure returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_58\n      tag_126\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1507:1556  uint256 public constant rebaseFrequency = 6 hours */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_58\n      tag_129\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1078:1163  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_105\n      tag_132\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10293:10388  function myTokens() public view returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_58\n      tag_135\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":650:677  address public tokenAddress */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_105\n      tag_138\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1421:1440  uint public forPool */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_58\n      tag_141\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":9572:9731  function transfer(... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_145\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10720:10835  function totalBalance() public view returns (uint256) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_58\n      tag_148\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1164:1191  uint public dripPoolBalance */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_58\n      tag_151\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":723:744  IERC721[] public jpeg */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      calldataload\n      tag_155\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":6022:6132  function deposit(uint _amount) public returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      calldataload\n      tag_159\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":926:948  uint public lastPayout */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_58\n      tag_162\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1197:1218  uint8 public dripRate */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/DiamodSafe.sol\":683:717  address payable public bnbReceiver */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_105\n      tag_168\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":11729:12026  function calculateSharesReceived(... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      calldataload\n      tag_172\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10610:10714  function tokenBalance(address _user) public view returns (uint256) {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_176\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":5480:6001  function donate(uint _amount) public returns (uint256) {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      calldataload\n      tag_180\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":805:822  uint public users */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_58\n      tag_183\n      jump\t// in\n        /* \"contracts/Ownable.sol\":2004:2244  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_187\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":7019:7092  function compound() public onlyEarners {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_78\n      tag_190\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":13863:14387  function setImmunityToken(... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_197\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":12986:13269  function dailyEstimate(address _user) public view returns (uint256) {... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_201\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":6155:6997  function depositTo(address _user, uint _amount) public returns (uint256) {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_205\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10394:10493  function myEarnings() public view returns (uint256) {... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_58\n      tag_208\n      jump\t// in\n        /* \"contracts/Address.sol\":2056:2447  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_56:\n        /* \"contracts/Address.sol\":2170:2176  amount */\n      dup1\n        /* \"contracts/Address.sol\":2145:2166  address(this).balance */\n      selfbalance\n        /* \"contracts/Address.sol\":2145:2176  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"contracts/Address.sol\":2137:2210  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_211\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/Address.sol\":2317:2352  recipient.call{ value: amount }(\"\") */\n      mload(0x40)\n        /* \"contracts/Address.sol\":2299:2311  bool success */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Address.sol\":2317:2331  recipient.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/Address.sol\":2340:2346  amount */\n      dup4\n      swap1\n        /* \"contracts/Address.sol\":2299:2311  bool success */\n      dup4\n        /* \"contracts/Address.sol\":2317:2352  recipient.call{ value: amount }(\"\") */\n      dup2\n        /* \"contracts/Address.sol\":2299:2311  bool success */\n      dup2\n        /* \"contracts/Address.sol\":2317:2352  recipient.call{ value: amount }(\"\") */\n      dup2\n        /* \"contracts/Address.sol\":2340:2346  amount */\n      dup6\n        /* \"contracts/Address.sol\":2317:2331  recipient.call */\n      dup8\n        /* \"contracts/Address.sol\":2317:2352  recipient.call{ value: amount }(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_214\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_213)\n    tag_214:\n      0x60\n      swap2\n      pop\n    tag_213:\n      pop\n        /* \"contracts/Address.sol\":2298:2352  (bool success, ) = recipient.call{ value: amount }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Address.sol\":2370:2377  success */\n      dup1\n        /* \"contracts/Address.sol\":2362:2440  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/Address.sol\":2056:2447  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":10942:11182  function dividendsOf(address _user) public view returns (uint256) {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":11132:11149  payoutsOf_[_user] */\n      dup2\n      and\n        /* \"contracts/DiamodSafe.sol\":10999:11006  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":11132:11149  payoutsOf_[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":11132:11142  payoutsOf_ */\n      0x12\n        /* \"contracts/DiamodSafe.sol\":11132:11149  payoutsOf_[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":11091:11101  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":11091:11108  balanceOf_[_user] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":11073:11088  profitPerShare_ */\n      sload(0x11)\n      shl(0x40, 0x01)\n        /* \"contracts/DiamodSafe.sol\":1346:1353  2 ** 64 */\n      swap3\n        /* \"contracts/DiamodSafe.sol\":11073:11108  profitPerShare_ * balanceOf_[_user] */\n      swap2\n      mul\n        /* \"contracts/DiamodSafe.sol\":11064:11149  (int256)(profitPerShare_ * balanceOf_[_user]) -... */\n      sub\n        /* \"contracts/DiamodSafe.sol\":11037:11175  (uint256)(... */\n      div\n        /* \"contracts/DiamodSafe.sol\":11018:11175  return... */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":10942:11182  function dividendsOf(address _user) public view returns (uint256) {... */\n    tag_216:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":538:568  uint256 public requiredBalance */\n    tag_63:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":12032:12377  function calculateTokensReceived(... */\n    tag_67:\n        /* \"contracts/DiamodSafe.sol\":12117:12124  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":12155:12173  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":12144:12151  _amount */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":12144:12173  _amount <= currentTotalStaked */\n      gt\n      iszero\n        /* \"contracts/DiamodSafe.sol\":12136:12174  require(_amount <= currentTotalStaked) */\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/DiamodSafe.sol\":12202:12209  _amount */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":12184:12199  uint256 _tokens */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":12237:12286  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      tag_220\n        /* \"contracts/DiamodSafe.sol\":12250:12280  SafeMath.mul(_tokens, divsFee) */\n      tag_221\n        /* \"contracts/DiamodSafe.sol\":12202:12209  _amount */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":1300:1302  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":12250:12262  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":12250:12280  SafeMath.mul(_tokens, divsFee) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/DiamodSafe.sol\":12282:12285  100 */\n      0x64\n        /* \"contracts/DiamodSafe.sol\":12237:12249  SafeMath.div */\n      tag_223\n        /* \"contracts/DiamodSafe.sol\":12237:12286  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/DiamodSafe.sol\":12219:12286  uint256 _divies = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":12296:12312  uint256 _remains */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":12315:12345  SafeMath.sub(_tokens, _divies) */\n      tag_224\n        /* \"contracts/DiamodSafe.sol\":12328:12335  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12337:12344  _divies */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12315:12327  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":12315:12345  SafeMath.sub(_tokens, _divies) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/DiamodSafe.sol\":12296:12345  uint256 _remains = SafeMath.sub(_tokens, _divies) */\n      swap6\n        /* \"contracts/DiamodSafe.sol\":12032:12377  function calculateTokensReceived(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":10841:10936  function totalSupply() public view returns (uint256) {... */\n    tag_70:\n        /* \"contracts/DiamodSafe.sol\":10911:10929  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":10841:10936  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1652:1681  uint256 public lastRebaseTime */\n    tag_73:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1446:1465  uint public forDivs */\n    tag_76:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":8025:9550  function withdraw(uint256 _amount) public onlyHolders {... */\n    tag_80:\n        /* \"contracts/DiamodSafe.sol\":2057:2058  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":2044:2054  myTokens() */\n      tag_228\n        /* \"contracts/DiamodSafe.sol\":2044:2052  myTokens */\n      tag_135\n        /* \"contracts/DiamodSafe.sol\":2044:2054  myTokens() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/DiamodSafe.sol\":2044:2058  myTokens() > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":2036:2059  require(myTokens() > 0) */\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n        /* \"contracts/DiamodSafe.sol\":8105:8115  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":8089:8102  address _user */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":8144:8161  balanceOf_[_user] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":8144:8154  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":8144:8161  balanceOf_[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":8133:8161  _amount <= balanceOf_[_user] */\n      dup3\n      gt\n      iszero\n        /* \"contracts/DiamodSafe.sol\":8125:8162  require(_amount <= balanceOf_[_user]) */\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/DiamodSafe.sol\":8173:8200  uint256 _undividedDividends */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":8236:8239  100 */\n      0x64\n        /* \"contracts/DiamodSafe.sol\":8203:8233  SafeMath.mul(_amount, divsFee) */\n      tag_232\n        /* \"contracts/DiamodSafe.sol\":8216:8223  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":1300:1302  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":8203:8215  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":8203:8233  SafeMath.mul(_amount, divsFee) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/DiamodSafe.sol\":8203:8239  SafeMath.mul(_amount, divsFee) / 100 */\n      dup2\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      div\n        /* \"contracts/DiamodSafe.sol\":8173:8239  uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":8266:8279  bool isImmune */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":8282:8307  checkImmunity(msg.sender) */\n      tag_234\n        /* \"contracts/DiamodSafe.sol\":8296:8306  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":8282:8295  checkImmunity */\n      tag_84\n        /* \"contracts/DiamodSafe.sol\":8282:8307  checkImmunity(msg.sender) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/DiamodSafe.sol\":8266:8307  bool isImmune = checkImmunity(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":8347:8355  isImmune */\n      dup1\n        /* \"contracts/DiamodSafe.sol\":8343:8472  if (isImmune) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":8455:8456  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":8433:8456  _undividedDividends = 0 */\n      swap2\n      pop\n        /* \"contracts/DiamodSafe.sol\":8343:8472  if (isImmune) {... */\n    tag_235:\n        /* \"contracts/DiamodSafe.sol\":8536:8557  uint256  _taxedTokens */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":8560:8602  SafeMath.sub(_amount, _undividedDividends) */\n      tag_236\n        /* \"contracts/DiamodSafe.sol\":8573:8580  _amount */\n      dup6\n        /* \"contracts/DiamodSafe.sol\":8582:8601  _undividedDividends */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":8560:8572  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":8560:8602  SafeMath.sub(_amount, _undividedDividends) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/DiamodSafe.sol\":8536:8602  uint256  _taxedTokens = SafeMath.sub(_amount, _undividedDividends) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":8633:8674  SafeMath.sub(currentTotalStaked, _amount) */\n      tag_237\n        /* \"contracts/DiamodSafe.sol\":8646:8664  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":8666:8673  _amount */\n      dup7\n        /* \"contracts/DiamodSafe.sol\":8633:8645  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":8633:8674  SafeMath.sub(currentTotalStaked, _amount) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/DiamodSafe.sol\":8612:8630  currentTotalStaked */\n      0x10\n        /* \"contracts/DiamodSafe.sol\":8612:8674  currentTotalStaked = SafeMath.sub(currentTotalStaked, _amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":8717:8734  balanceOf_[_user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":8717:8727  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":8717:8734  balanceOf_[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":8704:8744  SafeMath.sub(balanceOf_[_user], _amount) */\n      tag_238\n      swap1\n        /* \"contracts/DiamodSafe.sol\":8736:8743  _amount */\n      dup7\n        /* \"contracts/DiamodSafe.sol\":8704:8716  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":8704:8744  SafeMath.sub(balanceOf_[_user], _amount) */\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":8684:8701  balanceOf_[_user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":8684:8694  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":8684:8701  balanceOf_[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":8684:8744  balanceOf_[_user] = SafeMath.sub(balanceOf_[_user], _amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DiamodSafe.sol\":8873:8888  profitPerShare_ */\n      sload(0x11)\n        /* \"contracts/DiamodSafe.sol\":8947:8957  payoutsOf_ */\n      0x12\n        /* \"contracts/DiamodSafe.sol\":8947:8964  payoutsOf_[_user] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":8947:8983  payoutsOf_[_user] -= _updatedPayouts */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":8873:8898  profitPerShare_ * _amount */\n      swap2\n      dup8\n      mul\n      shl(0x40, 0x01)\n        /* \"contracts/DiamodSafe.sol\":8902:8926  _taxedTokens * magnitude */\n      dup5\n      mul\n        /* \"contracts/DiamodSafe.sol\":8873:8927  profitPerShare_ * _amount + (_taxedTokens * magnitude) */\n      add\n        /* \"contracts/DiamodSafe.sol\":8947:8983  payoutsOf_[_user] -= _updatedPayouts */\n      swap2\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":9064:9097  allocateFees(_undividedDividends) */\n      tag_239\n        /* \"contracts/DiamodSafe.sol\":9077:9096  _undividedDividends */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":9064:9076  allocateFees */\n      tag_240\n        /* \"contracts/DiamodSafe.sol\":9064:9097  allocateFees(_undividedDividends) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/DiamodSafe.sol\":9169:9226  onWithdraw(_user, _amount, _taxedTokens, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"contracts/DiamodSafe.sol\":9210:9225  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":9169:9226  onWithdraw(_user, _amount, _taxedTokens, block.timestamp) */\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap2\n      0x90ebb005d68efee044927e1e77e1fd0cecc508368aa72c39250a787eed5f0a70\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      log2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":9279:9458  onUpdate(... */\n      dup6\n      and\n        /* \"contracts/DiamodSafe.sol\":9320:9337  accountOf_[_user] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":9320:9330  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":9320:9337  accountOf_[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":9320:9347  accountOf_[_user].deposited */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":9361:9371  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":9361:9378  balanceOf_[_user] */\n      dup5\n      mstore\n      swap5\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":9392:9409  accountOf_[_user] */\n      swap4\n      dup4\n      mstore\n        /* \"contracts/DiamodSafe.sol\":9392:9419  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":9279:9458  onUpdate(... */\n      dup2\n      mload\n      swap5\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":9433:9448  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":9279:9458  onUpdate(... */\n      0x60\n      dup4\n      add\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_27cc9c295b15a532bb1b5f9308f1d54813e694c2ebdd1c2ced210bfe52dcd57e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log2\n        /* \"contracts/DiamodSafe.sol\":9527:9539  distribute() */\n      tag_241\n        /* \"contracts/DiamodSafe.sol\":9527:9537  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe.sol\":9527:9539  distribute() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/DiamodSafe.sol\":2069:2070  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":8025:9550  function withdraw(uint256 _amount) public onlyHolders {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":9920:10287  function checkImmunity(address _user) public view returns (bool isImmune) {... */\n    tag_84:\n        /* \"contracts/DiamodSafe.sol\":9979:9992  bool isImmune */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"contracts/DiamodSafe.sol\":10054:10189  for(uint i =0; i < jpeg.length; i++){... */\n    tag_244:\n        /* \"contracts/DiamodSafe.sol\":10073:10077  jpeg */\n      0x05\n        /* \"contracts/DiamodSafe.sol\":10073:10084  jpeg.length */\n      sload\n        /* \"contracts/DiamodSafe.sol\":10069:10084  i < jpeg.length */\n      dup2\n      lt\n        /* \"contracts/DiamodSafe.sol\":10054:10189  for(uint i =0; i < jpeg.length; i++){... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":10124:10128  jpeg */\n      0x05\n        /* \"contracts/DiamodSafe.sol\":10129:10130  i */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":10124:10131  jpeg[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":10152:10178  jpegTest1.balanceOf(_user) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/DiamodSafe.sol\":10124:10131  jpeg[i] */\n      swap2\n      swap1\n      swap3\n      and\n      swap5\n      pop\n      dup5\n      swap3\n        /* \"contracts/DiamodSafe.sol\":10152:10171  jpegTest1.balanceOf */\n      0x70a08231\n      swap3\n        /* \"contracts/DiamodSafe.sol\":10152:10178  jpegTest1.balanceOf(_user) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/DiamodSafe.sol\":10124:10131  jpeg[i] */\n      dup7\n        /* \"contracts/DiamodSafe.sol\":10152:10178  jpegTest1.balanceOf(_user) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      mload\n        /* \"contracts/DiamodSafe.sol\":10147:10178  x += jpegTest1.balanceOf(_user) */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"contracts/DiamodSafe.sol\":10086:10089  i++ */\n      0x01\n      add\n        /* \"contracts/DiamodSafe.sol\":10054:10189  for(uint i =0; i < jpeg.length; i++){... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"contracts/DiamodSafe.sol\":10206:10221  requiredBalance */\n      sload(0x02)\n        /* \"contracts/DiamodSafe.sol\":10201:10202  x */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":10201:10221  x >= requiredBalance */\n      lt\n        /* \"contracts/DiamodSafe.sol\":10197:10259  if (x >= requiredBalance) {... */\n      tag_253\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":10244:10248  true */\n      0x01\n        /* \"contracts/DiamodSafe.sol\":10237:10248  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_216)\n        /* \"contracts/DiamodSafe.sol\":10197:10259  if (x >= requiredBalance) {... */\n    tag_253:\n      pop\n        /* \"contracts/DiamodSafe.sol\":10275:10280  false */\n      0x00\n      swap4\n        /* \"contracts/DiamodSafe.sol\":9920:10287  function checkImmunity(address _user) public view returns (bool isImmune) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1053:1076  uint public totalClaims */\n    tag_87:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":7113:8003  function harvest() public onlyEarners {... */\n    tag_90:\n        /* \"contracts/DiamodSafe.sol\":2192:2193  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":2177:2189  myEarnings() */\n      tag_255\n        /* \"contracts/DiamodSafe.sol\":2177:2187  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe.sol\":2177:2189  myEarnings() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/DiamodSafe.sol\":2177:2193  myEarnings() > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":2169:2194  require(myEarnings() > 0) */\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n        /* \"contracts/DiamodSafe.sol\":7177:7187  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":7161:7174  address _user */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":7218:7230  myEarnings() */\n      tag_258\n        /* \"contracts/DiamodSafe.sol\":7218:7228  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe.sol\":7218:7230  myEarnings() */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":7324:7341  payoutsOf_[_user] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":7324:7334  payoutsOf_ */\n      0x12\n        /* \"contracts/DiamodSafe.sol\":7324:7341  payoutsOf_[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":7324:7377  payoutsOf_[_user] += (int256)(_dividends * magnitude) */\n      dup1\n      sload\n      shl(0x40, 0x01)\n        /* \"contracts/DiamodSafe.sol\":7354:7376  _dividends * magnitude */\n      dup9\n      mul\n        /* \"contracts/DiamodSafe.sol\":7324:7377  payoutsOf_[_user] += (int256)(_dividends * magnitude) */\n      add\n      swap1\n      sstore\n      0x01\n        /* \"contracts/DiamodSafe.sol\":7441:7453  stakingToken */\n      sload\n        /* \"contracts/DiamodSafe.sol\":7441:7481  stakingToken.transfer(_user, _dividends) */\n      dup2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0x24\n      dup6\n      add\n      dup8\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"contracts/DiamodSafe.sol\":7197:7230  uint256 _dividends = myEarnings() */\n      swap6\n      swap7\n      pop\n        /* \"contracts/DiamodSafe.sol\":7441:7453  stakingToken */\n      swap1\n      swap4\n      and\n      swap4\n        /* \"contracts/DiamodSafe.sol\":7441:7462  stakingToken.transfer */\n      0xa9059cbb\n      swap4\n        /* \"contracts/DiamodSafe.sol\":7441:7481  stakingToken.transfer(_user, _dividends) */\n      0x44\n      dup1\n      dup6\n      add\n      swap5\n        /* \"contracts/DiamodSafe.sol\":7324:7341  payoutsOf_[_user] */\n      swap2\n      swap4\n        /* \"contracts/DiamodSafe.sol\":7441:7481  stakingToken.transfer(_user, _dividends) */\n      swap2\n      dup4\n      swap1\n      sub\n      add\n      swap1\n      dup3\n      swap1\n        /* \"contracts/DiamodSafe.sol\":7441:7453  stakingToken */\n      dup8\n        /* \"contracts/DiamodSafe.sol\":7441:7481  stakingToken.transfer(_user, _dividends) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":7612:7629  accountOf_[_user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":7612:7622  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":7441:7481  stakingToken.transfer(_user, _dividends) */\n      0x20\n        /* \"contracts/DiamodSafe.sol\":7612:7629  accountOf_[_user] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":7612:7639  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":7586:7673  SafeMath.add(... */\n      tag_263\n      swap1\n        /* \"contracts/DiamodSafe.sol\":7653:7663  _dividends */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":7586:7598  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":7586:7673  SafeMath.add(... */\n      jump\t// in\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":7556:7573  accountOf_[_user] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":7556:7566  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":7556:7573  accountOf_[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":7556:7583  accountOf_[_user].withdrawn */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"contracts/DiamodSafe.sol\":7556:7673  accountOf_[_user].withdrawn = SafeMath.add(... */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/DiamodSafe.sol\":7683:7711  accountOf_[_user].xWithdrawn */\n      0x0b\n      add\n        /* \"contracts/DiamodSafe.sol\":7683:7716  accountOf_[_user].xWithdrawn += 1 */\n      dup1\n      sload\n      dup6\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":7773:7781  totalTxs */\n      0x07\n        /* \"contracts/DiamodSafe.sol\":7773:7786  totalTxs += 1 */\n      dup1\n      sload\n      swap1\n      swap5\n      add\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DiamodSafe.sol\":7796:7807  totalClaims */\n      0x09\n        /* \"contracts/DiamodSafe.sol\":7796:7821  totalClaims += _dividends */\n      dup1\n      sload\n      dup6\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":7868:7914  onWithdraw(_user, _dividends, block.timestamp) */\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":7898:7913  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":7868:7914  onWithdraw(_user, _dividends, block.timestamp) */\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      dup1\n      mload\n        /* \"contracts/DiamodSafe.sol\":7556:7573  accountOf_[_user] */\n      swap2\n      swap3\n        /* \"contracts/DiamodSafe.sol\":7868:7914  onWithdraw(_user, _dividends, block.timestamp) */\n      0x1b091269e929df55d64d6ea7e9cadbe4fb38dce5ccdc995767bc515030dbfbbf\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log2\n        /* \"contracts/DiamodSafe.sol\":7984:7996  distribute() */\n      tag_265\n        /* \"contracts/DiamodSafe.sol\":7984:7994  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe.sol\":7984:7996  distribute() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/DiamodSafe.sol\":2204:2205  _ */\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":7113:8003  function harvest() public onlyEarners {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":11188:11453  function sellPrice() public pure returns (uint256) {... */\n    tag_93:\n        /* \"contracts/DiamodSafe.sol\":11230:11237  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":11267:11271  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DiamodSafe.sol\":11230:11237  uint256 */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":11302:11351  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      tag_267\n        /* \"contracts/DiamodSafe.sol\":11315:11345  SafeMath.mul(_tokens, divsFee) */\n      tag_221\n        /* \"contracts/DiamodSafe.sol\":11267:11271  1e18 */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":1300:1302  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":11315:11327  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":11315:11345  SafeMath.mul(_tokens, divsFee) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":11302:11351  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n    tag_267:\n        /* \"contracts/DiamodSafe.sol\":11281:11351  uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":11361:11381  uint256 _taxedTokens */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":11384:11417  SafeMath.sub(_tokens, _dividends) */\n      tag_269\n        /* \"contracts/DiamodSafe.sol\":11397:11404  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":11406:11416  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":11384:11396  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":11384:11417  SafeMath.sub(_tokens, _dividends) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/DiamodSafe.sol\":11361:11417  uint256 _taxedTokens = SafeMath.sub(_tokens, _dividends) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":11188:11453  function sellPrice() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":828:848  uint public totalTxs */\n    tag_96:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":10499:10604  function balanceOf(address _user) public view returns (uint256) {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":10580:10597  balanceOf_[_user] */\n      and\n        /* \"contracts/DiamodSafe.sol\":10554:10561  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":10580:10597  balanceOf_[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":10580:10590  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":10580:10597  balanceOf_[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/DiamodSafe.sol\":10499:10604  function balanceOf(address _user) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1710:1855  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_272\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_274\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_275\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/Ownable.sol\":1816:1817  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1800:1806  _owner */\n      dup1\n      sload\n        /* \"contracts/Ownable.sol\":1779:1819  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1800:1806  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Ownable.sol\":1779:1819  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/Ownable.sol\":1816:1817  0 */\n      dup4\n      swap1\n        /* \"contracts/Ownable.sol\":1779:1819  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/Ownable.sol\":1846:1847  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1829:1848  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Ownable.sol\":1710:1855  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":345:371  IERC20 public stakingToken */\n    tag_106:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1082:1107  uint public totalDeposits */\n    tag_109:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":13391:13801  function setFeeSplit(... */\n    tag_113:\n        /* \"contracts/DiamodSafe.sol\":13490:13503  bool _success */\n      0x00\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_278\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_279\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/DiamodSafe.sol\":13523:13539  _pool.add(_divs) */\n      tag_282\n        /* \"contracts/DiamodSafe.sol\":13523:13528  _pool */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":13533:13538  _divs */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":13523:13532  _pool.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":13523:13539  _pool.add(_divs) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/DiamodSafe.sol\":13543:13545  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":13523:13545  _pool.add(_divs) == 10 */\n      eq\n        /* \"contracts/DiamodSafe.sol\":13515:13579  require(_pool.add(_divs) == 10, \"TEN_PORTIONS_REQUIRE_DIVISION\") */\n      tag_283\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x54454e5f504f5254494f4e535f524551554952455f4449564953494f4e000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_283:\n        /* \"contracts/DiamodSafe.sol\":13623:13630  forPool */\n      0x0d\n        /* \"contracts/DiamodSafe.sol\":13623:13638  forPool = _pool */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":13648:13655  forDivs */\n      0x0e\n        /* \"contracts/DiamodSafe.sol\":13648:13663  forDivs = _divs */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":13729:13773  onSetFeeSplit(_pool, _divs, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"contracts/DiamodSafe.sol\":13757:13772  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":13729:13773  onSetFeeSplit(_pool, _divs, block.timestamp) */\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      0x677017fa3a0fe0f50a95e6024c5b688f2b14a4696c4a897c459715cabfc1c03a\n      swap2\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      log1\n      pop\n        /* \"contracts/DiamodSafe.sol\":13790:13794  true */\n      0x01\n        /* \"contracts/Ownable.sol\":1360:1361  _ */\n    tag_281:\n        /* \"contracts/DiamodSafe.sol\":13391:13801  function setFeeSplit(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":12383:12980  function accountOf(address _user) public view returns (uint256[14] memory) {... */\n    tag_117:\n        /* \"contracts/DiamodSafe.sol\":12438:12456  uint256[14] memory */\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/DiamodSafe.sol\":12468:12484  Account memory a */\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":12487:12504  accountOf_[_user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":12487:12497  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":12487:12504  accountOf_[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":12468:12504  Account memory a = accountOf_[_user] */\n      dup3\n      mload\n      0x01c0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n      0x06\n      dup3\n      add\n      sload\n      0xc0\n      dup3\n      add\n      mstore\n      0x07\n      dup3\n      add\n      sload\n      0xe0\n      dup3\n      add\n      mstore\n      0x08\n      dup3\n      add\n      sload\n      0x0100\n      dup3\n      add\n      mstore\n      0x09\n      dup3\n      add\n      sload\n      0x0120\n      dup3\n      add\n      mstore\n      0x0a\n      dup3\n      add\n      sload\n      0x0140\n      dup3\n      add\n      mstore\n      0x0b\n      dup3\n      add\n      sload\n      0x0160\n      dup3\n      add\n      mstore\n      0x0c\n      dup3\n      add\n      sload\n      0x0180\n      dup3\n      add\n      mstore\n      0x0d\n      swap1\n      swap2\n      add\n      sload\n      0x01a0\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":12514:12545  uint256[14] memory accountArray */\n      tag_289\n      tag_285\n      jump\t// in\n    tag_289:\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/DiamodSafe.sol\":12562:12563  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12562:12573  a.deposited */\n      0x00\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12587:12588  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12587:12598  a.withdrawn */\n      0x20\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12612:12613  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12612:12622  a.rewarded */\n      0x60\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12636:12637  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12636:12648  a.compounded */\n      0x40\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12662:12663  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12662:12675  a.contributed */\n      0x80\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12689:12690  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12689:12708  a.transferredShares */\n      0xa0\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12722:12723  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12722:12738  a.receivedShares */\n      0xc0\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12752:12753  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12752:12763  a.xInvested */\n      0xe0\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12777:12778  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12777:12788  a.xRewarded */\n      0x0120\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12802:12803  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12802:12816  a.xContributed */\n      0x0140\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12830:12831  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12830:12842  a.xWithdrawn */\n      0x0160\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12856:12857  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12856:12876  a.xTransferredShares */\n      0x0180\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12890:12891  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12890:12907  a.xReceivedShares */\n      0x01a0\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe.sol\":12921:12922  a */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":12921:12934  a.xCompounded */\n      0x0100\n      add\n      mload\n        /* \"contracts/DiamodSafe.sol\":12514:12944  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":12961:12973  accountArray */\n      dup1\n        /* \"contracts/DiamodSafe.sol\":12954:12973  return accountArray */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":12383:12980  function accountOf(address _user) public view returns (uint256[14] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1562:1613  uint256 public constant payoutFrequency = 2 seconds */\n    tag_123:\n        /* \"contracts/DiamodSafe.sol\":1604:1613  2 seconds */\n      0x02\n        /* \"contracts/DiamodSafe.sol\":1562:1613  uint256 public constant payoutFrequency = 2 seconds */\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":11459:11723  function buyPrice() public pure returns (uint256) {... */\n    tag_126:\n        /* \"contracts/DiamodSafe.sol\":11500:11507  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":11537:11541  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DiamodSafe.sol\":11500:11507  uint256 */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":11572:11621  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      tag_291\n        /* \"contracts/DiamodSafe.sol\":11585:11615  SafeMath.mul(_tokens, divsFee) */\n      tag_221\n        /* \"contracts/DiamodSafe.sol\":11537:11541  1e18 */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":1300:1302  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":11585:11597  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":11585:11615  SafeMath.mul(_tokens, divsFee) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":11572:11621  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n    tag_291:\n        /* \"contracts/DiamodSafe.sol\":11551:11621  uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":11631:11651  uint256 _taxedTokens */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":11654:11687  SafeMath.add(_tokens, _dividends) */\n      tag_269\n        /* \"contracts/DiamodSafe.sol\":11667:11674  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":11676:11686  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":11654:11666  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":11654:11687  SafeMath.add(_tokens, _dividends) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":1507:1556  uint256 public constant rebaseFrequency = 6 hours */\n    tag_129:\n        /* \"contracts/DiamodSafe.sol\":1549:1556  6 hours */\n      0x5460\n        /* \"contracts/DiamodSafe.sol\":1507:1556  uint256 public constant rebaseFrequency = 6 hours */\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1078:1163  function owner() public view virtual returns (address) {... */\n    tag_132:\n        /* \"contracts/Ownable.sol\":1124:1131  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1150:1156  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Ownable.sol\":1078:1163  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":10293:10388  function myTokens() public view returns (uint256) {... */\n    tag_135:\n        /* \"contracts/DiamodSafe.sol\":10334:10341  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":10360:10381  balanceOf(msg.sender) */\n      tag_296\n        /* \"contracts/DiamodSafe.sol\":10370:10380  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":10360:10369  balanceOf */\n      tag_100\n        /* \"contracts/DiamodSafe.sol\":10360:10381  balanceOf(msg.sender) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/DiamodSafe.sol\":10353:10381  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":10293:10388  function myTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":650:677  address public tokenAddress */\n    tag_138:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1421:1440  uint public forPool */\n    tag_141:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":9572:9731  function transfer(... */\n    tag_145:\n        /* \"contracts/DiamodSafe.sol\":9672:9676  bool */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":2057:2058  0 */\n      dup1\n        /* \"contracts/DiamodSafe.sol\":2044:2054  myTokens() */\n      tag_298\n        /* \"contracts/DiamodSafe.sol\":2044:2052  myTokens */\n      tag_135\n        /* \"contracts/DiamodSafe.sol\":2044:2054  myTokens() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/DiamodSafe.sol\":2044:2058  myTokens() > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":2036:2059  require(myTokens() > 0) */\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n        /* \"contracts/DiamodSafe.sol\":9695:9724  _transferTokens(_to, _amount) */\n      tag_301\n        /* \"contracts/DiamodSafe.sol\":9711:9714  _to */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":9716:9723  _amount */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":9695:9710  _transferTokens */\n      tag_302\n        /* \"contracts/DiamodSafe.sol\":9695:9724  _transferTokens(_to, _amount) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/DiamodSafe.sol\":9688:9724  return _transferTokens(_to, _amount) */\n      swap4\n        /* \"contracts/DiamodSafe.sol\":9572:9731  function transfer(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":10720:10835  function totalBalance() public view returns (uint256) {... */\n    tag_148:\n        /* \"contracts/DiamodSafe.sol\":10791:10803  stakingToken */\n      sload(0x01)\n        /* \"contracts/DiamodSafe.sol\":10791:10828  stakingToken.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":10822:10826  this */\n      address\n        /* \"contracts/DiamodSafe.sol\":10791:10828  stakingToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/DiamodSafe.sol\":10765:10772  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":10791:10803  stakingToken */\n      and\n      swap2\n        /* \"contracts/DiamodSafe.sol\":10791:10813  stakingToken.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/DiamodSafe.sol\":10791:10828  stakingToken.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/DiamodSafe.sol\":10791:10803  stakingToken */\n      dup7\n        /* \"contracts/DiamodSafe.sol\":10791:10828  stakingToken.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":10720:10835  function totalBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1164:1191  uint public dripPoolBalance */\n    tag_151:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":723:744  IERC721[] public jpeg */\n    tag_155:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":6022:6132  function deposit(uint _amount) public returns (uint256) {... */\n    tag_159:\n        /* \"contracts/DiamodSafe.sol\":6069:6076  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":6095:6125  depositTo(msg.sender, _amount) */\n      tag_281\n        /* \"contracts/DiamodSafe.sol\":6105:6115  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":6117:6124  _amount */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":6095:6104  depositTo */\n      tag_205\n        /* \"contracts/DiamodSafe.sol\":6095:6125  depositTo(msg.sender, _amount) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":926:948  uint public lastPayout */\n    tag_162:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":1197:1218  uint8 public dripRate */\n    tag_165:\n      and(0xff, sload(0x0c))\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":683:717  address payable public bnbReceiver */\n    tag_168:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":11729:12026  function calculateSharesReceived(... */\n    tag_172:\n        /* \"contracts/DiamodSafe.sol\":11814:11821  uint256 */\n      0x00\n      dup1\n        /* \"contracts/DiamodSafe.sol\":11851:11900  SafeMath.div(SafeMath.mul(_amount, divsFee), 100) */\n      tag_313\n        /* \"contracts/DiamodSafe.sol\":11864:11894  SafeMath.mul(_amount, divsFee) */\n      tag_221\n        /* \"contracts/DiamodSafe.sol\":11877:11884  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":1300:1302  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":11864:11876  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":11864:11894  SafeMath.mul(_amount, divsFee) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":11851:11900  SafeMath.div(SafeMath.mul(_amount, divsFee), 100) */\n    tag_313:\n        /* \"contracts/DiamodSafe.sol\":11833:11900  uint256 _divies = SafeMath.div(SafeMath.mul(_amount, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":11910:11926  uint256 _remains */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":11929:11959  SafeMath.sub(_amount, _divies) */\n      tag_315\n        /* \"contracts/DiamodSafe.sol\":11942:11949  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":11951:11958  _divies */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":11929:11941  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":11929:11959  SafeMath.sub(_amount, _divies) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/DiamodSafe.sol\":11910:11959  uint256 _remains = SafeMath.sub(_amount, _divies) */\n      swap5\n        /* \"contracts/DiamodSafe.sol\":11729:12026  function calculateSharesReceived(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":10610:10714  function tokenBalance(address _user) public view returns (uint256) {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":10694:10707  _user.balance */\n      and\n      balance\n      swap1\n        /* \"contracts/DiamodSafe.sol\":10610:10714  function tokenBalance(address _user) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":5480:6001  function donate(uint _amount) public returns (uint256) {... */\n    tag_180:\n        /* \"contracts/DiamodSafe.sol\":5623:5635  stakingToken */\n      sload(0x01)\n        /* \"contracts/DiamodSafe.sol\":5623:5684  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":5649:5659  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":5623:5684  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":5669:5673  this */\n      address\n        /* \"contracts/DiamodSafe.sol\":5623:5684  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"contracts/DiamodSafe.sol\":5526:5533  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":5623:5635  stakingToken */\n      and\n      swap2\n        /* \"contracts/DiamodSafe.sol\":5623:5648  stakingToken.transferFrom */\n      0x23b872dd\n      swap2\n        /* \"contracts/DiamodSafe.sol\":5623:5684  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/DiamodSafe.sol\":5526:5533  uint256 */\n      dup8\n        /* \"contracts/DiamodSafe.sol\":5623:5635  stakingToken */\n      dup8\n        /* \"contracts/DiamodSafe.sol\":5623:5684  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_318:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_320:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_321\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_321:\n      pop\n      mload\n        /* \"contracts/DiamodSafe.sol\":5615:5685  require(stakingToken.transferFrom(msg.sender, address(this), _amount)) */\n      tag_322\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_322:\n        /* \"contracts/DiamodSafe.sol\":5747:5762  dripPoolBalance */\n      0x0b\n        /* \"contracts/DiamodSafe.sol\":5747:5773  dripPoolBalance += _amount */\n      dup1\n      sload\n      dup4\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":5794:5804  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":5747:5762  dripPoolBalance */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":5783:5805  accountOf_[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":5783:5793  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":5783:5805  accountOf_[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":5783:5818  accountOf_[msg.sender].xContributed */\n      0x0a\n      add\n        /* \"contracts/DiamodSafe.sol\":5783:5823  accountOf_[msg.sender].xContributed += 1 */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":5916:5962  onDonate(msg.sender, _amount, block.timestamp) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":5946:5961  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":5916:5962  onDonate(msg.sender, _amount, block.timestamp) */\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mload\n      0x0da1788c3e861a58a47f0d46073b13c4d66efcc259714744f920d1afe7b8dee5\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":5979:5994  dripPoolBalance */\n      sload(0x0b)\n      swap1\n        /* \"contracts/DiamodSafe.sol\":5480:6001  function donate(uint _amount) public returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":805:822  uint public users */\n    tag_183:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2004:2244  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_187:\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_324\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_325\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_326\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":2092:2114  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/Ownable.sol\":2084:2157  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"contracts/Ownable.sol\":2193:2199  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/Ownable.sol\":2172:2210  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/Ownable.sol\":2193:2199  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/Ownable.sol\":2172:2210  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/Ownable.sol\":2220:2226  _owner */\n      0x00\n        /* \"contracts/Ownable.sol\":2220:2237  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Ownable.sol\":2004:2244  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":7019:7092  function compound() public onlyEarners {... */\n    tag_190:\n        /* \"contracts/DiamodSafe.sol\":2192:2193  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":2177:2189  myEarnings() */\n      tag_330\n        /* \"contracts/DiamodSafe.sol\":2177:2187  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe.sol\":2177:2189  myEarnings() */\n      jump\t// in\n    tag_330:\n        /* \"contracts/DiamodSafe.sol\":2177:2193  myEarnings() > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":2169:2194  require(myEarnings() > 0) */\n      tag_331\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_331:\n        /* \"contracts/DiamodSafe.sol\":7068:7085  _compoundTokens() */\n      tag_333\n        /* \"contracts/DiamodSafe.sol\":7068:7083  _compoundTokens */\n      tag_334\n        /* \"contracts/DiamodSafe.sol\":7068:7085  _compoundTokens() */\n      jump\t// in\n    tag_333:\n      pop\n        /* \"contracts/DiamodSafe.sol\":7019:7092  function compound() public onlyEarners {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":13863:14387  function setImmunityToken(... */\n    tag_197:\n        /* \"contracts/DiamodSafe.sol\":13957:13970  bool _success */\n      0x00\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_336\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_337\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_337:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_338\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_338:\n        /* \"contracts/DiamodSafe.sol\":13982:13988  uint i */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":13978:14144  for(uint i =0; i < jpeg.length; i++){... */\n    tag_340:\n        /* \"contracts/DiamodSafe.sol\":13997:14001  jpeg */\n      0x05\n        /* \"contracts/DiamodSafe.sol\":13997:14008  jpeg.length */\n      sload\n        /* \"contracts/DiamodSafe.sol\":13993:14008  i < jpeg.length */\n      dup2\n      lt\n        /* \"contracts/DiamodSafe.sol\":13978:14144  for(uint i =0; i < jpeg.length; i++){... */\n      iszero\n      tag_341\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":14076:14085  _contract */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":14086:14087  i */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":14076:14088  _contract[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_343\n      jumpi\n      invalid\n    tag_343:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":14076:14106  _contract[i].supportsInterface */\n      and\n      0x01ffc9a7\n        /* \"contracts/DiamodSafe.sol\":14107:14117  0x80ac58cd */\n      0x80ac58cd\n        /* \"contracts/DiamodSafe.sol\":14076:14118  _contract[i].supportsInterface(0x80ac58cd) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xe0\n      shl\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_347\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_347:\n      pop\n      mload\n        /* \"contracts/DiamodSafe.sol\":14068:14133  require(_contract[i].supportsInterface(0x80ac58cd), \"NOT_ERC721\") */\n      tag_348\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x4e4f545f455243373231)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_348:\n        /* \"contracts/DiamodSafe.sol\":14010:14013  i++ */\n      0x01\n      add\n        /* \"contracts/DiamodSafe.sol\":13978:14144  for(uint i =0; i < jpeg.length; i++){... */\n      jump(tag_340)\n    tag_341:\n      pop\n        /* \"contracts/DiamodSafe.sol\":14153:14181  IERC721[] memory oldContract */\n      0x60\n        /* \"contracts/DiamodSafe.sol\":14184:14188  jpeg */\n      0x05\n        /* \"contracts/DiamodSafe.sol\":14153:14188  IERC721[] memory oldContract = jpeg */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_349\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_350:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_350\n      jumpi\n    tag_349:\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":14198:14214  jpeg = _contract */\n      dup7\n      mload\n        /* \"contracts/DiamodSafe.sol\":14153:14188  IERC721[] memory oldContract = jpeg */\n      swap4\n      swap5\n      pop\n        /* \"contracts/DiamodSafe.sol\":14198:14214  jpeg = _contract */\n      tag_351\n      swap4\n        /* \"contracts/DiamodSafe.sol\":14198:14202  jpeg */\n      0x05\n      swap4\n      pop\n        /* \"contracts/DiamodSafe.sol\":14198:14214  jpeg = _contract */\n      0x20\n      dup9\n      add\n      swap3\n      pop\n      swap1\n      pop\n      tag_352\n      jump\t// in\n    tag_351:\n      pop\n        /* \"contracts/DiamodSafe.sol\":14262:14272  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":14230:14359  onSetImmunityToken(... */\n      and\n      0xf0650831416f723858005cfeae97a2d6f5e127d1e6ae8938574d1d73e7f4727c\n        /* \"contracts/DiamodSafe.sol\":14286:14297  oldContract */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":14311:14320  _contract */\n      dup6\n        /* \"contracts/DiamodSafe.sol\":14334:14349  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":14230:14359  onSetImmunityToken(... */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_353:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_355\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_353)\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_356:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_358\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_356)\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/DiamodSafe.sol\":14376:14380  true */\n      0x01\n      swap3\n        /* \"contracts/DiamodSafe.sol\":13863:14387  function setImmunityToken(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":12986:13269  function dailyEstimate(address _user) public view returns (uint256) {... */\n    tag_201:\n        /* \"contracts/DiamodSafe.sol\":13100:13108  dripRate */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe.sol\":13080:13095  dripPoolBalance */\n      sload(0x0b)\n        /* \"contracts/DiamodSafe.sol\":13045:13052  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"contracts/DiamodSafe.sol\":13080:13118  dripPoolBalance.mul(dripRate).div(100) */\n      tag_360\n      swap2\n        /* \"contracts/DiamodSafe.sol\":13114:13117  100 */\n      0x64\n      swap2\n        /* \"contracts/DiamodSafe.sol\":13080:13109  dripPoolBalance.mul(dripRate) */\n      tag_361\n      swap2\n        /* \"contracts/DiamodSafe.sol\":13100:13108  dripRate */\n      0xff\n      and\n        /* \"contracts/DiamodSafe.sol\":13080:13099  dripPoolBalance.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":13080:13109  dripPoolBalance.mul(dripRate) */\n      jump\t// in\n    tag_361:\n        /* \"contracts/DiamodSafe.sol\":13080:13113  dripPoolBalance.mul(dripRate).div */\n      swap1\n      tag_223\n        /* \"contracts/DiamodSafe.sol\":13080:13118  dripPoolBalance.mul(dripRate).div(100) */\n      jump\t// in\n    tag_360:\n        /* \"contracts/DiamodSafe.sol\":13064:13118  uint256 share = dripPoolBalance.mul(dripRate).div(100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":13169:13170  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":13148:13166  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":13148:13170  currentTotalStaked > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":13147:13262  (currentTotalStaked > 0)... */\n      tag_362\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":13261:13262  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":13147:13262  (currentTotalStaked > 0)... */\n      jump(tag_301)\n    tag_362:\n        /* \"contracts/DiamodSafe.sol\":13223:13241  currentTotalStaked */\n      sload(0x10)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":13200:13217  balanceOf_[_user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":13200:13210  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":13200:13217  balanceOf_[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":13190:13242  share.mul(balanceOf_[_user]).div(currentTotalStaked) */\n      tag_301\n      swap2\n        /* \"contracts/DiamodSafe.sol\":13223:13241  currentTotalStaked */\n      swap1\n        /* \"contracts/DiamodSafe.sol\":13190:13218  share.mul(balanceOf_[_user]) */\n      tag_361\n      swap1\n        /* \"contracts/DiamodSafe.sol\":13190:13195  share */\n      dup5\n      swap1\n        /* \"contracts/DiamodSafe.sol\":13190:13199  share.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":13190:13218  share.mul(balanceOf_[_user]) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":6155:6997  function depositTo(address _user, uint _amount) public returns (uint256) {... */\n    tag_205:\n        /* \"contracts/DiamodSafe.sol\":6316:6328  stakingToken */\n      sload(0x01)\n        /* \"contracts/DiamodSafe.sol\":6316:6377  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":6342:6352  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":6316:6377  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":6362:6366  this */\n      address\n        /* \"contracts/DiamodSafe.sol\":6316:6377  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"contracts/DiamodSafe.sol\":6219:6226  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":6316:6328  stakingToken */\n      and\n      swap2\n        /* \"contracts/DiamodSafe.sol\":6316:6341  stakingToken.transferFrom */\n      0x23b872dd\n      swap2\n        /* \"contracts/DiamodSafe.sol\":6316:6377  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/DiamodSafe.sol\":6219:6226  uint256 */\n      dup8\n        /* \"contracts/DiamodSafe.sol\":6316:6328  stakingToken */\n      dup8\n        /* \"contracts/DiamodSafe.sol\":6316:6377  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_370\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_370:\n      pop\n      mload\n        /* \"contracts/DiamodSafe.sol\":6308:6378  require(stakingToken.transferFrom(msg.sender, address(this), _amount)) */\n      tag_371\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_371:\n        /* \"contracts/DiamodSafe.sol\":6440:6453  totalDeposits */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":6440:6464  totalDeposits += _amount */\n      dup1\n      sload\n      dup4\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":6440:6453  totalDeposits */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":6541:6571  _depositTokens(_user, _amount) */\n      tag_372\n        /* \"contracts/DiamodSafe.sol\":6556:6561  _user */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":6457:6464  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":6541:6555  _depositTokens */\n      tag_373\n        /* \"contracts/DiamodSafe.sol\":6541:6571  _depositTokens(_user, _amount) */\n      jump\t// in\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":6624:6803  onUpdate(... */\n      dup6\n      and\n        /* \"contracts/DiamodSafe.sol\":6665:6682  accountOf_[_user] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":6665:6675  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":6665:6682  accountOf_[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":6665:6692  accountOf_[_user].deposited */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":6706:6716  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":6706:6723  balanceOf_[_user] */\n      dup5\n      mstore\n      swap5\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":6737:6754  accountOf_[_user] */\n      swap4\n      dup4\n      mstore\n        /* \"contracts/DiamodSafe.sol\":6737:6764  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":6624:6803  onUpdate(... */\n      dup2\n      mload\n      swap5\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":6778:6793  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":6624:6803  onUpdate(... */\n      0x60\n      dup4\n      add\n      mstore\n      mload\n        /* \"contracts/DiamodSafe.sol\":6527:6571  uint amount = _depositTokens(_user, _amount) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/DiamodSafe.sol\":6624:6803  onUpdate(... */\n      swap1\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_27cc9c295b15a532bb1b5f9308f1d54813e694c2ebdd1c2ced210bfe52dcd57e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log2\n        /* \"contracts/DiamodSafe.sol\":6878:6890  distribute() */\n      tag_301\n        /* \"contracts/DiamodSafe.sol\":6878:6888  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe.sol\":6878:6890  distribute() */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":10394:10493  function myEarnings() public view returns (uint256) {... */\n    tag_208:\n        /* \"contracts/DiamodSafe.sol\":10437:10444  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":10463:10486  dividendsOf(msg.sender) */\n      tag_296\n        /* \"contracts/DiamodSafe.sol\":10475:10485  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":10463:10474  dividendsOf */\n      tag_60\n        /* \"contracts/DiamodSafe.sol\":10463:10486  dividendsOf(msg.sender) */\n      jump\t// in\n        /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_209:\n        /* \"contracts/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"contracts/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_222:\n        /* \"contracts/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3619:3625  a == 0 */\n      dup3\n        /* \"contracts/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      tag_379\n      jumpi\n      pop\n        /* \"contracts/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3627:3635  return 0 */\n      jump(tag_281)\n        /* \"contracts/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_379:\n        /* \"contracts/SafeMath.sol\":3657:3662  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":3657:3662  a * b */\n      dup3\n        /* \"contracts/SafeMath.sol\":3657:3658  a */\n      dup2\n        /* \"contracts/SafeMath.sol\":3680:3685  c / a */\n      tag_380\n      jumpi\n      invalid\n    tag_380:\n      div\n        /* \"contracts/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_223:\n        /* \"contracts/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"contracts/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_383\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_383:\n        /* \"contracts/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_384\n      jumpi\n      invalid\n    tag_384:\n      div\n      swap4\n        /* \"contracts/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_225:\n        /* \"contracts/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_386\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_386:\n      pop\n        /* \"contracts/SafeMath.sol\":3279:3284  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":14557:15294  function allocateFees(uint fee) private {... */\n    tag_240:\n        /* \"contracts/DiamodSafe.sol\":14607:14624  uint256 _onePiece */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":14627:14638  fee.div(10) */\n      tag_388\n        /* \"contracts/DiamodSafe.sol\":14627:14630  fee */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":14635:14637  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":14627:14634  fee.div */\n      tag_223\n        /* \"contracts/DiamodSafe.sol\":14627:14638  fee.div(10) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/DiamodSafe.sol\":14607:14638  uint256 _onePiece = fee.div(10) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":14649:14665  uint256 _forPool */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":14669:14691  _onePiece.mul(forPool) */\n      tag_389\n        /* \"contracts/DiamodSafe.sol\":14683:14690  forPool */\n      sload(0x0d)\n        /* \"contracts/DiamodSafe.sol\":14669:14678  _onePiece */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":14669:14682  _onePiece.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe.sol\":14669:14691  _onePiece.mul(forPool) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_389:\n        /* \"contracts/DiamodSafe.sol\":14649:14692  uint256 _forPool = (_onePiece.mul(forPool)) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":14723:14739  uint256 _forDivs */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":14743:14765  _onePiece.mul(forDivs) */\n      tag_390\n        /* \"contracts/DiamodSafe.sol\":14757:14764  forDivs */\n      sload(0x0e)\n        /* \"contracts/DiamodSafe.sol\":14743:14752  _onePiece */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":14743:14756  _onePiece.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe.sol\":14743:14765  _onePiece.mul(forDivs) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_390:\n        /* \"contracts/DiamodSafe.sol\":14815:14830  dripPoolBalance */\n      sload(0x0b)\n        /* \"contracts/DiamodSafe.sol\":14723:14766  uint256 _forDivs = (_onePiece.mul(forDivs)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DiamodSafe.sol\":14815:14844  dripPoolBalance.add(_forPool) */\n      tag_391\n      swap1\n        /* \"contracts/DiamodSafe.sol\":14835:14843  _forPool */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":14815:14834  dripPoolBalance.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":14815:14844  dripPoolBalance.add(_forPool) */\n      jump\t// in\n    tag_391:\n        /* \"contracts/DiamodSafe.sol\":14797:14812  dripPoolBalance */\n      0x0b\n        /* \"contracts/DiamodSafe.sol\":14797:14844  dripPoolBalance = dripPoolBalance.add(_forPool) */\n      sstore\n        /* \"contracts/DiamodSafe.sol\":14923:14941  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":14923:14945  currentTotalStaked > 0 */\n      iszero\n        /* \"contracts/DiamodSafe.sol\":14919:15288  if (currentTotalStaked > 0) {... */\n      tag_392\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":15027:15147  SafeMath.add(... */\n      tag_393\n        /* \"contracts/DiamodSafe.sol\":15057:15072  profitPerShare_ */\n      sload(0x11)\n        /* \"contracts/DiamodSafe.sol\":15115:15133  currentTotalStaked */\n      sload(0x10)\n      shl(0x40, 0x01)\n        /* \"contracts/DiamodSafe.sol\":15091:15099  _forDivs */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":15091:15111  _forDivs * magnitude */\n      mul\n        /* \"contracts/DiamodSafe.sol\":15090:15133  (_forDivs * magnitude) / currentTotalStaked */\n      dup2\n      tag_394\n      jumpi\n      invalid\n    tag_394:\n      div\n        /* \"contracts/DiamodSafe.sol\":15027:15039  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":15027:15147  SafeMath.add(... */\n      jump\t// in\n    tag_393:\n        /* \"contracts/DiamodSafe.sol\":15009:15024  profitPerShare_ */\n      0x11\n        /* \"contracts/DiamodSafe.sol\":15009:15147  profitPerShare_ = SafeMath.add(... */\n      sstore\n        /* \"contracts/DiamodSafe.sol\":14919:15288  if (currentTotalStaked > 0) {... */\n      jump(tag_395)\n    tag_392:\n        /* \"contracts/DiamodSafe.sol\":15250:15265  dripPoolBalance */\n      0x0b\n        /* \"contracts/DiamodSafe.sol\":15250:15277  dripPoolBalance += _forDivs */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":14919:15288  if (currentTotalStaked > 0) {... */\n    tag_395:\n        /* \"contracts/DiamodSafe.sol\":14557:15294  function allocateFees(uint fee) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":15335:16577  function distribute() private {... */\n    tag_242:\n        /* \"contracts/DiamodSafe.sol\":15508:15522  lastRebaseTime */\n      sload(0x0f)\n        /* \"contracts/DiamodSafe.sol\":15401:15416  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/DiamodSafe.sol\":1549:1556  6 hours */\n      0x5460\n      swap1\n        /* \"contracts/DiamodSafe.sol\":15482:15523  _currentTimestamp.safeSub(lastRebaseTime) */\n      tag_397\n      swap1\n        /* \"contracts/DiamodSafe.sol\":15401:15416  block.timestamp */\n      dup4\n      swap1\n        /* \"contracts/DiamodSafe.sol\":15482:15507  _currentTimestamp.safeSub */\n      tag_398\n        /* \"contracts/DiamodSafe.sol\":15482:15523  _currentTimestamp.safeSub(lastRebaseTime) */\n      jump\t// in\n    tag_397:\n        /* \"contracts/DiamodSafe.sol\":15482:15541  _currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency */\n      gt\n        /* \"contracts/DiamodSafe.sol\":15478:15756  if (_currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":15597:15640  onRebase(totalBalance(), _currentTimestamp) */\n      0x2cfce469a63f2e9972b7f23da751e6943ed2b091c10e40b5c43b5f6105bf20ea\n        /* \"contracts/DiamodSafe.sol\":15606:15620  totalBalance() */\n      tag_400\n        /* \"contracts/DiamodSafe.sol\":15606:15618  totalBalance */\n      tag_148\n        /* \"contracts/DiamodSafe.sol\":15606:15620  totalBalance() */\n      jump\t// in\n    tag_400:\n        /* \"contracts/DiamodSafe.sol\":15597:15640  onRebase(totalBalance(), _currentTimestamp) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"contracts/DiamodSafe.sol\":15711:15725  lastRebaseTime */\n      0x0f\n        /* \"contracts/DiamodSafe.sol\":15711:15745  lastRebaseTime = _currentTimestamp */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":15478:15756  if (_currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency) {... */\n    tag_399:\n        /* \"contracts/DiamodSafe.sol\":1604:1613  2 seconds */\n      0x02\n        /* \"contracts/DiamodSafe.sol\":15828:15875  SafeMath.safeSub(_currentTimestamp, lastPayout) */\n      tag_401\n        /* \"contracts/DiamodSafe.sol\":15845:15862  _currentTimestamp */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":15864:15874  lastPayout */\n      sload(0x08)\n        /* \"contracts/DiamodSafe.sol\":15828:15844  SafeMath.safeSub */\n      tag_398\n        /* \"contracts/DiamodSafe.sol\":15828:15875  SafeMath.safeSub(_currentTimestamp, lastPayout) */\n      jump\t// in\n    tag_401:\n        /* \"contracts/DiamodSafe.sol\":15828:15893  SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency */\n      gt\n        /* \"contracts/DiamodSafe.sol\":15828:15931  SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency &&... */\n      dup1\n      iszero\n      tag_402\n      jumpi\n      pop\n        /* \"contracts/DiamodSafe.sol\":15930:15931  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":15909:15927  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":15909:15931  currentTotalStaked > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":15828:15931  SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency &&... */\n    tag_402:\n        /* \"contracts/DiamodSafe.sol\":15811:16571  if (... */\n      iszero\n      tag_333\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":16039:16047  dripRate */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe.sol\":16019:16034  dripPoolBalance */\n      sload(0x0b)\n        /* \"contracts/DiamodSafe.sol\":16003:16016  uint256 share */\n      0x00\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16019:16101  dripPoolBalance.mul(dripRate).div(100).div(... */\n      tag_404\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16079:16087  24 hours */\n      0x015180\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16019:16057  dripPoolBalance.mul(dripRate).div(100) */\n      tag_361\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16053:16056  100 */\n      0x64\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16019:16057  dripPoolBalance.mul(dripRate).div(100) */\n      dup4\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16019:16034  dripPoolBalance */\n      swap1\n        /* \"contracts/DiamodSafe.sol\":16039:16047  dripRate */\n      0xff\n      and\n        /* \"contracts/DiamodSafe.sol\":16019:16038  dripPoolBalance.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":16019:16048  dripPoolBalance.mul(dripRate) */\n      jump\t// in\n        /* \"contracts/DiamodSafe.sol\":16019:16101  dripPoolBalance.mul(dripRate).div(100).div(... */\n    tag_404:\n        /* \"contracts/DiamodSafe.sol\":16003:16101  uint256 share = dripPoolBalance.mul(dripRate).div(100).div(... */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":16115:16129  uint256 profit */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":16140:16177  _currentTimestamp.safeSub(lastPayout) */\n      tag_407\n        /* \"contracts/DiamodSafe.sol\":16166:16176  lastPayout */\n      sload(0x08)\n        /* \"contracts/DiamodSafe.sol\":16140:16157  _currentTimestamp */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":16140:16165  _currentTimestamp.safeSub */\n      tag_398\n      swap1\n        /* \"contracts/DiamodSafe.sol\":16140:16177  _currentTimestamp.safeSub(lastPayout) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_407:\n        /* \"contracts/DiamodSafe.sol\":16286:16301  dripPoolBalance */\n      sload(0x0b)\n        /* \"contracts/DiamodSafe.sol\":16132:16177  share * _currentTimestamp.safeSub(lastPayout) */\n      swap1\n      dup4\n      mul\n      swap2\n      pop\n        /* \"contracts/DiamodSafe.sol\":16286:16317  dripPoolBalance.safeSub(profit) */\n      tag_408\n      swap1\n        /* \"contracts/DiamodSafe.sol\":16132:16177  share * _currentTimestamp.safeSub(lastPayout) */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":16286:16309  dripPoolBalance.safeSub */\n      tag_398\n        /* \"contracts/DiamodSafe.sol\":16286:16317  dripPoolBalance.safeSub(profit) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/DiamodSafe.sol\":16268:16283  dripPoolBalance */\n      0x0b\n        /* \"contracts/DiamodSafe.sol\":16268:16317  dripPoolBalance = dripPoolBalance.safeSub(profit) */\n      sstore\n        /* \"contracts/DiamodSafe.sol\":16379:16394  profitPerShare_ */\n      sload(0x11)\n        /* \"contracts/DiamodSafe.sol\":16435:16453  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":16349:16467  SafeMath.add(... */\n      tag_409\n      swap2\n        /* \"contracts/DiamodSafe.sol\":16379:16394  profitPerShare_ */\n      swap1\n      shl(0x40, 0x01)\n        /* \"contracts/DiamodSafe.sol\":16413:16431  profit * magnitude */\n      dup5\n      mul\n        /* \"contracts/DiamodSafe.sol\":16435:16453  currentTotalStaked */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":16412:16453  (profit * magnitude) / currentTotalStaked */\n      tag_394\n      jumpi\n      invalid\n        /* \"contracts/DiamodSafe.sol\":16349:16467  SafeMath.add(... */\n    tag_409:\n        /* \"contracts/DiamodSafe.sol\":16331:16346  profitPerShare_ */\n      0x11\n        /* \"contracts/DiamodSafe.sol\":16331:16467  profitPerShare_ = SafeMath.add(... */\n      sstore\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":16530:16540  lastPayout */\n      0x08\n        /* \"contracts/DiamodSafe.sol\":16530:16560  lastPayout = _currentTimestamp */\n      sstore\n        /* \"contracts/DiamodSafe.sol\":15335:16577  function distribute() private {... */\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_264:\n        /* \"contracts/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_301\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_273:\n        /* \"contracts/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":19464:21433  function _transferTokens(... */\n    tag_302:\n        /* \"contracts/DiamodSafe.sol\":19609:19619  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":19566:19579  bool _success */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":19648:19667  balanceOf_[_sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19648:19658  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":19648:19667  balanceOf_[_sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":19566:19579  bool _success */\n      swap1\n      swap2\n        /* \"contracts/DiamodSafe.sol\":19609:19619  msg.sender */\n      swap1\n        /* \"contracts/DiamodSafe.sol\":19637:19667  _amount <= balanceOf_[_sender] */\n      dup4\n      gt\n      iszero\n        /* \"contracts/DiamodSafe.sol\":19629:19668  require(_amount <= balanceOf_[_sender]) */\n      tag_415\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_415:\n        /* \"contracts/DiamodSafe.sol\":19783:19784  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":19768:19780  myEarnings() */\n      tag_416\n        /* \"contracts/DiamodSafe.sol\":19768:19778  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe.sol\":19768:19780  myEarnings() */\n      jump\t// in\n    tag_416:\n        /* \"contracts/DiamodSafe.sol\":19768:19784  myEarnings() > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":19764:19820  if (myEarnings() > 0) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":19800:19809  harvest() */\n      tag_418\n        /* \"contracts/DiamodSafe.sol\":19800:19807  harvest */\n      tag_90\n        /* \"contracts/DiamodSafe.sol\":19800:19809  harvest() */\n      jump\t// in\n    tag_418:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":19897:19916  balanceOf_[_sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19897:19907  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":19897:19916  balanceOf_[_sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":19884:19926  SafeMath.sub(balanceOf_[_sender], _amount) */\n      tag_419\n      swap1\n        /* \"contracts/DiamodSafe.sol\":19918:19925  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":19884:19896  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":19884:19926  SafeMath.sub(balanceOf_[_sender], _amount) */\n      jump\t// in\n    tag_419:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":19862:19881  balanceOf_[_sender] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19862:19872  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":19862:19881  balanceOf_[_sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":19862:19926  balanceOf_[_sender] = SafeMath.sub(balanceOf_[_sender], _amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DiamodSafe.sol\":19974:19996  balanceOf_[_recipient] */\n      swap1\n      dup7\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":19961:20006  SafeMath.add(balanceOf_[_recipient], _amount) */\n      tag_420\n      swap1\n        /* \"contracts/DiamodSafe.sol\":19998:20005  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":19961:19973  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":19961:20006  SafeMath.add(balanceOf_[_recipient], _amount) */\n      jump\t// in\n    tag_420:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":19936:19958  balanceOf_[_recipient] */\n      dup6\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19936:19946  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":19936:19958  balanceOf_[_recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":19936:20006  balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _amount) */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20110:20125  profitPerShare_ */\n      0x11\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":20078:20097  payoutsOf_[_sender] */\n      swap5\n      dup8\n      and\n      dup4\n      mstore\n        /* \"contracts/DiamodSafe.sol\":20078:20088  payoutsOf_ */\n      0x12\n        /* \"contracts/DiamodSafe.sol\":20078:20097  payoutsOf_[_sender] */\n      dup3\n      mstore\n      dup6\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20078:20136  payoutsOf_[_sender] -= (int256)(profitPerShare_ * _amount) */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":20110:20135  profitPerShare_ * _amount */\n      swap6\n      dup11\n      mul\n        /* \"contracts/DiamodSafe.sol\":20078:20136  payoutsOf_[_sender] -= (int256)(profitPerShare_ * _amount) */\n      swap1\n      swap6\n      sub\n      swap1\n      swap5\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20181:20196  profitPerShare_ */\n      swap3\n      sload\n        /* \"contracts/DiamodSafe.sol\":20146:20168  payoutsOf_[_recipient] */\n      swap2\n      dup2\n      mstore\n      dup4\n      dup2\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20146:20207  payoutsOf_[_recipient] += (int256)(profitPerShare_ * _amount) */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":20181:20206  profitPerShare_ * _amount */\n      swap3\n      dup9\n      mul\n        /* \"contracts/DiamodSafe.sol\":20146:20207  payoutsOf_[_recipient] += (int256)(profitPerShare_ * _amount) */\n      swap1\n      swap3\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20310:20320  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":20310:20332  accountOf_[_recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20310:20342  accountOf_[_recipient].deposited */\n      sload\n        /* \"contracts/DiamodSafe.sol\":20310:20347  accountOf_[_recipient].deposited == 0 */\n      iszero\n        /* \"contracts/DiamodSafe.sol\":20310:20405  accountOf_[_recipient].deposited == 0 &&... */\n      dup1\n      iszero\n      tag_421\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":20363:20385  accountOf_[_recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":20363:20373  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":20363:20385  accountOf_[_recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20363:20400  accountOf_[_recipient].receivedShares */\n      0x06\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":20363:20405  accountOf_[_recipient].receivedShares == 0 */\n      iszero\n        /* \"contracts/DiamodSafe.sol\":20310:20405  accountOf_[_recipient].deposited == 0 &&... */\n    tag_421:\n        /* \"contracts/DiamodSafe.sol\":20293:20451  if (... */\n      iszero\n      tag_422\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":20430:20435  users */\n      0x06\n        /* \"contracts/DiamodSafe.sol\":20430:20440  users += 1 */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":20439:20440  1 */\n      0x01\n        /* \"contracts/DiamodSafe.sol\":20430:20440  users += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20293:20451  if (... */\n    tag_422:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":20487:20506  accountOf_[_sender] */\n      dup1\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":20487:20497  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":20487:20506  accountOf_[_sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20487:20525  accountOf_[_sender].xTransferredShares */\n      0x0c\n      dup2\n      add\n        /* \"contracts/DiamodSafe.sol\":20487:20530  accountOf_[_sender].xTransferredShares += 1 */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":20529:20530  1 */\n      0x01\n        /* \"contracts/DiamodSafe.sol\":20487:20530  accountOf_[_sender].xTransferredShares += 1 */\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20540:20577  accountOf_[_sender].transferredShares */\n      0x05\n      swap1\n      swap2\n      add\n        /* \"contracts/DiamodSafe.sol\":20540:20588  accountOf_[_sender].transferredShares += _amount */\n      dup1\n      sload\n      dup11\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20598:20620  accountOf_[_recipient] */\n      swap5\n      dup10\n      and\n      dup1\n      dup5\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20598:20635  accountOf_[_recipient].receivedShares */\n      0x06\n      dup2\n      add\n        /* \"contracts/DiamodSafe.sol\":20598:20646  accountOf_[_recipient].receivedShares += _amount */\n      dup1\n      sload\n      dup11\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20656:20694  accountOf_[_recipient].xReceivedShares */\n      0x0d\n      add\n        /* \"contracts/DiamodSafe.sol\":20656:20699  accountOf_[_recipient].xReceivedShares += 1 */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n      0x07\n        /* \"contracts/DiamodSafe.sol\":20751:20764  totalTxs += 1 */\n      dup1\n      sload\n      swap1\n      swap6\n      add\n      swap1\n      swap5\n      sstore\n        /* \"contracts/DiamodSafe.sol\":20830:20887  onTransfer(_sender, _recipient, _amount, block.timestamp) */\n      dup4\n      mload\n      dup8\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":20871:20886  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":20830:20887  onTransfer(_sender, _recipient, _amount, block.timestamp) */\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup4\n      mload\n        /* \"contracts/DiamodSafe.sol\":20598:20620  accountOf_[_recipient] */\n      swap2\n      swap4\n        /* \"contracts/DiamodSafe.sol\":20830:20887  onTransfer(_sender, _recipient, _amount, block.timestamp) */\n      0x91c7d71a3ae3fb7cf61e00517bf4868e9e23d0bace5e304cbc3b68de5d85350e\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":20951:21138  onUpdate(... */\n      dup2\n      and\n        /* \"contracts/DiamodSafe.sol\":20994:21013  accountOf_[_sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":20994:21004  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":20994:21013  accountOf_[_sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":20994:21023  accountOf_[_sender].deposited */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":21037:21047  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":21037:21056  balanceOf_[_sender] */\n      dup5\n      mstore\n      swap5\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":21070:21089  accountOf_[_sender] */\n      swap4\n      dup4\n      mstore\n        /* \"contracts/DiamodSafe.sol\":21070:21099  accountOf_[_sender].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":20951:21138  onUpdate(... */\n      dup2\n      mload\n      swap5\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":21113:21128  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":20951:21138  onUpdate(... */\n      0x60\n      dup4\n      add\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_27cc9c295b15a532bb1b5f9308f1d54813e694c2ebdd1c2ced210bfe52dcd57e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":21205:21404  onUpdate(... */\n      dup5\n      and\n        /* \"contracts/DiamodSafe.sol\":21251:21273  accountOf_[_recipient] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":21251:21261  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":21251:21273  accountOf_[_recipient] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":21251:21283  accountOf_[_recipient].deposited */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":21297:21307  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":21297:21319  balanceOf_[_recipient] */\n      dup5\n      mstore\n      swap5\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":21333:21355  accountOf_[_recipient] */\n      swap4\n      dup4\n      mstore\n        /* \"contracts/DiamodSafe.sol\":21333:21365  accountOf_[_recipient].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":21205:21404  onUpdate(... */\n      dup2\n      mload\n      swap5\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":21379:21394  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":21205:21404  onUpdate(... */\n      0x60\n      dup4\n      add\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_27cc9c295b15a532bb1b5f9308f1d54813e694c2ebdd1c2ced210bfe52dcd57e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log2\n      pop\n        /* \"contracts/DiamodSafe.sol\":21422:21426  true */\n      0x01\n      swap4\n        /* \"contracts/DiamodSafe.sol\":19464:21433  function _transferTokens(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":18239:19417  function _compoundTokens() internal returns (uint256) {... */\n    tag_334:\n        /* \"contracts/DiamodSafe.sol\":18284:18291  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":18319:18329  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":18284:18291  uint256 */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":18426:18444  dividendsOf(_user) */\n      tag_424\n        /* \"contracts/DiamodSafe.sol\":18319:18329  msg.sender */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":18426:18437  dividendsOf */\n      tag_60\n        /* \"contracts/DiamodSafe.sol\":18426:18444  dividendsOf(_user) */\n      jump\t// in\n    tag_424:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":18454:18471  payoutsOf_[_user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":18454:18464  payoutsOf_ */\n      0x12\n        /* \"contracts/DiamodSafe.sol\":18454:18471  payoutsOf_[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":18454:18507  payoutsOf_[_user] += (int256)(_dividends * magnitude) */\n      dup1\n      sload\n      shl(0x40, 0x01)\n        /* \"contracts/DiamodSafe.sol\":18484:18506  _dividends * magnitude */\n      dup5\n      mul\n        /* \"contracts/DiamodSafe.sol\":18454:18507  payoutsOf_[_user] += (int256)(_dividends * magnitude) */\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":18405:18444  uint256 _dividends = dividendsOf(_user) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DiamodSafe.sol\":18680:18718  _depositTokens(msg.sender, _dividends) */\n      tag_425\n        /* \"contracts/DiamodSafe.sol\":18695:18705  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe.sol\":18405:18444  uint256 _dividends = dividendsOf(_user) */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":18680:18694  _depositTokens */\n      tag_373\n        /* \"contracts/DiamodSafe.sol\":18680:18718  _depositTokens(msg.sender, _dividends) */\n      jump\t// in\n    tag_425:\n        /* \"contracts/DiamodSafe.sol\":18765:18820  onCompound(_user, _dividends, _tokens, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DiamodSafe.sol\":18804:18819  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":18765:18820  onCompound(_user, _dividends, _tokens, block.timestamp) */\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/DiamodSafe.sol\":18662:18718  uint256 _tokens = _depositTokens(msg.sender, _dividends) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":18765:18820  onCompound(_user, _dividends, _tokens, block.timestamp) */\n      dup6\n      and\n      swap2\n      0x193a876ac91d11a4a0a71ebef73b195ba55aa7c16d6755c93c21d973e692a02c\n      swap2\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      log2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":18924:18941  accountOf_[_user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":18924:18934  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":18924:18941  accountOf_[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":18924:18952  accountOf_[_user].compounded */\n      0x02\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":18898:18986  SafeMath.add(... */\n      tag_426\n      swap1\n        /* \"contracts/DiamodSafe.sol\":18966:18976  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":18898:18910  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":18898:18986  SafeMath.add(... */\n      jump\t// in\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":18867:18884  accountOf_[_user] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":18867:18877  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":18867:18884  accountOf_[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":18867:18895  accountOf_[_user].compounded */\n      0x02\n      dup2\n      add\n        /* \"contracts/DiamodSafe.sol\":18867:18986  accountOf_[_user].compounded = SafeMath.add(... */\n      swap7\n      swap1\n      swap7\n      sstore\n        /* \"contracts/DiamodSafe.sol\":18996:19025  accountOf_[_user].xCompounded */\n      0x08\n      dup7\n      add\n        /* \"contracts/DiamodSafe.sol\":18996:19030  accountOf_[_user].xCompounded += 1 */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":19029:19030  1 */\n      0x01\n        /* \"contracts/DiamodSafe.sol\":18996:19030  accountOf_[_user].xCompounded += 1 */\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DiamodSafe.sol\":19124:19151  accountOf_[_user].deposited */\n      dup7\n      sload\n        /* \"contracts/DiamodSafe.sol\":19165:19175  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":19165:19182  balanceOf_[_user] */\n      dup5\n      mstore\n      swap5\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":19196:19213  accountOf_[_user] */\n      swap4\n      dup4\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19196:19223  accountOf_[_user].withdrawn */\n      swap1\n      swap6\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":19083:19262  onUpdate(... */\n      dup6\n      mload\n      swap4\n      dup5\n      mstore\n      swap1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      dup5\n      add\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19237:19252  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":19083:19262  onUpdate(... */\n      0x60\n      dup3\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/DiamodSafe.sol\":18867:18884  accountOf_[_user] */\n      swap1\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_27cc9c295b15a532bb1b5f9308f1d54813e694c2ebdd1c2ced210bfe52dcd57e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":19083:19262  onUpdate(... */\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log2\n        /* \"contracts/DiamodSafe.sol\":19341:19353  distribute() */\n      tag_427\n        /* \"contracts/DiamodSafe.sol\":19341:19351  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe.sol\":19341:19353  distribute() */\n      jump\t// in\n    tag_427:\n        /* \"contracts/DiamodSafe.sol\":19403:19410  _tokens */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":18239:19417  function _compoundTokens() internal returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe.sol\":16623:18199  function _depositTokens(... */\n    tag_373:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":16835:16857  accountOf_[_recipient] */\n      dup3\n      and\n        /* \"contracts/DiamodSafe.sol\":16724:16731  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":16835:16857  accountOf_[_recipient] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":16835:16845  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":16835:16857  accountOf_[_recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":16835:16867  accountOf_[_recipient].deposited */\n      sload\n        /* \"contracts/DiamodSafe.sol\":16835:16872  accountOf_[_recipient].deposited == 0 */\n      iszero\n        /* \"contracts/DiamodSafe.sol\":16835:16930  accountOf_[_recipient].deposited == 0 &&... */\n      dup1\n      iszero\n      tag_429\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":16888:16910  accountOf_[_recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":16888:16898  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":16888:16910  accountOf_[_recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":16888:16925  accountOf_[_recipient].receivedShares */\n      0x06\n      add\n      sload\n        /* \"contracts/DiamodSafe.sol\":16888:16930  accountOf_[_recipient].receivedShares == 0 */\n      iszero\n        /* \"contracts/DiamodSafe.sol\":16835:16930  accountOf_[_recipient].deposited == 0 &&... */\n    tag_429:\n        /* \"contracts/DiamodSafe.sol\":16818:16976  if (... */\n      iszero\n      tag_430\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":16955:16960  users */\n      0x06\n        /* \"contracts/DiamodSafe.sol\":16955:16965  users += 1 */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":16964:16965  1 */\n      0x01\n        /* \"contracts/DiamodSafe.sol\":16955:16965  users += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":16818:16976  if (... */\n    tag_430:\n        /* \"contracts/DiamodSafe.sol\":17014:17022  totalTxs */\n      0x07\n        /* \"contracts/DiamodSafe.sol\":17014:17027  totalTxs += 1 */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":17026:17027  1 */\n      0x01\n        /* \"contracts/DiamodSafe.sol\":17014:17027  totalTxs += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":17014:17022  totalTxs */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":17106:17109  100 */\n      0x64\n        /* \"contracts/DiamodSafe.sol\":17073:17103  SafeMath.mul(_amount, divsFee) */\n      tag_431\n        /* \"contracts/DiamodSafe.sol\":17086:17093  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":1300:1302  10 */\n      0x0a\n        /* \"contracts/DiamodSafe.sol\":17073:17085  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe.sol\":17073:17103  SafeMath.mul(_amount, divsFee) */\n      jump\t// in\n    tag_431:\n        /* \"contracts/DiamodSafe.sol\":17073:17109  SafeMath.mul(_amount, divsFee) / 100 */\n      dup2\n      tag_432\n      jumpi\n      invalid\n    tag_432:\n      div\n        /* \"contracts/DiamodSafe.sol\":17043:17109  uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe.sol\":17121:17138  uint256   _tokens */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":17141:17183  SafeMath.sub(_amount, _undividedDividends) */\n      tag_433\n        /* \"contracts/DiamodSafe.sol\":17154:17161  _amount */\n      dup5\n        /* \"contracts/DiamodSafe.sol\":17163:17182  _undividedDividends */\n      dup4\n        /* \"contracts/DiamodSafe.sol\":17141:17153  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe.sol\":17141:17183  SafeMath.sub(_amount, _undividedDividends) */\n      jump\t// in\n    tag_433:\n        /* \"contracts/DiamodSafe.sol\":17238:17294  onDeposit(_recipient, _amount, _tokens, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DiamodSafe.sol\":17278:17293  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe.sol\":17238:17294  onDeposit(_recipient, _amount, _tokens, block.timestamp) */\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/DiamodSafe.sol\":17121:17183  uint256   _tokens = SafeMath.sub(_amount, _undividedDividends) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":17238:17294  onDeposit(_recipient, _amount, _tokens, block.timestamp) */\n      dup8\n      and\n      swap2\n      0xb49bb132260f6aa1c86e2d2a3957c097216e6ec9b5fa15867289f058b4d297ac\n      swap2\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      log2\n        /* \"contracts/DiamodSafe.sol\":17403:17404  0 */\n      0x00\n        /* \"contracts/DiamodSafe.sol\":17393:17400  _tokens */\n      dup2\n        /* \"contracts/DiamodSafe.sol\":17393:17404  _tokens > 0 */\n      gt\n        /* \"contracts/DiamodSafe.sol\":17393:17486  _tokens > 0 &&... */\n      dup1\n      iszero\n      tag_434\n      jumpi\n      pop\n        /* \"contracts/DiamodSafe.sol\":17468:17486  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":17424:17465  SafeMath.add(_tokens, currentTotalStaked) */\n      tag_435\n        /* \"contracts/DiamodSafe.sol\":17437:17444  _tokens */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":17468:17486  currentTotalStaked */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":17424:17436  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":17424:17465  SafeMath.add(_tokens, currentTotalStaked) */\n      jump\t// in\n    tag_435:\n        /* \"contracts/DiamodSafe.sol\":17424:17486  SafeMath.add(_tokens, currentTotalStaked) > currentTotalStaked */\n      gt\n        /* \"contracts/DiamodSafe.sol\":17393:17486  _tokens > 0 &&... */\n    tag_434:\n        /* \"contracts/DiamodSafe.sol\":17372:17496  require(... */\n      tag_436\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_436:\n        /* \"contracts/DiamodSafe.sol\":17510:17528  currentTotalStaked */\n      sload(0x10)\n        /* \"contracts/DiamodSafe.sol\":17510:17532  currentTotalStaked > 0 */\n      iszero\n        /* \"contracts/DiamodSafe.sol\":17506:17647  if (currentTotalStaked > 0) {... */\n      tag_437\n      jumpi\n        /* \"contracts/DiamodSafe.sol\":17548:17566  currentTotalStaked */\n      0x10\n        /* \"contracts/DiamodSafe.sol\":17548:17577  currentTotalStaked += _tokens */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":17506:17647  if (currentTotalStaked > 0) {... */\n      jump(tag_438)\n    tag_437:\n        /* \"contracts/DiamodSafe.sol\":17608:17626  currentTotalStaked */\n      0x10\n        /* \"contracts/DiamodSafe.sol\":17608:17636  currentTotalStaked = _tokens */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":17506:17647  if (currentTotalStaked > 0) {... */\n    tag_438:\n        /* \"contracts/DiamodSafe.sol\":17712:17745  allocateFees(_undividedDividends) */\n      tag_439\n        /* \"contracts/DiamodSafe.sol\":17725:17744  _undividedDividends */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":17712:17724  allocateFees */\n      tag_240\n        /* \"contracts/DiamodSafe.sol\":17712:17745  allocateFees(_undividedDividends) */\n      jump\t// in\n    tag_439:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":17793:17815  balanceOf_[_recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":17793:17803  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":17793:17815  balanceOf_[_recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe.sol\":17780:17825  SafeMath.add(balanceOf_[_recipient], _tokens) */\n      tag_440\n      swap1\n        /* \"contracts/DiamodSafe.sol\":17817:17824  _tokens */\n      dup3\n        /* \"contracts/DiamodSafe.sol\":17780:17792  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe.sol\":17780:17825  SafeMath.add(balanceOf_[_recipient], _tokens) */\n      jump\t// in\n    tag_440:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DiamodSafe.sol\":17755:17777  balanceOf_[_recipient] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DiamodSafe.sol\":17755:17765  balanceOf_ */\n      0x13\n        /* \"contracts/DiamodSafe.sol\":17755:17777  balanceOf_[_recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":17755:17825  balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DiamodSafe.sol\":17900:17915  profitPerShare_ */\n      sload(0x11)\n        /* \"contracts/DiamodSafe.sol\":17964:17974  payoutsOf_ */\n      0x12\n        /* \"contracts/DiamodSafe.sol\":17964:17986  payoutsOf_[_recipient] */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":17964:18005  payoutsOf_[_recipient] += _updatedPayouts */\n      dup1\n      sload\n        /* \"contracts/DiamodSafe.sol\":17900:17925  profitPerShare_ * _tokens */\n      swap2\n      dup7\n      mul\n        /* \"contracts/DiamodSafe.sol\":17964:18005  payoutsOf_[_recipient] += _updatedPayouts */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":18015:18025  accountOf_ */\n      0x14\n        /* \"contracts/DiamodSafe.sol\":18015:18037  accountOf_[_recipient] */\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/DiamodSafe.sol\":18015:18058  accountOf_[_recipient].deposited += _amount */\n      dup1\n      sload\n      dup6\n      add\n      dup2\n      sstore\n        /* \"contracts/DiamodSafe.sol\":18068:18100  accountOf_[_recipient].xInvested */\n      0x07\n      add\n        /* \"contracts/DiamodSafe.sol\":18068:18105  accountOf_[_recipient].xInvested += 1 */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/DiamodSafe.sol\":17918:17925  _tokens */\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe.sol\":16623:18199  function _depositTokens(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":7288:7453  function safeSub(uint a, uint b) internal pure returns (uint) {... */\n    tag_398:\n        /* \"contracts/SafeMath.sol\":7344:7348  uint */\n      0x00\n        /* \"contracts/SafeMath.sol\":7368:7369  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":7364:7365  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":7364:7369  b > a */\n      gt\n        /* \"contracts/SafeMath.sol\":7360:7447  if (b > a) {... */\n      iszero\n      tag_442\n      jumpi\n      pop\n        /* \"contracts/SafeMath.sol\":7392:7393  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":7385:7393  return 0 */\n      jump(tag_281)\n        /* \"contracts/SafeMath.sol\":7360:7447  if (b > a) {... */\n    tag_442:\n      pop\n        /* \"contracts/SafeMath.sol\":7431:7436  a - b */\n      dup1\n      dup3\n      sub\n        /* \"contracts/SafeMath.sol\":7424:7436  return a - b */\n      jump(tag_281)\n    tag_285:\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_288:\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_352:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_446\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_445:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_446\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_445)\n    tag_446:\n      pop\n      tag_447\n      swap3\n      swap2\n      pop\n      tag_448\n      jump\t// in\n    tag_447:\n      pop\n      swap1\n      jump\t// out\n    tag_448:\n    tag_449:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_447\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_449)\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_27cc9c295b15a532bb1b5f9308f1d54813e694c2ebdd1c2ced210bfe52dcd57e 29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177\n    data_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae 416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa26469706673582212206187f33088609c0b09f692026d0e9a829460aed741848a10ab062f7f78b3d40164736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200259738038062002597833981810160405260408110156200003757600080fd5b50805160209091015160006200004c62000167565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b03821615801590620000c05750620000c0826200016b60201b620019d01760201c565b62000104576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b600380546001600160a01b039093166001600160a01b031993841681179091556001805484169091178155600480549093163317909255600c805460ff90921660ff19909216919091179055426008908155600d556002600e8190555562000171565b3390565b3b151590565b61241680620001816000396000f3fe60806040526004361061025f5760003560e01c80638da5cb5b11610144578063d7c3771d116100b6578063f2fde38b1161007a578063f2fde38b146107a9578063f69e2046146107dc578063f6db0da0146107f1578063fbaf1bbd146108a1578063ffaad6a5146108d4578063ffe6bbd81461090d576102b5565b8063d7c3771d146106f8578063e02e1e9c1461070d578063eedc966a14610737578063f14faf6f1461076a578063f202027514610794576102b5565b8063ad7a672f11610108578063ad7a672f1461063a578063aecb6d281461064f578063b03cf5a714610664578063b6b55f251461068e578063b9db102a146106b8578063d3261592146106cd576102b5565b80638da5cb5b146105ad578063949e8acd146105c25780639d76ea58146105d7578063a01496de146105ec578063a9059cbb14610601576102b5565b80634b750334116101dd5780637d882097116101a15780637d882097146104bd5780637e6335c7146104d25780638086b8ba1461050257806381fce6451461056e5780638620410b1461058357806389375abf14610598576102b5565b80634b7503341461041a578063537a39bb1461042f57806370a0823114610444578063715018a61461047757806372f702f31461048c576102b5565b80631f38b9cd116102245780631f38b9cd146103685780632e1a7d4d1461037d57806336599ead146103a957806341c61383146103f05780634641257d14610405576102b5565b806265318b146102ba57806308560ace146102ff57806310d0ffdd1461031457806318160ddd1461033e5780631924063e14610353576102b5565b366102b55760045461027a906001600160a01b031634610922565b60408051348152426020820152815133927f3c2bd1b3f5ca07afb09fbee41ac43da2b98d9c2e9832673052e546bd1d4c091d928290030190a2005b600080fd5b3480156102c657600080fd5b506102ed600480360360208110156102dd57600080fd5b50356001600160a01b0316610a0c565b60408051918252519081900360200190f35b34801561030b57600080fd5b506102ed610a45565b34801561032057600080fd5b506102ed6004803603602081101561033757600080fd5b5035610a4b565b34801561034a57600080fd5b506102ed610a8b565b34801561035f57600080fd5b506102ed610a91565b34801561037457600080fd5b506102ed610a97565b34801561038957600080fd5b506103a7600480360360208110156103a057600080fd5b5035610a9d565b005b3480156103b557600080fd5b506103dc600480360360208110156103cc57600080fd5b50356001600160a01b0316610c3b565b604080519115158252519081900360200190f35b3480156103fc57600080fd5b506102ed610d06565b34801561041157600080fd5b506103a7610d0c565b34801561042657600080fd5b506102ed610e79565b34801561043b57600080fd5b506102ed610ea9565b34801561045057600080fd5b506102ed6004803603602081101561046757600080fd5b50356001600160a01b0316610eaf565b34801561048357600080fd5b506103a7610eca565b34801561049857600080fd5b506104a1610f76565b604080516001600160a01b039092168252519081900360200190f35b3480156104c957600080fd5b506102ed610f85565b3480156104de57600080fd5b506103dc600480360360408110156104f557600080fd5b5080359060200135610f8b565b34801561050e57600080fd5b506105356004803603602081101561052557600080fd5b50356001600160a01b03166110a0565b60405180826101c080838360005b8381101561055b578181015183820152602001610543565b5050505090500191505060405180910390f35b34801561057a57600080fd5b506102ed611217565b34801561058f57600080fd5b506102ed61121c565b3480156105a457600080fd5b506102ed611244565b3480156105b957600080fd5b506104a161124a565b3480156105ce57600080fd5b506102ed611259565b3480156105e357600080fd5b506104a1611269565b3480156105f857600080fd5b506102ed611278565b34801561060d57600080fd5b506103dc6004803603604081101561062457600080fd5b506001600160a01b03813516906020013561127e565b34801561064657600080fd5b506102ed6112a4565b34801561065b57600080fd5b506102ed611320565b34801561067057600080fd5b506104a16004803603602081101561068757600080fd5b5035611326565b34801561069a57600080fd5b506102ed600480360360208110156106b157600080fd5b5035611350565b3480156106c457600080fd5b506102ed61135c565b3480156106d957600080fd5b506106e2611362565b6040805160ff9092168252519081900360200190f35b34801561070457600080fd5b506104a161136b565b34801561071957600080fd5b506102ed6004803603602081101561073057600080fd5b503561137a565b34801561074357600080fd5b506102ed6004803603602081101561075a57600080fd5b50356001600160a01b03166113a1565b34801561077657600080fd5b506102ed6004803603602081101561078d57600080fd5b50356113ae565b3480156107a057600080fd5b506102ed6114a3565b3480156107b557600080fd5b506103a7600480360360208110156107cc57600080fd5b50356001600160a01b03166114a9565b3480156107e857600080fd5b506103a76115ab565b3480156107fd57600080fd5b506103dc6004803603602081101561081457600080fd5b81019060208101813564010000000081111561082f57600080fd5b82018360208201111561084157600080fd5b8035906020019184602083028401116401000000008311171561086357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506115ca945050505050565b3480156108ad57600080fd5b506102ed600480360360208110156108c457600080fd5b50356001600160a01b0316611857565b3480156108e057600080fd5b506102ed600480360360408110156108f757600080fd5b506001600160a01b0381351690602001356118ba565b34801561091957600080fd5b506102ed6119c5565b80471015610977576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146109c2576040519150601f19603f3d011682016040523d82523d6000602084013e6109c7565b606091505b5050905080610a075760405162461bcd60e51b815260040180806020018281038252603a815260200180612366603a913960400191505060405180910390fd5b505050565b6001600160a01b0381166000908152601260209081526040808320546013909252822054601154600160401b929102030490505b919050565b60025481565b6000601054821115610a5c57600080fd5b816000610a74610a6d83600a6119d6565b6064611a2f565b90506000610a828383611a96565b95945050505050565b60105490565b600f5481565b600e5481565b6000610aa7611259565b11610ab157600080fd5b33600081815260136020526040902054821115610acd57600080fd5b60006064610adc84600a6119d6565b81610ae357fe5b0490506000610af133610c3b565b90508015610afe57600091505b6000610b0a8584611a96565b9050610b1860105486611a96565b6010556001600160a01b038416600090815260136020526040902054610b3e9086611a96565b6001600160a01b03851660009081526013602090815260408083209390935560115460129091529190208054918702600160401b840201918290039055610b8484611af3565b6040805187815260208101849052428183015290516001600160a01b038716917f90ebb005d68efee044927e1e77e1fd0cecc508368aa72c39250a787eed5f0a70919081900360600190a26001600160a01b038516600081815260146020818152604080842080546013845294829020549383526001015481519485529184019290925282820152426060830152516000805160206123468339815191529181900360800190a2610c33611b81565b505050505050565b60008080805b600554811015610ce75760058181548110610c5857fe5b60009182526020918290200154604080516370a0823160e01b81526001600160a01b038981166004830152915191909216945084926370a082319260248082019391829003018186803b158015610cae57600080fd5b505afa158015610cc2573d6000803e3d6000fd5b505050506040513d6020811015610cd857600080fd5b50519290920191600101610c41565b506002548210610cfc57600192505050610a40565b5060009392505050565b60095481565b6000610d166119c5565b11610d2057600080fd5b336000610d2b6119c5565b6001600160a01b0380841660008181526012602090815260408083208054600160401b8802019055600154815163a9059cbb60e01b815260048101959095526024850187905290519596509093169363a9059cbb936044808501949193918390030190829087803b158015610d9f57600080fd5b505af1158015610db3573d6000803e3d6000fd5b505050506040513d6020811015610dc957600080fd5b50506001600160a01b038216600090815260146020526040902060010154610df19082611c78565b6001600160a01b038316600081815260146020908152604091829020600180820195909555600b0180548501905560078054909401909355600980548501905580518481524293810193909352805191927f1b091269e929df55d64d6ea7e9cadbe4fb38dce5ccdc995767bc515030dbfbbf929081900390910190a2610e75611b81565b5050565b6000670de0b6b3a764000081610e93610a6d83600a6119d6565b90506000610ea18383611a96565b935050505090565b60075481565b6001600160a01b031660009081526013602052604090205490565b610ed2611cd2565b6001600160a01b0316610ee361124a565b6001600160a01b031614610f2c576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b600a5481565b6000610f95611cd2565b6001600160a01b0316610fa661124a565b6001600160a01b031614610fef576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b610ff98383611c78565b600a1461104d576040805162461bcd60e51b815260206004820152601d60248201527f54454e5f504f5254494f4e535f524551554952455f4449564953494f4e000000604482015290519081900360640190fd5b600d839055600e8290556040805184815260208101849052428183015290517f677017fa3a0fe0f50a95e6024c5b688f2b14a4696c4a897c459715cabfc1c03a9181900360600190a15060015b92915050565b6110a8612217565b6110b0612236565b506001600160a01b03821660009081526014602090815260409182902082516101c081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d909101546101a082015261116f612217565b604051806101c0016040528083600001518152602001836020015181526020018360600151815260200183604001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361012001518152602001836101400151815260200183610160015181526020018361018001518152602001836101a00151815260200183610100015181525090508092505050919050565b600281565b6000670de0b6b3a764000081611236610a6d83600a6119d6565b90506000610ea18383611c78565b61546081565b6000546001600160a01b031690565b600061126433610eaf565b905090565b6003546001600160a01b031681565b600d5481565b600080611289611259565b1161129357600080fd5b61129d8383611cd6565b9392505050565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156112ef57600080fd5b505afa158015611303573d6000803e3d6000fd5b505050506040513d602081101561131957600080fd5b5051905090565b600b5481565b6005818154811061133657600080fd5b6000918252602090912001546001600160a01b0316905081565b600061109a33836118ba565b60085481565b600c5460ff1681565b6004546001600160a01b031681565b60008061138b610a6d84600a6119d6565b905060006113998483611a96565b949350505050565b6001600160a01b03163190565b600154604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561140757600080fd5b505af115801561141b573d6000803e3d6000fd5b505050506040513d602081101561143157600080fd5b505161143c57600080fd5b600b80548301905533600081815260146020908152604091829020600a01805460010190558151858152429181019190915281517f0da1788c3e861a58a47f0d46073b13c4d66efcc259714744f920d1afe7b8dee5929181900390910190a25050600b5490565b60065481565b6114b1611cd2565b6001600160a01b03166114c261124a565b6001600160a01b03161461150b576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b6001600160a01b0381166115505760405162461bcd60e51b81526004018080602001828103825260268152602001806123206026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006115b56119c5565b116115bf57600080fd5b6115c7611f41565b50565b60006115d4611cd2565b6001600160a01b03166115e561124a565b6001600160a01b03161461162e576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b60005b60055481101561170b5782818151811061164757fe5b60200260200101516001600160a01b03166301ffc9a76380ac58cd6040518263ffffffff1660e01b8152600401808260e01b815260200191505060206040518083038186803b15801561169957600080fd5b505afa1580156116ad573d6000803e3d6000fd5b505050506040513d60208110156116c357600080fd5b5051611703576040805162461bcd60e51b815260206004820152600a6024820152694e4f545f45524337323160b01b604482015290519081900360640190fd5b600101611631565b506060600580548060200260200160405190810160405280929190818152602001828054801561176457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611746575b50508651939450611780936005935060208801925090506122a5565b50336001600160a01b03167ff0650831416f723858005cfeae97a2d6f5e127d1e6ae8938574d1d73e7f4727c828542604051808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b838110156117f95781810151838201526020016117e1565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015611838578181015183820152602001611820565b505050509050019550505050505060405180910390a250600192915050565b600c54600b54600091829161187b916064916118759160ff166119d6565b90611a2f565b905060006010541161188e57600061129d565b6010546001600160a01b03841660009081526013602052604090205461129d91906118759084906119d6565b600154604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561191357600080fd5b505af1158015611927573d6000803e3d6000fd5b505050506040513d602081101561193d57600080fd5b505161194857600080fd5b600a805483019055600061195c8484612077565b6001600160a01b0385166000818152601460208181526040808420805460138452948290205493835260010154815194855291840192909252828201524260608301525192935090916000805160206123468339815191529181900360800190a261129d611b81565b600061126433610a0c565b3b151590565b6000826119e55750600061109a565b828202828482816119f257fe5b041461129d5760405162461bcd60e51b81526004018080602001828103825260218152602001806123a06021913960400191505060405180910390fd5b6000808211611a85576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611a8e57fe5b049392505050565b600082821115611aed576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000611b0082600a611a2f565b90506000611b19600d54836119d690919063ffffffff16565b90506000611b32600e54846119d690919063ffffffff16565b600b54909150611b429083611c78565b600b5560105415611b7257611b6a601154601054600160401b840281611b6457fe5b04611c78565b601155611b7b565b600b8054820190555b50505050565b600f54429061546090611b959083906121fc565b1115611be1577f2cfce469a63f2e9972b7f23da751e6943ed2b091c10e40b5c43b5f6105bf20ea611bc46112a4565b60408051918252602082018490528051918290030190a1600f8190555b6002611bef826008546121fc565b118015611bfe57506000601054115b156115c757600c54600b54600091611c279162015180916118759160649183919060ff166119d6565b90506000611c40600854846121fc90919063ffffffff16565b600b549083029150611c5290826121fc565b600b55601154601054611c6e9190600160401b840281611b6457fe5b6011555050600855565b60008282018381101561129d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b33600081815260136020526040812054909190831115611cf557600080fd5b6000611cff6119c5565b1115611d0d57611d0d610d0c565b6001600160a01b038116600090815260136020526040902054611d309084611a96565b6001600160a01b038083166000908152601360205260408082209390935590861681522054611d5f9084611c78565b6001600160a01b03858116600081815260136020908152604080832095909555601180549487168352601282528583208054958a029095039094559254918152838120805492880290920190915560149091522054158015611dda57506001600160a01b038416600090815260146020526040902060060154155b15611de9576006805460010190555b6001600160a01b038082166000818152601460209081526040808320600c810180546001908101909155600590910180548a019055948916808452928190206006810180548a019055600d018054860190556007805490950190945583518781524291810191909152835191937f91c7d71a3ae3fb7cf61e00517bf4868e9e23d0bace5e304cbc3b68de5d85350e92918290030190a36001600160a01b038116600081815260146020818152604080842080546013845294829020549383526001015481519485529184019290925282820152426060830152516000805160206123468339815191529181900360800190a26001600160a01b038416600081815260146020818152604080842080546013845294829020549383526001015481519485529184019290925282820152426060830152516000805160206123468339815191529181900360800190a25060019392505050565b60003381611f4e82610a0c565b6001600160a01b03831660009081526012602052604081208054600160401b8402019055909150611f7f3383612077565b6040805184815260208101839052428183015290519192506001600160a01b038516917f193a876ac91d11a4a0a71ebef73b195ba55aa7c16d6755c93c21d973e692a02c9181900360600190a26001600160a01b038316600090815260146020526040902060020154611ff29083611c78565b6001600160a01b0384166000818152601460208181526040808420600281019690965560088601805460019081019091558654601384529482902054938352909501548551938452908301919091528184015242606082015291519091600080516020612346833981519152919081900360800190a2612070611b81565b9250505090565b6001600160a01b0382166000908152601460205260408120541580156120b657506001600160a01b038316600090815260146020526040902060060154155b156120c5576006805460010190555b600780546001019055600060646120dd84600a6119d6565b816120e457fe5b04905060006120f38483611a96565b6040805186815260208101839052428183015290519192506001600160a01b038716917fb49bb132260f6aa1c86e2d2a3957c097216e6ec9b5fa15867289f058b4d297ac9181900360600190a260008111801561215a57506010546121588282611c78565b115b61216357600080fd5b6010541561217857601080548201905561217e565b60108190555b61218782611af3565b6001600160a01b0385166000908152601360205260409020546121aa9082611c78565b6001600160a01b03861660009081526013602090815260408083209390935560115460128252838320805491860291909101905560149052208054850181556007018054600101905591505092915050565b60008282111561220e5750600061109a565b5080820361109a565b604051806101c00160405280600e906020820280368337509192915050565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8280548282559060005260206000209081019282156122fa579160200282015b828111156122fa57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906122c5565b5061230692915061230a565b5090565b5b80821115612306576000815560010161230b56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737329f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212206187f33088609c0b09f692026d0e9a829460aed741848a10ab062f7f78b3d40164736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2597 CODESIZE SUB DUP1 PUSH3 0x2597 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x0 PUSH3 0x4C PUSH3 0x167 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0xC0 JUMPI POP PUSH3 0xC0 DUP3 PUSH3 0x16B PUSH1 0x20 SHL PUSH3 0x19D0 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x494E56414C49445F41444452455353 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP5 AND SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP4 AND CALLER OR SWAP1 SWAP3 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x8 SWAP1 DUP2 SSTORE PUSH1 0xD SSTORE PUSH1 0x2 PUSH1 0xE DUP2 SWAP1 SSTORE SSTORE PUSH3 0x171 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2416 DUP1 PUSH3 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xD7C3771D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0xF6DB0DA0 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xFBAF1BBD EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0xFFAAD6A5 EQ PUSH2 0x8D4 JUMPI DUP1 PUSH4 0xFFE6BBD8 EQ PUSH2 0x90D JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0xD7C3771D EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xE02E1E9C EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0x76A JUMPI DUP1 PUSH4 0xF2020275 EQ PUSH2 0x794 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0xAD7A672F GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xAECB6D28 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xB03CF5A7 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xB9DB102A EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0xD3261592 EQ PUSH2 0x6CD JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0x949E8ACD EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xA01496DE EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x601 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7D882097 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x7E6335C7 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x8086B8BA EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x81FCE645 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x8620410B EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x89375ABF EQ PUSH2 0x598 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x537A39BB EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x48C JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x1F38B9CD GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x1F38B9CD EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x36599EAD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x41C61383 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x405 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH3 0x65318B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8560ACE EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x10D0FFDD EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x1924063E EQ PUSH2 0x353 JUMPI PUSH2 0x2B5 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2B5 JUMPI PUSH1 0x4 SLOAD PUSH2 0x27A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x3C2BD1B3F5CA07AFB09FBEE41AC43DA2B98D9C2E9832673052E546BD1D4C091D SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0xD0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xEA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0xECA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xF85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0x1C0 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x55B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x543 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1217 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x121C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0x124A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0x1269 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x127E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x12A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1326 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1350 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x135C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E2 PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0x136B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x137A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x13AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x15AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x15CA SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x19C5 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2366 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x13 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP3 SWAP2 MUL SUB DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD DUP3 GT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH2 0xA74 PUSH2 0xA6D DUP4 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA82 DUP4 DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA7 PUSH2 0x1259 JUMP JUMPDEST GT PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xADC DUP5 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST DUP2 PUSH2 0xAE3 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0xAF1 CALLER PUSH2 0xC3B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0xB0A DUP6 DUP5 PUSH2 0x1A96 JUMP JUMPDEST SWAP1 POP PUSH2 0xB18 PUSH1 0x10 SLOAD DUP7 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB3E SWAP1 DUP7 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SLOAD PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP8 MUL PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL ADD SWAP2 DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB84 DUP5 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x90EBB005D68EFEE044927E1E77E1FD0CECC508368AA72C39250A787EED5F0A70 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH2 0xC33 PUSH2 0x1B81 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC58 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC41 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP3 LT PUSH2 0xCFC JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA40 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD16 PUSH2 0x19C5 JUMP JUMPDEST GT PUSH2 0xD20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH2 0xD2B PUSH2 0x19C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP9 MUL ADD SWAP1 SSTORE PUSH1 0x1 SLOAD DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP6 SWAP7 POP SWAP1 SWAP4 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDF1 SWAP1 DUP3 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB ADD DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP1 MLOAD SWAP2 SWAP3 PUSH32 0x1B091269E929DF55D64D6EA7E9CADBE4FB38DCE5CCDC995767BC515030DBFBBF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 PUSH2 0xE75 PUSH2 0x1B81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xE93 PUSH2 0xA6D DUP4 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE3 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF95 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFA6 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xFF9 DUP4 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0xA EQ PUSH2 0x104D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54454E5F504F5254494F4E535F524551554952455F4449564953494F4E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xD DUP4 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x677017FA3A0FE0F50A95E6024C5B688F2B14A4696C4A897C459715CABFC1C03A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A8 PUSH2 0x2217 JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x2236 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x1C0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD SWAP1 SWAP2 ADD SLOAD PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x116F PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x140 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x160 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x180 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x1A0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x100 ADD MLOAD DUP2 MSTORE POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1236 PUSH2 0xA6D DUP4 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x5460 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 CALLER PUSH2 0xEAF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1289 PUSH2 0x1259 JUMP JUMPDEST GT PUSH2 0x1293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129D DUP4 DUP4 PUSH2 0x1CD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109A CALLER DUP4 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138B PUSH2 0xA6D DUP5 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1399 DUP5 DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD DUP4 ADD SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH32 0xDA1788C3E861A58A47F0D46073B13C4D66EFCC259714744F920D1AFE7B8DEE5 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14B1 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C2 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x150B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2320 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B5 PUSH2 0x19C5 JUMP JUMPDEST GT PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C7 PUSH2 0x1F41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D4 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E5 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x162E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x170B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1647 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH4 0x80AC58CD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1703 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E4F545F455243373231 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x1631 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1764 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1746 JUMPI JUMPDEST POP POP DUP7 MLOAD SWAP4 SWAP5 POP PUSH2 0x1780 SWAP4 PUSH1 0x5 SWAP4 POP PUSH1 0x20 DUP9 ADD SWAP3 POP SWAP1 POP PUSH2 0x22A5 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF0650831416F723858005CFEAE97A2D6F5E127D1E6AE8938574D1D73E7F4727C DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1838 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1820 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x187B SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x1875 SWAP2 PUSH1 0xFF AND PUSH2 0x19D6 JUMP JUMPDEST SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x10 SLOAD GT PUSH2 0x188E JUMPI PUSH1 0x0 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x1875 SWAP1 DUP5 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD DUP4 ADD SWAP1 SSTORE PUSH1 0x0 PUSH2 0x195C DUP5 DUP5 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH2 0x129D PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 CALLER PUSH2 0xA0C JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19E5 JUMPI POP PUSH1 0x0 PUSH2 0x109A JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x19F2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23A0 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1A85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1A8E JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1AED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 DUP3 PUSH1 0xA PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B19 PUSH1 0xD SLOAD DUP4 PUSH2 0x19D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B32 PUSH1 0xE SLOAD DUP5 PUSH2 0x19D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1B42 SWAP1 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x10 SLOAD ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B6A PUSH1 0x11 SLOAD PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL DUP2 PUSH2 0x1B64 JUMPI INVALID JUMPDEST DIV PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP SWAP1 PUSH2 0x5460 SWAP1 PUSH2 0x1B95 SWAP1 DUP4 SWAP1 PUSH2 0x21FC JUMP JUMPDEST GT ISZERO PUSH2 0x1BE1 JUMPI PUSH32 0x2CFCE469A63F2E9972B7F23DA751E6943ED2B091C10E40B5C43B5F6105BF20EA PUSH2 0x1BC4 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0xF DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x2 PUSH2 0x1BEF DUP3 PUSH1 0x8 SLOAD PUSH2 0x21FC JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1BFE JUMPI POP PUSH1 0x0 PUSH1 0x10 SLOAD GT JUMPDEST ISZERO PUSH2 0x15C7 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1C27 SWAP2 PUSH3 0x15180 SWAP2 PUSH2 0x1875 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C40 PUSH1 0x8 SLOAD DUP5 PUSH2 0x21FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 DUP4 MUL SWAP2 POP PUSH2 0x1C52 SWAP1 DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x11 SLOAD PUSH1 0x10 SLOAD PUSH2 0x1C6E SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL DUP2 PUSH2 0x1B64 JUMPI INVALID JUMPDEST PUSH1 0x11 SSTORE POP POP PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x129D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 GT ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFF PUSH2 0x19C5 JUMP JUMPDEST GT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0D PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D30 SWAP1 DUP5 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1D5F SWAP1 DUP5 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP5 DUP8 AND DUP4 MSTORE PUSH1 0x12 DUP3 MSTORE DUP6 DUP4 KECCAK256 DUP1 SLOAD SWAP6 DUP11 MUL SWAP1 SWAP6 SUB SWAP1 SWAP5 SSTORE SWAP3 SLOAD SWAP2 DUP2 MSTORE DUP4 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP9 MUL SWAP1 SWAP3 ADD SWAP1 SWAP2 SSTORE PUSH1 0x14 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x1DDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1DE9 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP5 DUP10 AND DUP1 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD DUP11 ADD SWAP1 SSTORE PUSH1 0xD ADD DUP1 SLOAD DUP7 ADD SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP6 ADD SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD SWAP2 SWAP4 PUSH32 0x91C7D71A3AE3FB7CF61E00517BF4868E9E23D0BACE5E304CBC3B68DE5D85350E SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x1F4E DUP3 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL ADD SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x1F7F CALLER DUP4 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x193A876AC91D11A4A0A71EBEF73B195BA55AA7C16D6755C93C21D973E692A02C SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1FF2 SWAP1 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP7 SWAP1 SWAP7 SSTORE PUSH1 0x8 DUP7 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP7 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE SWAP1 SWAP6 ADD SLOAD DUP6 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH2 0x2070 PUSH2 0x1B81 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x20B6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x0 PUSH1 0x64 PUSH2 0x20DD DUP5 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST DUP2 PUSH2 0x20E4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x20F3 DUP5 DUP4 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xB49BB132260F6AA1C86E2D2A3957C097216E6EC9B5FA15867289F058B4D297AC SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x215A JUMPI POP PUSH1 0x10 SLOAD PUSH2 0x2158 DUP3 DUP3 PUSH2 0x1C78 JUMP JUMPDEST GT JUMPDEST PUSH2 0x2163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD ISZERO PUSH2 0x2178 JUMPI PUSH1 0x10 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x217E JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE JUMPDEST PUSH2 0x2187 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21AA SWAP1 DUP3 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SLOAD PUSH1 0x12 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP1 SLOAD SWAP2 DUP7 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x14 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP6 ADD DUP2 SSTORE PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x220E JUMPI POP PUSH1 0x0 PUSH2 0x109A JUMP JUMPDEST POP DUP1 DUP3 SUB PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x22FA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22FA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22C5 JUMP JUMPDEST POP PUSH2 0x2306 SWAP3 SWAP2 POP PUSH2 0x230A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2306 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x230B JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737329F64F6F46C82C5ECFA955FE7D093E63 0xB4 LT PUSH12 0x6DBE5193E00EFD62C7384EF1 PUSH24 0x416464726573733A20756E61626C6520746F2073656E6420 PUSH23 0x616C75652C20726563697069656E74206D617920686176 PUSH6 0x207265766572 PUSH21 0x6564536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F774F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E6572A264697066 PUSH20 0x582212206187F33088609C0B09F692026D0E9A82 SWAP5 PUSH1 0xAE 0xD7 COINBASE DUP5 DUP11 LT 0xAB MOD 0x2F PUSH32 0x78B3D40164736F6C634300070400330000000000000000000000000000000000 ",
							"sourceMap": "205:21230:2:-:0;;;4489:562;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4489:562:2;;;;;;;877:17:5;897:12;:10;:12::i;:::-;919:6;:18;;-1:-1:-1;;;;;;919:18:5;-1:-1:-1;;;;;919:18:5;;;;;;;952:43;;919:18;;-1:-1:-1;919:18:5;952:43;;919:6;;952:43;-1:-1:-1;;;;;;4582:27:2;::::1;::::0;;::::1;::::0;:64:::1;;;4613:33;4632:13;4613:18;;;;;:33;;:::i;:::-;4561:126;;;::::0;;-1:-1:-1;;;4561:126:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4561:126:2;;;;;;;;;;;;;::::1;;4698:12;:28:::0;;-1:-1:-1;;;;;4698:28:2;;::::1;-1:-1:-1::0;;;;;;4698:28:2;;::::1;::::0;::::1;::::0;;;;4736:36;;;::::1;::::0;;::::1;::::0;;4783:11:::1;:24:::0;;;;::::1;4797:10;4783:24;::::0;;;4887:8:::1;:20:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;4887:20:2;;::::1;::::0;;;::::1;::::0;;4931:15:::1;4917:10;:30:::0;;;4982:7:::1;:11:::0;-1:-1:-1;5003:7:2::1;:11:::0;;;5025:19;205:21230;;598:104:1;685:10;598:104;:::o;726:413:0:-;1086:20;1124:8;;;726:413::o;205:21230:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061025f5760003560e01c80638da5cb5b11610144578063d7c3771d116100b6578063f2fde38b1161007a578063f2fde38b146107a9578063f69e2046146107dc578063f6db0da0146107f1578063fbaf1bbd146108a1578063ffaad6a5146108d4578063ffe6bbd81461090d576102b5565b8063d7c3771d146106f8578063e02e1e9c1461070d578063eedc966a14610737578063f14faf6f1461076a578063f202027514610794576102b5565b8063ad7a672f11610108578063ad7a672f1461063a578063aecb6d281461064f578063b03cf5a714610664578063b6b55f251461068e578063b9db102a146106b8578063d3261592146106cd576102b5565b80638da5cb5b146105ad578063949e8acd146105c25780639d76ea58146105d7578063a01496de146105ec578063a9059cbb14610601576102b5565b80634b750334116101dd5780637d882097116101a15780637d882097146104bd5780637e6335c7146104d25780638086b8ba1461050257806381fce6451461056e5780638620410b1461058357806389375abf14610598576102b5565b80634b7503341461041a578063537a39bb1461042f57806370a0823114610444578063715018a61461047757806372f702f31461048c576102b5565b80631f38b9cd116102245780631f38b9cd146103685780632e1a7d4d1461037d57806336599ead146103a957806341c61383146103f05780634641257d14610405576102b5565b806265318b146102ba57806308560ace146102ff57806310d0ffdd1461031457806318160ddd1461033e5780631924063e14610353576102b5565b366102b55760045461027a906001600160a01b031634610922565b60408051348152426020820152815133927f3c2bd1b3f5ca07afb09fbee41ac43da2b98d9c2e9832673052e546bd1d4c091d928290030190a2005b600080fd5b3480156102c657600080fd5b506102ed600480360360208110156102dd57600080fd5b50356001600160a01b0316610a0c565b60408051918252519081900360200190f35b34801561030b57600080fd5b506102ed610a45565b34801561032057600080fd5b506102ed6004803603602081101561033757600080fd5b5035610a4b565b34801561034a57600080fd5b506102ed610a8b565b34801561035f57600080fd5b506102ed610a91565b34801561037457600080fd5b506102ed610a97565b34801561038957600080fd5b506103a7600480360360208110156103a057600080fd5b5035610a9d565b005b3480156103b557600080fd5b506103dc600480360360208110156103cc57600080fd5b50356001600160a01b0316610c3b565b604080519115158252519081900360200190f35b3480156103fc57600080fd5b506102ed610d06565b34801561041157600080fd5b506103a7610d0c565b34801561042657600080fd5b506102ed610e79565b34801561043b57600080fd5b506102ed610ea9565b34801561045057600080fd5b506102ed6004803603602081101561046757600080fd5b50356001600160a01b0316610eaf565b34801561048357600080fd5b506103a7610eca565b34801561049857600080fd5b506104a1610f76565b604080516001600160a01b039092168252519081900360200190f35b3480156104c957600080fd5b506102ed610f85565b3480156104de57600080fd5b506103dc600480360360408110156104f557600080fd5b5080359060200135610f8b565b34801561050e57600080fd5b506105356004803603602081101561052557600080fd5b50356001600160a01b03166110a0565b60405180826101c080838360005b8381101561055b578181015183820152602001610543565b5050505090500191505060405180910390f35b34801561057a57600080fd5b506102ed611217565b34801561058f57600080fd5b506102ed61121c565b3480156105a457600080fd5b506102ed611244565b3480156105b957600080fd5b506104a161124a565b3480156105ce57600080fd5b506102ed611259565b3480156105e357600080fd5b506104a1611269565b3480156105f857600080fd5b506102ed611278565b34801561060d57600080fd5b506103dc6004803603604081101561062457600080fd5b506001600160a01b03813516906020013561127e565b34801561064657600080fd5b506102ed6112a4565b34801561065b57600080fd5b506102ed611320565b34801561067057600080fd5b506104a16004803603602081101561068757600080fd5b5035611326565b34801561069a57600080fd5b506102ed600480360360208110156106b157600080fd5b5035611350565b3480156106c457600080fd5b506102ed61135c565b3480156106d957600080fd5b506106e2611362565b6040805160ff9092168252519081900360200190f35b34801561070457600080fd5b506104a161136b565b34801561071957600080fd5b506102ed6004803603602081101561073057600080fd5b503561137a565b34801561074357600080fd5b506102ed6004803603602081101561075a57600080fd5b50356001600160a01b03166113a1565b34801561077657600080fd5b506102ed6004803603602081101561078d57600080fd5b50356113ae565b3480156107a057600080fd5b506102ed6114a3565b3480156107b557600080fd5b506103a7600480360360208110156107cc57600080fd5b50356001600160a01b03166114a9565b3480156107e857600080fd5b506103a76115ab565b3480156107fd57600080fd5b506103dc6004803603602081101561081457600080fd5b81019060208101813564010000000081111561082f57600080fd5b82018360208201111561084157600080fd5b8035906020019184602083028401116401000000008311171561086357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506115ca945050505050565b3480156108ad57600080fd5b506102ed600480360360208110156108c457600080fd5b50356001600160a01b0316611857565b3480156108e057600080fd5b506102ed600480360360408110156108f757600080fd5b506001600160a01b0381351690602001356118ba565b34801561091957600080fd5b506102ed6119c5565b80471015610977576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146109c2576040519150601f19603f3d011682016040523d82523d6000602084013e6109c7565b606091505b5050905080610a075760405162461bcd60e51b815260040180806020018281038252603a815260200180612366603a913960400191505060405180910390fd5b505050565b6001600160a01b0381166000908152601260209081526040808320546013909252822054601154600160401b929102030490505b919050565b60025481565b6000601054821115610a5c57600080fd5b816000610a74610a6d83600a6119d6565b6064611a2f565b90506000610a828383611a96565b95945050505050565b60105490565b600f5481565b600e5481565b6000610aa7611259565b11610ab157600080fd5b33600081815260136020526040902054821115610acd57600080fd5b60006064610adc84600a6119d6565b81610ae357fe5b0490506000610af133610c3b565b90508015610afe57600091505b6000610b0a8584611a96565b9050610b1860105486611a96565b6010556001600160a01b038416600090815260136020526040902054610b3e9086611a96565b6001600160a01b03851660009081526013602090815260408083209390935560115460129091529190208054918702600160401b840201918290039055610b8484611af3565b6040805187815260208101849052428183015290516001600160a01b038716917f90ebb005d68efee044927e1e77e1fd0cecc508368aa72c39250a787eed5f0a70919081900360600190a26001600160a01b038516600081815260146020818152604080842080546013845294829020549383526001015481519485529184019290925282820152426060830152516000805160206123468339815191529181900360800190a2610c33611b81565b505050505050565b60008080805b600554811015610ce75760058181548110610c5857fe5b60009182526020918290200154604080516370a0823160e01b81526001600160a01b038981166004830152915191909216945084926370a082319260248082019391829003018186803b158015610cae57600080fd5b505afa158015610cc2573d6000803e3d6000fd5b505050506040513d6020811015610cd857600080fd5b50519290920191600101610c41565b506002548210610cfc57600192505050610a40565b5060009392505050565b60095481565b6000610d166119c5565b11610d2057600080fd5b336000610d2b6119c5565b6001600160a01b0380841660008181526012602090815260408083208054600160401b8802019055600154815163a9059cbb60e01b815260048101959095526024850187905290519596509093169363a9059cbb936044808501949193918390030190829087803b158015610d9f57600080fd5b505af1158015610db3573d6000803e3d6000fd5b505050506040513d6020811015610dc957600080fd5b50506001600160a01b038216600090815260146020526040902060010154610df19082611c78565b6001600160a01b038316600081815260146020908152604091829020600180820195909555600b0180548501905560078054909401909355600980548501905580518481524293810193909352805191927f1b091269e929df55d64d6ea7e9cadbe4fb38dce5ccdc995767bc515030dbfbbf929081900390910190a2610e75611b81565b5050565b6000670de0b6b3a764000081610e93610a6d83600a6119d6565b90506000610ea18383611a96565b935050505090565b60075481565b6001600160a01b031660009081526013602052604090205490565b610ed2611cd2565b6001600160a01b0316610ee361124a565b6001600160a01b031614610f2c576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b600a5481565b6000610f95611cd2565b6001600160a01b0316610fa661124a565b6001600160a01b031614610fef576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b610ff98383611c78565b600a1461104d576040805162461bcd60e51b815260206004820152601d60248201527f54454e5f504f5254494f4e535f524551554952455f4449564953494f4e000000604482015290519081900360640190fd5b600d839055600e8290556040805184815260208101849052428183015290517f677017fa3a0fe0f50a95e6024c5b688f2b14a4696c4a897c459715cabfc1c03a9181900360600190a15060015b92915050565b6110a8612217565b6110b0612236565b506001600160a01b03821660009081526014602090815260409182902082516101c081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d909101546101a082015261116f612217565b604051806101c0016040528083600001518152602001836020015181526020018360600151815260200183604001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361012001518152602001836101400151815260200183610160015181526020018361018001518152602001836101a00151815260200183610100015181525090508092505050919050565b600281565b6000670de0b6b3a764000081611236610a6d83600a6119d6565b90506000610ea18383611c78565b61546081565b6000546001600160a01b031690565b600061126433610eaf565b905090565b6003546001600160a01b031681565b600d5481565b600080611289611259565b1161129357600080fd5b61129d8383611cd6565b9392505050565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156112ef57600080fd5b505afa158015611303573d6000803e3d6000fd5b505050506040513d602081101561131957600080fd5b5051905090565b600b5481565b6005818154811061133657600080fd5b6000918252602090912001546001600160a01b0316905081565b600061109a33836118ba565b60085481565b600c5460ff1681565b6004546001600160a01b031681565b60008061138b610a6d84600a6119d6565b905060006113998483611a96565b949350505050565b6001600160a01b03163190565b600154604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561140757600080fd5b505af115801561141b573d6000803e3d6000fd5b505050506040513d602081101561143157600080fd5b505161143c57600080fd5b600b80548301905533600081815260146020908152604091829020600a01805460010190558151858152429181019190915281517f0da1788c3e861a58a47f0d46073b13c4d66efcc259714744f920d1afe7b8dee5929181900390910190a25050600b5490565b60065481565b6114b1611cd2565b6001600160a01b03166114c261124a565b6001600160a01b03161461150b576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b6001600160a01b0381166115505760405162461bcd60e51b81526004018080602001828103825260268152602001806123206026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006115b56119c5565b116115bf57600080fd5b6115c7611f41565b50565b60006115d4611cd2565b6001600160a01b03166115e561124a565b6001600160a01b03161461162e576040805162461bcd60e51b815260206004820181905260248201526000805160206123c1833981519152604482015290519081900360640190fd5b60005b60055481101561170b5782818151811061164757fe5b60200260200101516001600160a01b03166301ffc9a76380ac58cd6040518263ffffffff1660e01b8152600401808260e01b815260200191505060206040518083038186803b15801561169957600080fd5b505afa1580156116ad573d6000803e3d6000fd5b505050506040513d60208110156116c357600080fd5b5051611703576040805162461bcd60e51b815260206004820152600a6024820152694e4f545f45524337323160b01b604482015290519081900360640190fd5b600101611631565b506060600580548060200260200160405190810160405280929190818152602001828054801561176457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611746575b50508651939450611780936005935060208801925090506122a5565b50336001600160a01b03167ff0650831416f723858005cfeae97a2d6f5e127d1e6ae8938574d1d73e7f4727c828542604051808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b838110156117f95781810151838201526020016117e1565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015611838578181015183820152602001611820565b505050509050019550505050505060405180910390a250600192915050565b600c54600b54600091829161187b916064916118759160ff166119d6565b90611a2f565b905060006010541161188e57600061129d565b6010546001600160a01b03841660009081526013602052604090205461129d91906118759084906119d6565b600154604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561191357600080fd5b505af1158015611927573d6000803e3d6000fd5b505050506040513d602081101561193d57600080fd5b505161194857600080fd5b600a805483019055600061195c8484612077565b6001600160a01b0385166000818152601460208181526040808420805460138452948290205493835260010154815194855291840192909252828201524260608301525192935090916000805160206123468339815191529181900360800190a261129d611b81565b600061126433610a0c565b3b151590565b6000826119e55750600061109a565b828202828482816119f257fe5b041461129d5760405162461bcd60e51b81526004018080602001828103825260218152602001806123a06021913960400191505060405180910390fd5b6000808211611a85576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611a8e57fe5b049392505050565b600082821115611aed576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000611b0082600a611a2f565b90506000611b19600d54836119d690919063ffffffff16565b90506000611b32600e54846119d690919063ffffffff16565b600b54909150611b429083611c78565b600b5560105415611b7257611b6a601154601054600160401b840281611b6457fe5b04611c78565b601155611b7b565b600b8054820190555b50505050565b600f54429061546090611b959083906121fc565b1115611be1577f2cfce469a63f2e9972b7f23da751e6943ed2b091c10e40b5c43b5f6105bf20ea611bc46112a4565b60408051918252602082018490528051918290030190a1600f8190555b6002611bef826008546121fc565b118015611bfe57506000601054115b156115c757600c54600b54600091611c279162015180916118759160649183919060ff166119d6565b90506000611c40600854846121fc90919063ffffffff16565b600b549083029150611c5290826121fc565b600b55601154601054611c6e9190600160401b840281611b6457fe5b6011555050600855565b60008282018381101561129d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b33600081815260136020526040812054909190831115611cf557600080fd5b6000611cff6119c5565b1115611d0d57611d0d610d0c565b6001600160a01b038116600090815260136020526040902054611d309084611a96565b6001600160a01b038083166000908152601360205260408082209390935590861681522054611d5f9084611c78565b6001600160a01b03858116600081815260136020908152604080832095909555601180549487168352601282528583208054958a029095039094559254918152838120805492880290920190915560149091522054158015611dda57506001600160a01b038416600090815260146020526040902060060154155b15611de9576006805460010190555b6001600160a01b038082166000818152601460209081526040808320600c810180546001908101909155600590910180548a019055948916808452928190206006810180548a019055600d018054860190556007805490950190945583518781524291810191909152835191937f91c7d71a3ae3fb7cf61e00517bf4868e9e23d0bace5e304cbc3b68de5d85350e92918290030190a36001600160a01b038116600081815260146020818152604080842080546013845294829020549383526001015481519485529184019290925282820152426060830152516000805160206123468339815191529181900360800190a26001600160a01b038416600081815260146020818152604080842080546013845294829020549383526001015481519485529184019290925282820152426060830152516000805160206123468339815191529181900360800190a25060019392505050565b60003381611f4e82610a0c565b6001600160a01b03831660009081526012602052604081208054600160401b8402019055909150611f7f3383612077565b6040805184815260208101839052428183015290519192506001600160a01b038516917f193a876ac91d11a4a0a71ebef73b195ba55aa7c16d6755c93c21d973e692a02c9181900360600190a26001600160a01b038316600090815260146020526040902060020154611ff29083611c78565b6001600160a01b0384166000818152601460208181526040808420600281019690965560088601805460019081019091558654601384529482902054938352909501548551938452908301919091528184015242606082015291519091600080516020612346833981519152919081900360800190a2612070611b81565b9250505090565b6001600160a01b0382166000908152601460205260408120541580156120b657506001600160a01b038316600090815260146020526040902060060154155b156120c5576006805460010190555b600780546001019055600060646120dd84600a6119d6565b816120e457fe5b04905060006120f38483611a96565b6040805186815260208101839052428183015290519192506001600160a01b038716917fb49bb132260f6aa1c86e2d2a3957c097216e6ec9b5fa15867289f058b4d297ac9181900360600190a260008111801561215a57506010546121588282611c78565b115b61216357600080fd5b6010541561217857601080548201905561217e565b60108190555b61218782611af3565b6001600160a01b0385166000908152601360205260409020546121aa9082611c78565b6001600160a01b03861660009081526013602090815260408083209390935560115460128252838320805491860291909101905560149052208054850181556007018054600101905591505092915050565b60008282111561220e5750600061109a565b5080820361109a565b604051806101c00160405280600e906020820280368337509192915050565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8280548282559060005260206000209081019282156122fa579160200282015b828111156122fa57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906122c5565b5061230692915061230a565b5090565b5b80821115612306576000815560010161230b56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737329f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212206187f33088609c0b09f692026d0e9a829460aed741848a10ab062f7f78b3d40164736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xD7C3771D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0xF6DB0DA0 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xFBAF1BBD EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0xFFAAD6A5 EQ PUSH2 0x8D4 JUMPI DUP1 PUSH4 0xFFE6BBD8 EQ PUSH2 0x90D JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0xD7C3771D EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xE02E1E9C EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0x76A JUMPI DUP1 PUSH4 0xF2020275 EQ PUSH2 0x794 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0xAD7A672F GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xAECB6D28 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xB03CF5A7 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xB9DB102A EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0xD3261592 EQ PUSH2 0x6CD JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0x949E8ACD EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xA01496DE EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x601 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7D882097 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x7E6335C7 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x8086B8BA EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x81FCE645 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x8620410B EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x89375ABF EQ PUSH2 0x598 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x537A39BB EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x48C JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH4 0x1F38B9CD GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x1F38B9CD EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x36599EAD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x41C61383 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x405 JUMPI PUSH2 0x2B5 JUMP JUMPDEST DUP1 PUSH3 0x65318B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8560ACE EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x10D0FFDD EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x1924063E EQ PUSH2 0x353 JUMPI PUSH2 0x2B5 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2B5 JUMPI PUSH1 0x4 SLOAD PUSH2 0x27A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x3C2BD1B3F5CA07AFB09FBEE41AC43DA2B98D9C2E9832673052E546BD1D4C091D SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0xD0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xEA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0xECA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xF85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0x1C0 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x55B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x543 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1217 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x121C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0x124A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0x1269 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x127E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x12A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1326 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1350 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x135C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E2 PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0x136B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x137A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x13AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x15AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x15CA SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x19C5 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2366 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x13 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP3 SWAP2 MUL SUB DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD DUP3 GT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH2 0xA74 PUSH2 0xA6D DUP4 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA82 DUP4 DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA7 PUSH2 0x1259 JUMP JUMPDEST GT PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xADC DUP5 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST DUP2 PUSH2 0xAE3 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0xAF1 CALLER PUSH2 0xC3B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0xB0A DUP6 DUP5 PUSH2 0x1A96 JUMP JUMPDEST SWAP1 POP PUSH2 0xB18 PUSH1 0x10 SLOAD DUP7 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB3E SWAP1 DUP7 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SLOAD PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP8 MUL PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL ADD SWAP2 DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB84 DUP5 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x90EBB005D68EFEE044927E1E77E1FD0CECC508368AA72C39250A787EED5F0A70 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH2 0xC33 PUSH2 0x1B81 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC58 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC41 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP3 LT PUSH2 0xCFC JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA40 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD16 PUSH2 0x19C5 JUMP JUMPDEST GT PUSH2 0xD20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH2 0xD2B PUSH2 0x19C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP9 MUL ADD SWAP1 SSTORE PUSH1 0x1 SLOAD DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP6 SWAP7 POP SWAP1 SWAP4 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDF1 SWAP1 DUP3 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB ADD DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP1 MLOAD SWAP2 SWAP3 PUSH32 0x1B091269E929DF55D64D6EA7E9CADBE4FB38DCE5CCDC995767BC515030DBFBBF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 PUSH2 0xE75 PUSH2 0x1B81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xE93 PUSH2 0xA6D DUP4 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE3 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF95 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFA6 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xFF9 DUP4 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0xA EQ PUSH2 0x104D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54454E5F504F5254494F4E535F524551554952455F4449564953494F4E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xD DUP4 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x677017FA3A0FE0F50A95E6024C5B688F2B14A4696C4A897C459715CABFC1C03A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A8 PUSH2 0x2217 JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x2236 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x1C0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD SWAP1 SWAP2 ADD SLOAD PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x116F PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x140 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x160 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x180 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x1A0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x100 ADD MLOAD DUP2 MSTORE POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1236 PUSH2 0xA6D DUP4 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEA1 DUP4 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x5460 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 CALLER PUSH2 0xEAF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1289 PUSH2 0x1259 JUMP JUMPDEST GT PUSH2 0x1293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129D DUP4 DUP4 PUSH2 0x1CD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109A CALLER DUP4 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138B PUSH2 0xA6D DUP5 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1399 DUP5 DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD DUP4 ADD SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH32 0xDA1788C3E861A58A47F0D46073B13C4D66EFCC259714744F920D1AFE7B8DEE5 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14B1 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C2 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x150B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2320 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B5 PUSH2 0x19C5 JUMP JUMPDEST GT PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C7 PUSH2 0x1F41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D4 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E5 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x162E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x170B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1647 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH4 0x80AC58CD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1703 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E4F545F455243373231 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x1631 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1764 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1746 JUMPI JUMPDEST POP POP DUP7 MLOAD SWAP4 SWAP5 POP PUSH2 0x1780 SWAP4 PUSH1 0x5 SWAP4 POP PUSH1 0x20 DUP9 ADD SWAP3 POP SWAP1 POP PUSH2 0x22A5 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF0650831416F723858005CFEAE97A2D6F5E127D1E6AE8938574D1D73E7F4727C DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1838 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1820 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x187B SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x1875 SWAP2 PUSH1 0xFF AND PUSH2 0x19D6 JUMP JUMPDEST SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x10 SLOAD GT PUSH2 0x188E JUMPI PUSH1 0x0 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x1875 SWAP1 DUP5 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD DUP4 ADD SWAP1 SSTORE PUSH1 0x0 PUSH2 0x195C DUP5 DUP5 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH2 0x129D PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 CALLER PUSH2 0xA0C JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19E5 JUMPI POP PUSH1 0x0 PUSH2 0x109A JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x19F2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23A0 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1A85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1A8E JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1AED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 DUP3 PUSH1 0xA PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B19 PUSH1 0xD SLOAD DUP4 PUSH2 0x19D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B32 PUSH1 0xE SLOAD DUP5 PUSH2 0x19D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1B42 SWAP1 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x10 SLOAD ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B6A PUSH1 0x11 SLOAD PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL DUP2 PUSH2 0x1B64 JUMPI INVALID JUMPDEST DIV PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP SWAP1 PUSH2 0x5460 SWAP1 PUSH2 0x1B95 SWAP1 DUP4 SWAP1 PUSH2 0x21FC JUMP JUMPDEST GT ISZERO PUSH2 0x1BE1 JUMPI PUSH32 0x2CFCE469A63F2E9972B7F23DA751E6943ED2B091C10E40B5C43B5F6105BF20EA PUSH2 0x1BC4 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0xF DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x2 PUSH2 0x1BEF DUP3 PUSH1 0x8 SLOAD PUSH2 0x21FC JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1BFE JUMPI POP PUSH1 0x0 PUSH1 0x10 SLOAD GT JUMPDEST ISZERO PUSH2 0x15C7 JUMPI PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1C27 SWAP2 PUSH3 0x15180 SWAP2 PUSH2 0x1875 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C40 PUSH1 0x8 SLOAD DUP5 PUSH2 0x21FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 DUP4 MUL SWAP2 POP PUSH2 0x1C52 SWAP1 DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x11 SLOAD PUSH1 0x10 SLOAD PUSH2 0x1C6E SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL DUP2 PUSH2 0x1B64 JUMPI INVALID JUMPDEST PUSH1 0x11 SSTORE POP POP PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x129D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 GT ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFF PUSH2 0x19C5 JUMP JUMPDEST GT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0D PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D30 SWAP1 DUP5 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1D5F SWAP1 DUP5 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP5 DUP8 AND DUP4 MSTORE PUSH1 0x12 DUP3 MSTORE DUP6 DUP4 KECCAK256 DUP1 SLOAD SWAP6 DUP11 MUL SWAP1 SWAP6 SUB SWAP1 SWAP5 SSTORE SWAP3 SLOAD SWAP2 DUP2 MSTORE DUP4 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP9 MUL SWAP1 SWAP3 ADD SWAP1 SWAP2 SSTORE PUSH1 0x14 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x1DDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1DE9 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP5 DUP10 AND DUP1 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD DUP11 ADD SWAP1 SSTORE PUSH1 0xD ADD DUP1 SLOAD DUP7 ADD SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP6 ADD SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD SWAP2 SWAP4 PUSH32 0x91C7D71A3AE3FB7CF61E00517BF4868E9E23D0BACE5E304CBC3B68DE5D85350E SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x1 ADD SLOAD DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x1F4E DUP3 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP5 MUL ADD SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x1F7F CALLER DUP4 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x193A876AC91D11A4A0A71EBEF73B195BA55AA7C16D6755C93C21D973E692A02C SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1FF2 SWAP1 DUP4 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP7 SWAP1 SWAP7 SSTORE PUSH1 0x8 DUP7 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP7 SLOAD PUSH1 0x13 DUP5 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 SLOAD SWAP4 DUP4 MSTORE SWAP1 SWAP6 ADD SLOAD DUP6 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2346 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH2 0x2070 PUSH2 0x1B81 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO DUP1 ISZERO PUSH2 0x20B6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x0 PUSH1 0x64 PUSH2 0x20DD DUP5 PUSH1 0xA PUSH2 0x19D6 JUMP JUMPDEST DUP2 PUSH2 0x20E4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x20F3 DUP5 DUP4 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xB49BB132260F6AA1C86E2D2A3957C097216E6EC9B5FA15867289F058B4D297AC SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x215A JUMPI POP PUSH1 0x10 SLOAD PUSH2 0x2158 DUP3 DUP3 PUSH2 0x1C78 JUMP JUMPDEST GT JUMPDEST PUSH2 0x2163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD ISZERO PUSH2 0x2178 JUMPI PUSH1 0x10 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x217E JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE JUMPDEST PUSH2 0x2187 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21AA SWAP1 DUP3 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SLOAD PUSH1 0x12 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP1 SLOAD SWAP2 DUP7 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x14 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP6 ADD DUP2 SSTORE PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x220E JUMPI POP PUSH1 0x0 PUSH2 0x109A JUMP JUMPDEST POP DUP1 DUP3 SUB PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x22FA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22FA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22C5 JUMP JUMPDEST POP PUSH2 0x2306 SWAP3 SWAP2 POP PUSH2 0x230A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2306 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x230B JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737329F64F6F46C82C5ECFA955FE7D093E63 0xB4 LT PUSH12 0x6DBE5193E00EFD62C7384EF1 PUSH24 0x416464726573733A20756E61626C6520746F2073656E6420 PUSH23 0x616C75652C20726563697069656E74206D617920686176 PUSH6 0x207265766572 PUSH21 0x6564536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F774F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E6572A264697066 PUSH20 0x582212206187F33088609C0B09F692026D0E9A82 SWAP5 PUSH1 0xAE 0xD7 COINBASE DUP5 DUP11 LT 0xAB MOD 0x2F PUSH32 0x78B3D40164736F6C634300070400330000000000000000000000000000000000 ",
							"sourceMap": "205:21230:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5238:11;;5220:41;;-1:-1:-1;;;;;5238:11:2;5251:9;5220:17;:41::i;:::-;5276:51;;;5300:9;5276:51;;5311:15;5276:51;;;;;;5288:10;;5276:51;;;;;;;;205:21230;;;;;10942:240;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10942:240:2;-1:-1:-1;;;;;10942:240:2;;:::i;:::-;;;;;;;;;;;;;;;;538:30;;;;;;;;;;;;;:::i;12032:345::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12032:345:2;;:::i;10841:95::-;;;;;;;;;;;;;:::i;1652:29::-;;;;;;;;;;;;;:::i;1446:19::-;;;;;;;;;;;;;:::i;8025:1525::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8025:1525:2;;:::i;:::-;;9920:367;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9920:367:2;-1:-1:-1;;;;;9920:367:2;;:::i;:::-;;;;;;;;;;;;;;;;;;1053:23;;;;;;;;;;;;;:::i;7113:890::-;;;;;;;;;;;;;:::i;11188:265::-;;;;;;;;;;;;;:::i;828:20::-;;;;;;;;;;;;;:::i;10499:105::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10499:105:2;-1:-1:-1;;;;;10499:105:2;;:::i;1710:145:5:-;;;;;;;;;;;;;:::i;345:26:2:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;345:26:2;;;;;;;;;;;;;;1082:25;;;;;;;;;;;;;:::i;13391:410::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13391:410:2;;;;;;;:::i;12383:597::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12383:597:2;-1:-1:-1;;;;;12383:597:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:51;;;;;;;;;;;;;:::i;11459:264::-;;;;;;;;;;;;;:::i;1507:49::-;;;;;;;;;;;;;:::i;1078:85:5:-;;;;;;;;;;;;;:::i;10293:95:2:-;;;;;;;;;;;;;:::i;650:27::-;;;;;;;;;;;;;:::i;1421:19::-;;;;;;;;;;;;;:::i;9572:159::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9572:159:2;;;;;;;;:::i;10720:115::-;;;;;;;;;;;;;:::i;1164:27::-;;;;;;;;;;;;;:::i;723:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;723:21:2;;:::i;6022:110::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6022:110:2;;:::i;926:22::-;;;;;;;;;;;;;:::i;1197:21::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;683:34;;;;;;;;;;;;;:::i;11729:297::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11729:297:2;;:::i;10610:104::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10610:104:2;-1:-1:-1;;;;;10610:104:2;;:::i;5480:521::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5480:521:2;;:::i;805:17::-;;;;;;;;;;;;;:::i;2004:240:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2004:240:5;-1:-1:-1;;;;;2004:240:5;;:::i;7019:73:2:-;;;;;;;;;;;;;:::i;13863:524::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13863:524:2;;-1:-1:-1;13863:524:2;;-1:-1:-1;;;;;13863:524:2:i;12986:283::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12986:283:2;-1:-1:-1;;;;;12986:283:2;;:::i;6155:842::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6155:842:2;;;;;;;;:::i;10394:99::-;;;;;;;;;;;;;:::i;2056:391:0:-;2170:6;2145:21;:31;;2137:73;;;;;-1:-1:-1;;;2137:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:35;;2299:12;;-1:-1:-1;;;;;2317:14:0;;;2340:6;;2299:12;2317:35;2299:12;2317:35;2340:6;2317:14;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:54;;;2370:7;2362:78;;;;-1:-1:-1;;;2362:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:391;;;:::o;10942:240:2:-;-1:-1:-1;;;;;11132:17:2;;10999:7;11132:17;;;:10;:17;;;;;;;;;11091:10;:17;;;;;;11073:15;;-1:-1:-1;;;1346:7:2;11073:35;;11064:85;11037:138;11018:157;;10942:240;;;;:::o;538:30::-;;;;:::o;12032:345::-;12117:7;12155:18;;12144:7;:29;;12136:38;;;;;;12202:7;12184:15;12237:49;12250:30;12202:7;1300:2;12250:12;:30::i;:::-;12282:3;12237:12;:49::i;:::-;12219:67;;12296:16;12315:30;12328:7;12337;12315:12;:30::i;:::-;12296:49;12032:345;-1:-1:-1;;;;;12032:345:2:o;10841:95::-;10911:18;;10841:95;:::o;1652:29::-;;;;:::o;1446:19::-;;;;:::o;8025:1525::-;2057:1;2044:10;:8;:10::i;:::-;:14;2036:23;;;;;;8105:10:::1;8089:13;8144:17:::0;;;:10:::1;:17;::::0;;;;;8133:28;::::1;;8125:37;;;::::0;::::1;;8173:27;8236:3;8203:30;8216:7:::0;1300:2:::1;8203:12;:30::i;:::-;:36;;;;;;8173:66;;8266:13;8282:25;8296:10;8282:13;:25::i;:::-;8266:41;;8347:8;8343:129;;;8455:1;8433:23;;8343:129;8536:21;8560:42;8573:7;8582:19;8560:12;:42::i;:::-;8536:66;;8633:41;8646:18;;8666:7;8633:12;:41::i;:::-;8612:18;:62:::0;-1:-1:-1;;;;;8717:17:2;::::1;;::::0;;;:10:::1;:17;::::0;;;;;8704:40:::1;::::0;8736:7;8704:12:::1;:40::i;:::-;-1:-1:-1::0;;;;;8684:17:2;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;:60;;;;8873:15:::1;::::0;8947:10:::1;:17:::0;;;;;;:36;;8873:25;;::::1;-1:-1:-1::0;;;8902:24:2;::::1;8873:54;8947:36:::0;;;::::1;::::0;;9064:33:::1;9077:19:::0;9064:12:::1;:33::i;:::-;9169:57;::::0;;;;;::::1;::::0;::::1;::::0;;;9210:15:::1;9169:57:::0;;;;;;-1:-1:-1;;;;;9169:57:2;::::1;::::0;::::1;::::0;;;;;;;;::::1;-1:-1:-1::0;;;;;9279:179:2;::::1;9320:17;::::0;;;:10:::1;:17;::::0;;;;;;;:27;;9361:10:::1;:17:::0;;;;;;;9392;;;:27:::1;;::::0;9279:179;;;;;;;::::1;::::0;;;;;;;;9433:15:::1;9279:179:::0;;;;;-1:-1:-1;;;;;;;;;;;9279:179:2;;;;;;;::::1;9527:12;:10;:12::i;:::-;2069:1;;;;;8025:1525:::0;:::o;9920:367::-;9979:13;;;;10054:135;10073:4;:11;10069:15;;10054:135;;;10124:4;10129:1;10124:7;;;;;;;;;;;;;;;;;;;10152:26;;;-1:-1:-1;;;10152:26:2;;-1:-1:-1;;;;;10152:26:2;;;;;;;;;10124:7;;;;;-1:-1:-1;10124:7:2;;10152:19;;:26;;;;;;;;;;;10124:7;10152:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10152:26:2;10147:31;;;;;10086:3;;10054:135;;;;10206:15;;10201:1;:20;10197:62;;10244:4;10237:11;;;;;;10197:62;-1:-1:-1;10275:5:2;;9920:367;-1:-1:-1;;;9920:367:2:o;1053:23::-;;;;:::o;7113:890::-;2192:1;2177:12;:10;:12::i;:::-;:16;2169:25;;;;;;7177:10:::1;7161:13;7218:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;7324:17:2;;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;:53;;-1:-1:-1;;;7354:22:2;::::1;7324:53;::::0;;-1:-1:-1;7441:12:2;:40;;-1:-1:-1;;;7441:40:2;;::::1;::::0;::::1;::::0;;;;;;;;;;;;7197:33;;-1:-1:-1;7441:12:2;;::::1;::::0;:21:::1;::::0;:40;;;;;7324:17;;7441:40;;;;;;;;:12;:40;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;;;7612:17:2;::::1;;::::0;;;:10:::1;7441:40;7612:17:::0;;;;:27:::1;;::::0;7586:87:::1;::::0;7653:10;7586:12:::1;:87::i;:::-;-1:-1:-1::0;;;;;7556:17:2;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:27:::1;::::0;;::::1;:117:::0;;;;7683:28:::1;;:33:::0;;;::::1;::::0;;7773:8:::1;:13:::0;;;;::::1;::::0;;;7796:11:::1;:25:::0;;;::::1;::::0;;7868:46;;;;;7898:15:::1;7868:46:::0;;::::1;::::0;;;;;;7556:17;;7868:46:::1;::::0;;;;;;;;;::::1;7984:12;:10;:12::i;:::-;2204:1;;7113:890::o:0;11188:265::-;11230:7;11267:4;11230:7;11302:49;11315:30;11267:4;1300:2;11315:12;:30::i;11302:49::-;11281:70;;11361:20;11384:33;11397:7;11406:10;11384:12;:33::i;:::-;11361:56;-1:-1:-1;;;;11188:265:2;:::o;828:20::-;;;;:::o;10499:105::-;-1:-1:-1;;;;;10580:17:2;10554:7;10580:17;;;:10;:17;;;;;;;10499:105::o;1710:145:5:-;1301:12;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:5;;1282:68;;;;;-1:-1:-1;;;1282:68:5;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1282:68:5;;;;;;;;;;;;;;;1816:1:::1;1800:6:::0;;1779:40:::1;::::0;-1:-1:-1;;;;;1800:6:5;;::::1;::::0;1779:40:::1;::::0;1816:1;;1779:40:::1;1846:1;1829:19:::0;;-1:-1:-1;;;;;;1829:19:5::1;::::0;;1710:145::o;345:26:2:-;;;-1:-1:-1;;;;;345:26:2;;:::o;1082:25::-;;;;:::o;13391:410::-;13490:13;1301:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:5;;1282:68;;;;;-1:-1:-1;;;1282:68:5;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1282:68:5;;;;;;;;;;;;;;;13523:16:2::1;:5:::0;13533;13523:9:::1;:16::i;:::-;13543:2;13523:22;13515:64;;;::::0;;-1:-1:-1;;;13515:64:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;13623:7;:15:::0;;;13648:7:::1;:15:::0;;;13729:44:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;13757:15:::1;13729:44:::0;;;;;;::::1;::::0;;;;;;;::::1;-1:-1:-1::0;13790:4:2::1;1360:1:5;13391:410:2::0;;;;:::o;12383:597::-;12438:18;;:::i;:::-;12468:16;;:::i;:::-;-1:-1:-1;;;;;;12487:17:2;;;;;;:10;:17;;;;;;;;;12468:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12514:31;;:::i;:::-;:430;;;;;;;;12562:1;:11;;;12514:430;;;;12587:1;:11;;;12514:430;;;;12612:1;:10;;;12514:430;;;;12636:1;:12;;;12514:430;;;;12662:1;:13;;;12514:430;;;;12689:1;:19;;;12514:430;;;;12722:1;:16;;;12514:430;;;;12752:1;:11;;;12514:430;;;;12777:1;:11;;;12514:430;;;;12802:1;:14;;;12514:430;;;;12830:1;:12;;;12514:430;;;;12856:1;:20;;;12514:430;;;;12890:1;:17;;;12514:430;;;;12921:1;:13;;;12514:430;;;;;12961:12;12954:19;;;;12383:597;;;:::o;1562:51::-;1604:9;1562:51;:::o;11459:264::-;11500:7;11537:4;11500:7;11572:49;11585:30;11537:4;1300:2;11585:12;:30::i;11572:49::-;11551:70;;11631:20;11654:33;11667:7;11676:10;11654:12;:33::i;1507:49::-;1549:7;1507:49;:::o;1078:85:5:-;1124:7;1150:6;-1:-1:-1;;;;;1150:6:5;1078:85;:::o;10293:95:2:-;10334:7;10360:21;10370:10;10360:9;:21::i;:::-;10353:28;;10293:95;:::o;650:27::-;;;-1:-1:-1;;;;;650:27:2;;:::o;1421:19::-;;;;:::o;9572:159::-;9672:4;2057:1;2044:10;:8;:10::i;:::-;:14;2036:23;;;;;;9695:29:::1;9711:3;9716:7;9695:15;:29::i;:::-;9688:36:::0;9572:159;-1:-1:-1;;;9572:159:2:o;10720:115::-;10791:12;;:37;;;-1:-1:-1;;;10791:37:2;;10822:4;10791:37;;;;;;10765:7;;-1:-1:-1;;;;;10791:12:2;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10791:37:2;;-1:-1:-1;10720:115:2;:::o;1164:27::-;;;;:::o;723:21::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;723:21:2;;-1:-1:-1;723:21:2;:::o;6022:110::-;6069:7;6095:30;6105:10;6117:7;6095:9;:30::i;926:22::-;;;;:::o;1197:21::-;;;;;;:::o;683:34::-;;;-1:-1:-1;;;;;683:34:2;;:::o;11729:297::-;11814:7;;11851:49;11864:30;11877:7;1300:2;11864:12;:30::i;11851:49::-;11833:67;;11910:16;11929:30;11942:7;11951;11929:12;:30::i;:::-;11910:49;11729:297;-1:-1:-1;;;;11729:297:2:o;10610:104::-;-1:-1:-1;;;;;10694:13:2;;;10610:104::o;5480:521::-;5623:12;;:61;;;-1:-1:-1;;;5623:61:2;;5649:10;5623:61;;;;5669:4;5623:61;;;;;;;;;;;;5526:7;;-1:-1:-1;;;;;5623:12:2;;:25;;:61;;;;;;;;;;;;;;5526:7;5623:12;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5623:61:2;5615:70;;;;;;5747:15;:26;;;;;;5794:10;5747:15;5783:22;;;:10;:22;;;;;;;;;:35;;:40;;-1:-1:-1;5783:40:2;;;5916:46;;;;;5946:15;5916:46;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5979:15:2;;;5480:521::o;805:17::-;;;;:::o;2004:240:5:-;1301:12;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:5;;1282:68;;;;;-1:-1:-1;;;1282:68:5;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1282:68:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;2092:22:5;::::1;2084:73;;;;-1:-1:-1::0;;;2084:73:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:6;::::0;;2172:38:::1;::::0;-1:-1:-1;;;;;2172:38:5;;::::1;::::0;2193:6;::::1;::::0;2172:38:::1;::::0;::::1;2220:6;:17:::0;;-1:-1:-1;;;;;;2220:17:5::1;-1:-1:-1::0;;;;;2220:17:5;;;::::1;::::0;;;::::1;::::0;;2004:240::o;7019:73:2:-;2192:1;2177:12;:10;:12::i;:::-;:16;2169:25;;;;;;7068:17:::1;:15;:17::i;:::-;;7019:73::o:0;13863:524::-;13957:13;1301:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1290:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1290:23:5;;1282:68;;;;;-1:-1:-1;;;1282:68:5;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1282:68:5;;;;;;;;;;;;;;;13982:6:2::1;13978:166;13997:4;:11:::0;13993:15;::::1;13978:166;;;14076:9;14086:1;14076:12;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14076:30:2::1;;14107:10;14076:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;14076:42:2;14068:65:::1;;;::::0;;-1:-1:-1;;;14068:65:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;14068:65:2;;;;;;;;;;;;;::::1;;14010:3;;13978:166;;;;14153:28;14184:4;14153:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;14153:35:2::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;-1:-1:-1::0;;14198:16:2;;14153:35;;-1:-1:-1;14198:16:2::1;::::0;:4:::1;::::0;-1:-1:-1;14198:16:2::1;::::0;::::1;::::0;-1:-1:-1;14198:16:2;-1:-1:-1;14198:16:2::1;:::i;:::-;;14262:10;-1:-1:-1::0;;;;;14230:129:2::1;;14286:11;14311:9;14334:15;14230:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;14376:4:2::1;::::0;13863:524;-1:-1:-1;;13863:524:2:o;12986:283::-;13100:8;;13080:15;;13045:7;;;;13080:38;;13114:3;;13080:29;;13100:8;;13080:19;:29::i;:::-;:33;;:38::i;:::-;13064:54;;13169:1;13148:18;;:22;13147:115;;13261:1;13147:115;;;13223:18;;-1:-1:-1;;;;;13200:17:2;;;;;;:10;:17;;;;;;13190:52;;13223:18;13190:28;;:5;;:9;:28::i;6155:842::-;6316:12;;:61;;;-1:-1:-1;;;6316:61:2;;6342:10;6316:61;;;;6362:4;6316:61;;;;;;;;;;;;6219:7;;-1:-1:-1;;;;;6316:12:2;;:25;;:61;;;;;;;;;;;;;;6219:7;6316:12;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6316:61:2;6308:70;;;;;;6440:13;:24;;;;;;:13;6541:30;6556:5;6457:7;6541:14;:30::i;:::-;-1:-1:-1;;;;;6624:179:2;;6665:17;;;;:10;:17;;;;;;;;:27;;6706:10;:17;;;;;;;6737;;;:27;;;6624:179;;;;;;;;;;;;;;;;6778:15;6624:179;;;;;6527:44;;-1:-1:-1;6624:179:2;;-1:-1:-1;;;;;;;;;;;6624:179:2;;;;;;;;6878:12;:10;:12::i;10394:99::-;10437:7;10463:23;10475:10;10463:11;:23::i;726:413:0:-;1086:20;1124:8;;;726:413::o;3538:215:7:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:7;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:7:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:7;;;3136:155::o;14557:737:2:-;14607:17;14627:11;:3;14635:2;14627:7;:11::i;:::-;14607:31;;14649:16;14669:22;14683:7;;14669:9;:13;;:22;;;;:::i;:::-;14649:43;;14723:16;14743:22;14757:7;;14743:9;:13;;:22;;;;:::i;:::-;14815:15;;14723:43;;-1:-1:-1;14815:29:2;;14835:8;14815:19;:29::i;:::-;14797:15;:47;14923:18;;:22;14919:369;;15027:120;15057:15;;15115:18;;-1:-1:-1;;;15091:8:2;:20;15090:43;;;;;;15027:12;:120::i;:::-;15009:15;:138;14919:369;;;15250:15;:27;;;;;;14919:369;14557:737;;;;:::o;15335:1242::-;15508:14;;15401:15;;1549:7;;15482:41;;15401:15;;15482:25;:41::i;:::-;:59;15478:278;;;15597:43;15606:14;:12;:14::i;:::-;15597:43;;;;;;;;;;;;;;;;;;;;;15711:14;:34;;;15478:278;1604:9;15828:47;15845:17;15864:10;;15828:16;:47::i;:::-;:65;:103;;;;;15930:1;15909:18;;:22;15828:103;15811:760;;;16039:8;;16019:15;;16003:13;;16019:82;;16079:8;;16019:38;;16053:3;;16019:38;;:15;16039:8;;16019:19;:29::i;:82::-;16003:98;;16115:14;16140:37;16166:10;;16140:17;:25;;:37;;;;:::i;:::-;16286:15;;16132:45;;;;-1:-1:-1;16286:31:2;;16132:45;16286:23;:31::i;:::-;16268:15;:49;16379:15;;16435:18;;16349:118;;16379:15;-1:-1:-1;;;16413:18:2;;16435;16412:41;;;16349:118;16331:15;:136;-1:-1:-1;;16530:10:2;:30;15335:1242::o;2690:175:7:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:1;685:10;598:104;:::o;19464:1969:2:-;19609:10;19566:13;19648:19;;;:10;:19;;;;;;19566:13;;19609:10;19637:30;;;19629:39;;;;;;19783:1;19768:12;:10;:12::i;:::-;:16;19764:56;;;19800:9;:7;:9::i;:::-;-1:-1:-1;;;;;19897:19:2;;;;;;:10;:19;;;;;;19884:42;;19918:7;19884:12;:42::i;:::-;-1:-1:-1;;;;;19862:19:2;;;;;;;:10;:19;;;;;;:64;;;;19974:22;;;;;;;19961:45;;19998:7;19961:12;:45::i;:::-;-1:-1:-1;;;;;19936:22:2;;;;;;;:10;:22;;;;;;;;:70;;;;20110:15;;;20078:19;;;;;:10;:19;;;;;:58;;20110:25;;;20078:58;;;;;;20181:15;;20146:22;;;;;;:61;;20181:25;;;20146:61;;;;;;20310:10;:22;;;;:32;:37;:95;;;;-1:-1:-1;;;;;;20363:22:2;;;;;;:10;:22;;;;;:37;;;:42;20310:95;20293:158;;;20430:5;:10;;20439:1;20430:10;;;20293:158;-1:-1:-1;;;;;20487:19:2;;;;;;;:10;:19;;;;;;;;:38;;;:43;;20529:1;20487:43;;;;;;20540:37;;;;:48;;;;;;20598:22;;;;;;;;;;:37;;;:48;;;;;;20656:38;;:43;;;;;;-1:-1:-1;20751:13:2;;;;;;;;20830:57;;;;;20871:15;20830:57;;;;;;;;;20598:22;;20830:57;;;;;;;;;-1:-1:-1;;;;;20951:187:2;;20994:19;;;;:10;:19;;;;;;;;:29;;21037:10;:19;;;;;;;21070;;;:29;;;20951:187;;;;;;;;;;;;;;;;21113:15;20951:187;;;;;-1:-1:-1;;;;;;;;;;;20951:187:2;;;;;;;;-1:-1:-1;;;;;21205:199:2;;21251:22;;;;:10;:22;;;;;;;;:32;;21297:10;:22;;;;;;;21333;;;:32;;;21205:199;;;;;;;;;;;;;;;;21379:15;21205:199;;;;;-1:-1:-1;;;;;;;;;;;21205:199:2;;;;;;;;-1:-1:-1;21422:4:2;;19464:1969;-1:-1:-1;;;19464:1969:2:o;18239:1178::-;18284:7;18319:10;18284:7;18426:18;18319:10;18426:11;:18::i;:::-;-1:-1:-1;;;;;18454:17:2;;;;;;:10;:17;;;;;:53;;-1:-1:-1;;;18484:22:2;;18454:53;;;18405:39;;-1:-1:-1;18680:38:2;18695:10;18405:39;18680:14;:38::i;:::-;18765:55;;;;;;;;;;;;18804:15;18765:55;;;;;;18662:56;;-1:-1:-1;;;;;;18765:55:2;;;;;;;;;;;;-1:-1:-1;;;;;18924:17:2;;;;;;:10;:17;;;;;:28;;;18898:88;;18966:10;18898:12;:88::i;:::-;-1:-1:-1;;;;;18867:17:2;;;;;;:10;:17;;;;;;;;:28;;;:119;;;;18996:29;;;:34;;19029:1;18996:34;;;;;;19124:27;;19165:10;:17;;;;;;;19196;;;:27;;;;19083:179;;;;;;;;;;;;;;;;19237:15;19083:179;;;;;;18867:17;;-1:-1:-1;;;;;;;;;;;19083:179:2;;;;;;;;;19341:12;:10;:12::i;:::-;19403:7;-1:-1:-1;;;18239:1178:2;:::o;16623:1576::-;-1:-1:-1;;;;;16835:22:2;;16724:7;16835:22;;;:10;:22;;;;;:32;:37;:95;;;;-1:-1:-1;;;;;;16888:22:2;;;;;;:10;:22;;;;;:37;;;:42;16835:95;16818:158;;;16955:5;:10;;16964:1;16955:10;;;16818:158;17014:8;:13;;17026:1;17014:13;;;:8;17106:3;17073:30;17086:7;1300:2;17073:12;:30::i;:::-;:36;;;;;;17043:66;;17121:17;17141:42;17154:7;17163:19;17141:12;:42::i;:::-;17238:56;;;;;;;;;;;;17278:15;17238:56;;;;;;17121:62;;-1:-1:-1;;;;;;17238:56:2;;;;;;;;;;;;17403:1;17393:7;:11;:93;;;;-1:-1:-1;17468:18:2;;17424:41;17437:7;17468:18;17424:12;:41::i;:::-;:62;17393:93;17372:124;;;;;;17510:18;;:22;17506:141;;17548:18;:29;;;;;;17506:141;;;17608:18;:28;;;17506:141;17712:33;17725:19;17712:12;:33::i;:::-;-1:-1:-1;;;;;17793:22:2;;;;;;:10;:22;;;;;;17780:45;;17817:7;17780:12;:45::i;:::-;-1:-1:-1;;;;;17755:22:2;;;;;;:10;:22;;;;;;;;:70;;;;17900:15;;17964:10;:22;;;;;:41;;17900:25;;;17964:41;;;;;;18015:10;:22;;;:43;;;;;;18068:32;;:37;;-1:-1:-1;18068:37:2;;;17918:7;-1:-1:-1;;16623:1576:2;;;;:::o;7288:165:7:-;7344:4;7368:1;7364;:5;7360:87;;;-1:-1:-1;7392:1:7;7385:8;;7360:87;-1:-1:-1;7431:5:7;;;7424:12;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1847600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accountOf(address)": "infinite",
								"balanceOf(address)": "1232",
								"bnbReceiver()": "1082",
								"buyPrice()": "infinite",
								"calculateSharesReceived(uint256)": "infinite",
								"calculateTokensReceived(uint256)": "infinite",
								"checkImmunity(address)": "infinite",
								"compound()": "infinite",
								"dailyEstimate(address)": "infinite",
								"deposit(uint256)": "infinite",
								"depositTo(address,uint256)": "infinite",
								"dividendsOf(address)": "2900",
								"donate(uint256)": "infinite",
								"dripPoolBalance()": "1065",
								"dripRate()": "1168",
								"forDivs()": "1044",
								"forPool()": "1110",
								"harvest()": "infinite",
								"jpeg(uint256)": "2059",
								"lastPayout()": "1131",
								"lastRebaseTime()": "1133",
								"myEarnings()": "2984",
								"myTokens()": "1187",
								"owner()": "1083",
								"payoutFrequency()": "309",
								"rebaseFrequency()": "353",
								"renounceOwnership()": "infinite",
								"requiredBalance()": "1067",
								"sellPrice()": "553",
								"setFeeSplit(uint256,uint256)": "infinite",
								"setImmunityToken(address[])": "infinite",
								"stakingToken()": "1171",
								"tokenAddress()": "1127",
								"tokenBalance(address)": "1062",
								"totalBalance()": "infinite",
								"totalClaims()": "1110",
								"totalDeposits()": "1043",
								"totalSupply()": "1111",
								"totalTxs()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"users()": "1131",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_compoundTokens()": "infinite",
								"_depositTokens(address,uint256)": "infinite",
								"_transferTokens(address,uint256)": "infinite",
								"allocateFees(uint256)": "infinite",
								"distribute()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4489,
									"end": 5051,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 877,
									"end": 894,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 919,
									"end": 925,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 919,
									"end": 937,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 925,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 919,
									"end": 925,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4582,
									"end": 4609,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4609,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4609,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4609,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4609,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4609,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4646,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4582,
									"end": 4646,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4646,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4613,
									"end": 4646,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4632,
									"end": 4645,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551825"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4613,
									"end": 4646,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4613,
									"end": 4646,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 4613,
									"end": 4646,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4613,
									"end": 4646,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4613,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "494E56414C49445F41444452455353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 4561,
									"end": 4687,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4710,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4698,
									"end": 4726,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4736,
									"end": 4772,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4797,
									"end": 4807,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4783,
									"end": 4807,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4895,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4887,
									"end": 4907,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4931,
									"end": 4946,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 4917,
									"end": 4927,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4917,
									"end": 4947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4917,
									"end": 4947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4917,
									"end": 4947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4982,
									"end": 4989,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 4982,
									"end": 4993,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 5003,
									"end": 5010,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 5003,
									"end": 5014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5003,
									"end": 5014,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5003,
									"end": 5014,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5025,
									"end": 5044,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 21435,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206187f33088609c0b09f692026d0e9a829460aed741848a10ab062f7f78b3d40164736f6c63430007040033",
									".code": [
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "D7C3771D"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "F69E2046"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "F6DB0DA0"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "FBAF1BBD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "FFAAD6A5"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "FFE6BBD8"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "D7C3771D"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "E02E1E9C"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "EEDC966A"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "F14FAF6F"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "F2020275"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "AD7A672F"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "AD7A672F"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "AECB6D28"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "B03CF5A7"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "B6B55F25"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "B9DB102A"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "D3261592"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "949E8ACD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "9D76EA58"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "A01496DE"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "4B750334"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "7D882097"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "7D882097"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "7E6335C7"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "8086B8BA"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "81FCE645"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "8620410B"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "89375ABF"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "4B750334"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "537A39BB"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "72F702F3"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "1F38B9CD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "1F38B9CD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "36599EAD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "41C61383"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "4641257D"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "65318B"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "8560ACE"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "10D0FFDD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "1924063E"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5238,
											"end": 5249,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5238,
											"end": 5249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5220,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5220,
											"end": 5261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5238,
											"end": 5249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5260,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5220,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5220,
											"end": 5261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5220,
											"end": 5261,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5220,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5311,
											"end": 5326,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5298,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "3C2BD1B3F5CA07AFB09FBEE41AC43DA2B98D9C2E9832673052E546BD1D4C091D"
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5327,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 21435,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "1C0"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 723,
											"end": 744,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2166,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "3A"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH data",
											"source": 0,
											"value": "51DDAA38748C0A1144620FB5BFE8EDAB31EA437571AD591A7734BBFD0429AEAE"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "3A"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10999,
											"end": 11006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11142,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11101,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11088,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11073,
											"end": 11088,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11108,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11037,
											"end": 11175,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11018,
											"end": 11175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10942,
											"end": 11182,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 538,
											"end": 568,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12117,
											"end": 12124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12173,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 12155,
											"end": 12173,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12144,
											"end": 12151,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12144,
											"end": 12173,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12144,
											"end": 12173,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12184,
											"end": 12199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12250,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12202,
											"end": 12209,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 12250,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12250,
											"end": 12280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12250,
											"end": 12280,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12250,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12285,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12237,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12237,
											"end": 12286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12237,
											"end": 12286,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12237,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12296,
											"end": 12312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12315,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 12328,
											"end": 12335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12315,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 12315,
											"end": 12345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12315,
											"end": 12345,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 12315,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12296,
											"end": 12345,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12032,
											"end": 12377,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10936,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2044,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2058,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8115,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8144,
											"end": 8154,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8133,
											"end": 8161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8133,
											"end": 8161,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8133,
											"end": 8161,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8125,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8216,
											"end": 8223,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 8203,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8203,
											"end": 8239,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8266,
											"end": 8279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8282,
											"end": 8307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8296,
											"end": 8306,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8282,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8282,
											"end": 8307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8282,
											"end": 8307,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8282,
											"end": 8307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8266,
											"end": 8307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8266,
											"end": 8307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8347,
											"end": 8355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8472,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8343,
											"end": 8472,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8455,
											"end": 8456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8433,
											"end": 8456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 8456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8472,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8343,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8573,
											"end": 8580,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8601,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8560,
											"end": 8602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8560,
											"end": 8602,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8560,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8666,
											"end": 8673,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8633,
											"end": 8674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8633,
											"end": 8674,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8633,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8612,
											"end": 8674,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8727,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8704,
											"end": 8744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8743,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8704,
											"end": 8744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8704,
											"end": 8744,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8704,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8694,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8701,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8744,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8744,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8744,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8873,
											"end": 8888,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 8873,
											"end": 8888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8957,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 8947,
											"end": 8964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8964,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8873,
											"end": 8898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8873,
											"end": 8898,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8873,
											"end": 8898,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8902,
											"end": 8926,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8926,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8873,
											"end": 8927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8947,
											"end": 8983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9064,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9077,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9064,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9064,
											"end": 9097,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9064,
											"end": 9097,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9064,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9225,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "PUSH",
											"source": 2,
											"value": "90EBB005D68EFEE044927E1E77E1FD0CECC508368AA72C39250A787EED5F0A70"
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9226,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9347,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9371,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9378,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9392,
											"end": 9409,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9392,
											"end": 9409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9392,
											"end": 9409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9392,
											"end": 9419,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9392,
											"end": 9419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9392,
											"end": 9419,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9433,
											"end": 9448,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "27CC9C295B15A532BB1B5F9308F1D54813E694C2EBDD1C2CED210BFE52DCD57E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9458,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9527,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9527,
											"end": 9539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9527,
											"end": 9539,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9527,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 9550,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9979,
											"end": 9992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 9992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9979,
											"end": 9992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9979,
											"end": 9992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10073,
											"end": 10084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10069,
											"end": 10084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10069,
											"end": 10084,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10128,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10129,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10171,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 10152,
											"end": 10171,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10131,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10152,
											"end": 10178,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10178,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10178,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10147,
											"end": 10178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10089,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10086,
											"end": 10089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10206,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10206,
											"end": 10221,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10201,
											"end": 10221,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10244,
											"end": 10248,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10237,
											"end": 10248,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10237,
											"end": 10248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10237,
											"end": 10248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10237,
											"end": 10248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10237,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10237,
											"end": 10248,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10275,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10280,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 10287,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1076,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2193,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7187,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7161,
											"end": 7174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7218,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7218,
											"end": 7230,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7218,
											"end": 7230,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7218,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7334,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7376,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7354,
											"end": 7376,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7197,
											"end": 7230,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7197,
											"end": 7230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 7441,
											"end": 7462,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7441,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7639,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7612,
											"end": 7639,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7639,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7586,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7586,
											"end": 7673,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7673,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7586,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7566,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7556,
											"end": 7583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7673,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7673,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7673,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7711,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7683,
											"end": 7711,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7781,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7807,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7898,
											"end": 7913,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7556,
											"end": 7573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "1B091269E929DF55D64D6EA7E9CADBE4FB38DCE5CCDC995767BC515030DBFBBF"
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7914,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7984,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7984,
											"end": 7996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7984,
											"end": 7996,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7984,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 8003,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11230,
											"end": 11237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11267,
											"end": 11271,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11230,
											"end": 11237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11302,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 11315,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11267,
											"end": 11271,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 11315,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11315,
											"end": 11345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11302,
											"end": 11351,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 11302,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11281,
											"end": 11351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11281,
											"end": 11351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11361,
											"end": 11381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11397,
											"end": 11404,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11406,
											"end": 11416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11384,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11384,
											"end": 11417,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11384,
											"end": 11417,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11384,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11361,
											"end": 11417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11453,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 828,
											"end": 848,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 828,
											"end": 848,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10554,
											"end": 10561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10590,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10499,
											"end": 10604,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 345,
											"end": 371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 345,
											"end": 371,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13490,
											"end": 13503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13523,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13523,
											"end": 13528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13533,
											"end": 13538,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13523,
											"end": 13532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 13523,
											"end": 13539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13523,
											"end": 13539,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13523,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13543,
											"end": 13545,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 13523,
											"end": 13545,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "54454E5F504F5254494F4E535F524551554952455F4449564953494F4E000000"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13623,
											"end": 13630,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 13623,
											"end": 13638,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13623,
											"end": 13638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13623,
											"end": 13638,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13648,
											"end": 13655,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 13648,
											"end": 13663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13648,
											"end": 13663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13648,
											"end": 13663,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13757,
											"end": 13772,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "PUSH",
											"source": 2,
											"value": "677017FA3A0FE0F50A95E6024C5B688F2B14A4696C4A897C459715CABFC1C03A"
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13773,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13790,
											"end": 13794,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13391,
											"end": 13801,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 12468,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 12468,
											"end": 12484,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12468,
											"end": 12484,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 12468,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12497,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "1C0"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "1A0"
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 12514,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 12514,
											"end": 12545,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12514,
											"end": 12545,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 12514,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "1C0"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12562,
											"end": 12563,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12562,
											"end": 12573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12562,
											"end": 12573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12562,
											"end": 12573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12587,
											"end": 12588,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12587,
											"end": 12598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12587,
											"end": 12598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12587,
											"end": 12598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12612,
											"end": 12613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12612,
											"end": 12622,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12612,
											"end": 12622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12612,
											"end": 12622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12636,
											"end": 12637,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12636,
											"end": 12648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12636,
											"end": 12648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12636,
											"end": 12648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12662,
											"end": 12663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12662,
											"end": 12675,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12662,
											"end": 12675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12662,
											"end": 12675,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12689,
											"end": 12690,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12689,
											"end": 12708,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 12689,
											"end": 12708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12689,
											"end": 12708,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12722,
											"end": 12723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12722,
											"end": 12738,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 12722,
											"end": 12738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12722,
											"end": 12738,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12752,
											"end": 12753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12777,
											"end": 12788,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12777,
											"end": 12788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12777,
											"end": 12788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12802,
											"end": 12803,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12802,
											"end": 12816,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 12802,
											"end": 12816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12802,
											"end": 12816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12830,
											"end": 12831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12830,
											"end": 12842,
											"name": "PUSH",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 12830,
											"end": 12842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12830,
											"end": 12842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12856,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 12856,
											"end": 12876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12856,
											"end": 12876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12890,
											"end": 12891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12890,
											"end": 12907,
											"name": "PUSH",
											"source": 2,
											"value": "1A0"
										},
										{
											"begin": 12890,
											"end": 12907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12890,
											"end": 12907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12934,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12921,
											"end": 12934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12961,
											"end": 12973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12954,
											"end": 12973,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12954,
											"end": 12973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12954,
											"end": 12973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12954,
											"end": 12973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12383,
											"end": 12980,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1613,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11459,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11500,
											"end": 11507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11541,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11500,
											"end": 11507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11572,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11585,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11537,
											"end": 11541,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 11585,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11585,
											"end": 11615,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11572,
											"end": 11621,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11572,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11551,
											"end": 11621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11551,
											"end": 11621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11654,
											"end": 11687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11667,
											"end": 11674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11676,
											"end": 11686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11654,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 11654,
											"end": 11687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "5460"
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1556,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10370,
											"end": 10380,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10360,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10353,
											"end": 10381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10353,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 650,
											"end": 677,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 650,
											"end": 677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 677,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9672,
											"end": 9676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2044,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2058,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 9711,
											"end": 9714,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 9695,
											"end": 9724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9695,
											"end": 9724,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 9695,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9724,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9572,
											"end": 9731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10765,
											"end": 10772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10772,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10813,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 10791,
											"end": 10813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10803,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10720,
											"end": 10835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1191,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 723,
											"end": 744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6022,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6105,
											"end": 6115,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6117,
											"end": 6124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6095,
											"end": 6125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 683,
											"end": 717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 683,
											"end": 717,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11814,
											"end": 11821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11814,
											"end": 11821,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11864,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11877,
											"end": 11884,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 11864,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11864,
											"end": 11894,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11851,
											"end": 11900,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11851,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 11942,
											"end": 11949,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11951,
											"end": 11958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11929,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11929,
											"end": 11959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11929,
											"end": 11959,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 11929,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11959,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 12026,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10694,
											"end": 10707,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10694,
											"end": 10707,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 10694,
											"end": 10707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10610,
											"end": 10714,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5659,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5533,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5648,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 5623,
											"end": 5648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5533,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5623,
											"end": 5684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5615,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5762,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5804,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5793,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5818,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5783,
											"end": 5818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5961,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "DA1788C3E861A58A47F0D46073B13C4D66EFCC259714744F920D1AFE7B8DEE5"
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5979,
											"end": 5994,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5979,
											"end": 5994,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 5994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 6001,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 805,
											"end": 822,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 805,
											"end": 822,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH data",
											"source": 5,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2193,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2169,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7068,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7092,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13957,
											"end": 13970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13982,
											"end": 13988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13997,
											"end": 14001,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13997,
											"end": 14008,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14008,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14008,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14086,
											"end": 14087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14076,
											"end": 14106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14106,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 14107,
											"end": 14117,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14076,
											"end": 14118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E4F545F455243373231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 14068,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14010,
											"end": 14013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14010,
											"end": 14013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14181,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14184,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14202,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14198,
											"end": 14202,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14262,
											"end": 14272,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "F0650831416F723858005CFEAE97A2D6F5E127D1E6AE8938574D1D73E7F4727C"
										},
										{
											"begin": 14286,
											"end": 14297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14311,
											"end": 14320,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14334,
											"end": 14349,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14230,
											"end": 14359,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14376,
											"end": 14380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14376,
											"end": 14380,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13863,
											"end": 14387,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 12986,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13080,
											"end": 13095,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 13080,
											"end": 13095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13052,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13080,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 13080,
											"end": 13118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13114,
											"end": 13117,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 13114,
											"end": 13117,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13080,
											"end": 13109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13080,
											"end": 13109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13080,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 13080,
											"end": 13109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13080,
											"end": 13109,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13080,
											"end": 13109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13080,
											"end": 13113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13080,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 13080,
											"end": 13118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13080,
											"end": 13118,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 13080,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13064,
											"end": 13118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13064,
											"end": 13118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13169,
											"end": 13170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13148,
											"end": 13166,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 13148,
											"end": 13166,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13148,
											"end": 13170,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13147,
											"end": 13262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 13147,
											"end": 13262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13261,
											"end": 13262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13147,
											"end": 13262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 13147,
											"end": 13262,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13147,
											"end": 13262,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 13147,
											"end": 13262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13223,
											"end": 13241,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 13223,
											"end": 13241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13210,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13190,
											"end": 13242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 13190,
											"end": 13242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13223,
											"end": 13241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13190,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13190,
											"end": 13218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13190,
											"end": 13195,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13190,
											"end": 13195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13190,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 13190,
											"end": 13218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6155,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6342,
											"end": 6352,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6341,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 6316,
											"end": 6341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6316,
											"end": 6377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6308,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6440,
											"end": 6464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6464,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6556,
											"end": 6561,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6541,
											"end": 6571,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6541,
											"end": 6571,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6541,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6675,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6716,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6754,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6778,
											"end": 6793,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6571,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6571,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "27CC9C295B15A532BB1B5F9308F1D54813E694C2EBDD1C2CED210BFE52DCD57E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6803,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 6878,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6878,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6878,
											"end": 6890,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10394,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10475,
											"end": 10485,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10463,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 7,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14607,
											"end": 14624,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 14627,
											"end": 14630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14637,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 14627,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14607,
											"end": 14638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14607,
											"end": 14638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14649,
											"end": 14665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 14683,
											"end": 14690,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 14683,
											"end": 14690,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14669,
											"end": 14678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14669,
											"end": 14682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14669,
											"end": 14682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 14669,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14649,
											"end": 14692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14649,
											"end": 14692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14723,
											"end": 14739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 14757,
											"end": 14764,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 14757,
											"end": 14764,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14743,
											"end": 14752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14743,
											"end": 14756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14743,
											"end": 14756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14815,
											"end": 14830,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 14815,
											"end": 14830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14723,
											"end": 14766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14723,
											"end": 14766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14815,
											"end": 14844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 14815,
											"end": 14844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14835,
											"end": 14843,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14815,
											"end": 14834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14815,
											"end": 14844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14815,
											"end": 14844,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 14815,
											"end": 14844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14797,
											"end": 14812,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 14797,
											"end": 14844,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 14923,
											"end": 14941,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 14945,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15027,
											"end": 15147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 15057,
											"end": 15072,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 15057,
											"end": 15072,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15133,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 15115,
											"end": 15133,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15091,
											"end": 15099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15091,
											"end": 15111,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15090,
											"end": 15133,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 15027,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 15027,
											"end": 15147,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15027,
											"end": 15147,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 15027,
											"end": 15147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15009,
											"end": 15024,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 15009,
											"end": 15147,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 15250,
											"end": 15277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15250,
											"end": 15277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15250,
											"end": 15277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15250,
											"end": 15277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15250,
											"end": 15277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15250,
											"end": 15277,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 14919,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14557,
											"end": 15294,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15335,
											"end": 16577,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15335,
											"end": 16577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15508,
											"end": 15522,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 15508,
											"end": 15522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15416,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "5460"
										},
										{
											"begin": 1549,
											"end": 1556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15482,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 15482,
											"end": 15523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15482,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 15482,
											"end": 15523,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15482,
											"end": 15523,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 15482,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15482,
											"end": 15541,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 15478,
											"end": 15756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "PUSH",
											"source": 2,
											"value": "2CFCE469A63F2E9972B7F23DA751E6943ED2B091C10E40B5C43B5F6105BF20EA"
										},
										{
											"begin": 15606,
											"end": 15620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 15606,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 15606,
											"end": 15620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15606,
											"end": 15620,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 15606,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15597,
											"end": 15640,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 15711,
											"end": 15745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15711,
											"end": 15745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15711,
											"end": 15745,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15756,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 15478,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 15828,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 15845,
											"end": 15862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15864,
											"end": 15874,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 15864,
											"end": 15874,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 15828,
											"end": 15875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15828,
											"end": 15875,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 15828,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15893,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15930,
											"end": 15931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15927,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 15909,
											"end": 15927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15909,
											"end": 15931,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 15828,
											"end": 15931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15811,
											"end": 16571,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15811,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 15811,
											"end": 16571,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16034,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 16019,
											"end": 16034,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16003,
											"end": 16016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16003,
											"end": 16016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16019,
											"end": 16101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16087,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 16079,
											"end": 16087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 16019,
											"end": 16057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16053,
											"end": 16056,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 16053,
											"end": 16056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16019,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 16019,
											"end": 16048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16019,
											"end": 16101,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16019,
											"end": 16101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16003,
											"end": 16101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16003,
											"end": 16101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 16166,
											"end": 16176,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 16166,
											"end": 16176,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16140,
											"end": 16157,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16140,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 16140,
											"end": 16165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 16140,
											"end": 16177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16286,
											"end": 16301,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 16286,
											"end": 16301,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16286,
											"end": 16317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 16286,
											"end": 16317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16132,
											"end": 16177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16286,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 16286,
											"end": 16317,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16286,
											"end": 16317,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 16286,
											"end": 16317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 16268,
											"end": 16317,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16394,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 16379,
											"end": 16394,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16349,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 16349,
											"end": 16467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16413,
											"end": 16431,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16413,
											"end": 16431,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16412,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 16412,
											"end": 16453,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16412,
											"end": 16453,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 16349,
											"end": 16467,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 16349,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16331,
											"end": 16346,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 16331,
											"end": 16467,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16530,
											"end": 16540,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 16530,
											"end": 16560,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15335,
											"end": 16577,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19464,
											"end": 21433,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 19464,
											"end": 21433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19609,
											"end": 19619,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19566,
											"end": 19579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19658,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19667,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19566,
											"end": 19579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19566,
											"end": 19579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19609,
											"end": 19619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19637,
											"end": 19667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19637,
											"end": 19667,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19637,
											"end": 19667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 19629,
											"end": 19668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19783,
											"end": 19784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19768,
											"end": 19780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 19768,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 19768,
											"end": 19780,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19768,
											"end": 19780,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 19768,
											"end": 19780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19768,
											"end": 19784,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19764,
											"end": 19820,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19764,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 19764,
											"end": 19820,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19800,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 19800,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 19800,
											"end": 19809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19800,
											"end": 19809,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 19800,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19907,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19884,
											"end": 19926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 19884,
											"end": 19926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19918,
											"end": 19925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19884,
											"end": 19896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 19884,
											"end": 19926,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19884,
											"end": 19926,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 19884,
											"end": 19926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19872,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19926,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19926,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19862,
											"end": 19926,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19974,
											"end": 19996,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19961,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 19961,
											"end": 20006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19998,
											"end": 20005,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19961,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 19961,
											"end": 20006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19961,
											"end": 20006,
											"name": "tag",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 19961,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19946,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 20006,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 20006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 20006,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 19936,
											"end": 20006,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20110,
											"end": 20125,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 20110,
											"end": 20125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20110,
											"end": 20125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20088,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20097,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20110,
											"end": 20135,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 20110,
											"end": 20135,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 20110,
											"end": 20135,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20078,
											"end": 20136,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20181,
											"end": 20196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20181,
											"end": 20196,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20168,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20168,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20181,
											"end": 20206,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20181,
											"end": 20206,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 20181,
											"end": 20206,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20146,
											"end": 20207,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20320,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20310,
											"end": 20332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20332,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20342,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20405,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20405,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 20310,
											"end": 20405,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20373,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20400,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20363,
											"end": 20400,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20400,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20363,
											"end": 20405,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20310,
											"end": 20405,
											"name": "tag",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 20310,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20293,
											"end": 20451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20293,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 20293,
											"end": 20451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20430,
											"end": 20435,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20430,
											"end": 20440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20430,
											"end": 20440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20439,
											"end": 20440,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20430,
											"end": 20440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20430,
											"end": 20440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20430,
											"end": 20440,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20293,
											"end": 20451,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 20293,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20497,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20506,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20525,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 20487,
											"end": 20525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20529,
											"end": 20530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20487,
											"end": 20530,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20577,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 20540,
											"end": 20577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20588,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20540,
											"end": 20588,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20635,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20598,
											"end": 20635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20635,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20646,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20646,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20646,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20646,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20694,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 20656,
											"end": 20694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20699,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20656,
											"end": 20699,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20751,
											"end": 20764,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20871,
											"end": 20886,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "PUSH",
											"source": 2,
											"value": "91C7D71A3AE3FB7CF61E00517BF4868E9E23D0BACE5E304CBC3B68DE5D85350E"
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20830,
											"end": 20887,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21004,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21013,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21023,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20994,
											"end": 21023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21047,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21070,
											"end": 21089,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 21070,
											"end": 21089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21070,
											"end": 21089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21070,
											"end": 21099,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21070,
											"end": 21099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21070,
											"end": 21099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21113,
											"end": 21128,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "27CC9C295B15A532BB1B5F9308F1D54813E694C2EBDD1C2CED210BFE52DCD57E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 21138,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21261,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21273,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21251,
											"end": 21283,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21307,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21297,
											"end": 21319,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21365,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21333,
											"end": 21365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21379,
											"end": 21394,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "27CC9C295B15A532BB1B5F9308F1D54813E694C2EBDD1C2CED210BFE52DCD57E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21205,
											"end": 21404,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21422,
											"end": 21426,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21422,
											"end": 21426,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19464,
											"end": 21433,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19464,
											"end": 21433,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18239,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 18239,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18284,
											"end": 18291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18319,
											"end": 18329,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 18284,
											"end": 18291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18426,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 18319,
											"end": 18329,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18426,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18426,
											"end": 18444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18426,
											"end": 18444,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 18426,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18464,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18507,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18484,
											"end": 18506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18484,
											"end": 18506,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18454,
											"end": 18507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18405,
											"end": 18444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18405,
											"end": 18444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18680,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 18695,
											"end": 18705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 18405,
											"end": 18444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 18680,
											"end": 18718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18680,
											"end": 18718,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 18680,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18804,
											"end": 18819,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18662,
											"end": 18718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18662,
											"end": 18718,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "PUSH",
											"source": 2,
											"value": "193A876AC91D11A4A0A71EBEF73B195BA55AA7C16D6755C93C21D973E692A02C"
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18765,
											"end": 18820,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18934,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18941,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18952,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 18924,
											"end": 18952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18924,
											"end": 18952,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18898,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 18898,
											"end": 18986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18966,
											"end": 18976,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18898,
											"end": 18910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 18898,
											"end": 18986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18898,
											"end": 18986,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 18898,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18877,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 18867,
											"end": 18895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18986,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18986,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18986,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19025,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 18996,
											"end": 19025,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19030,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18996,
											"end": 19030,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19124,
											"end": 19151,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19124,
											"end": 19151,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19213,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19213,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19223,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19196,
											"end": 19223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19237,
											"end": 19252,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18867,
											"end": 18884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "27CC9C295B15A532BB1B5F9308F1D54813E694C2EBDD1C2CED210BFE52DCD57E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19083,
											"end": 19262,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 19341,
											"end": 19353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 19341,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 19341,
											"end": 19353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19341,
											"end": 19353,
											"name": "tag",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 19341,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19403,
											"end": 19410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18239,
											"end": 19417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18239,
											"end": 19417,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16724,
											"end": 16731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16845,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16867,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16872,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16930,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 16835,
											"end": 16930,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16898,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16910,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16925,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 16888,
											"end": 16925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16930,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16835,
											"end": 16930,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 16835,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16818,
											"end": 16976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16818,
											"end": 16976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 16818,
											"end": 16976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16955,
											"end": 16960,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 16955,
											"end": 16965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16955,
											"end": 16965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16964,
											"end": 16965,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16955,
											"end": 16965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16955,
											"end": 16965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16955,
											"end": 16965,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16818,
											"end": 16976,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 16818,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17014,
											"end": 17022,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 17014,
											"end": 17027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17014,
											"end": 17027,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17026,
											"end": 17027,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17014,
											"end": 17027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17014,
											"end": 17027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17014,
											"end": 17027,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17014,
											"end": 17022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17106,
											"end": 17109,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 17073,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 17086,
											"end": 17093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 17073,
											"end": 17085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 17073,
											"end": 17103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17073,
											"end": 17103,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 17073,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17073,
											"end": 17109,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17121,
											"end": 17138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17141,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 17154,
											"end": 17161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17163,
											"end": 17182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 17141,
											"end": 17183,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17141,
											"end": 17183,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 17141,
											"end": 17183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17278,
											"end": 17293,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17121,
											"end": 17183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17121,
											"end": 17183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "PUSH",
											"source": 2,
											"value": "B49BB132260F6AA1C86E2D2A3957C097216E6EC9B5FA15867289F058B4D297AC"
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17294,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 17403,
											"end": 17404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17393,
											"end": 17400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17404,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17468,
											"end": 17486,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 17468,
											"end": 17486,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 17437,
											"end": 17444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17468,
											"end": 17486,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17424,
											"end": 17486,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 17372,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17510,
											"end": 17528,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 17510,
											"end": 17528,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17510,
											"end": 17532,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17548,
											"end": 17566,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 17548,
											"end": 17577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17548,
											"end": 17577,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17548,
											"end": 17577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17548,
											"end": 17577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17548,
											"end": 17577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17548,
											"end": 17577,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17608,
											"end": 17626,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 17608,
											"end": 17636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17608,
											"end": 17636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17608,
											"end": 17636,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 17506,
											"end": 17647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17712,
											"end": 17745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 17725,
											"end": 17744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17712,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 17712,
											"end": 17745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17712,
											"end": 17745,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 17712,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17803,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17780,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 17780,
											"end": 17825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17817,
											"end": 17824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17780,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17780,
											"end": 17825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17780,
											"end": 17825,
											"name": "tag",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 17780,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17765,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17777,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17825,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17825,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17755,
											"end": 17825,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17915,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 17900,
											"end": 17915,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17974,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 17964,
											"end": 17986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17986,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17986,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17986,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17925,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17925,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18005,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18025,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 18015,
											"end": 18037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18037,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18100,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 18068,
											"end": 18100,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18105,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 18068,
											"end": 18105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18105,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17918,
											"end": 17925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16623,
											"end": 18199,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7424,
											"end": 7436,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "288"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "448"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "448"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"27CC9C295B15A532BB1B5F9308F1D54813E694C2EBDD1C2CED210BFE52DCD57E": "29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177",
										"51DDAA38748C0A1144620FB5BFE8EDAB31EA437571AD591A7734BBFD0429AEAE": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"accountOf(address)": "8086b8ba",
							"balanceOf(address)": "70a08231",
							"bnbReceiver()": "d7c3771d",
							"buyPrice()": "8620410b",
							"calculateSharesReceived(uint256)": "e02e1e9c",
							"calculateTokensReceived(uint256)": "10d0ffdd",
							"checkImmunity(address)": "36599ead",
							"compound()": "f69e2046",
							"dailyEstimate(address)": "fbaf1bbd",
							"deposit(uint256)": "b6b55f25",
							"depositTo(address,uint256)": "ffaad6a5",
							"dividendsOf(address)": "0065318b",
							"donate(uint256)": "f14faf6f",
							"dripPoolBalance()": "aecb6d28",
							"dripRate()": "d3261592",
							"forDivs()": "1f38b9cd",
							"forPool()": "a01496de",
							"harvest()": "4641257d",
							"jpeg(uint256)": "b03cf5a7",
							"lastPayout()": "b9db102a",
							"lastRebaseTime()": "1924063e",
							"myEarnings()": "ffe6bbd8",
							"myTokens()": "949e8acd",
							"owner()": "8da5cb5b",
							"payoutFrequency()": "81fce645",
							"rebaseFrequency()": "89375abf",
							"renounceOwnership()": "715018a6",
							"requiredBalance()": "08560ace",
							"sellPrice()": "4b750334",
							"setFeeSplit(uint256,uint256)": "7e6335c7",
							"setImmunityToken(address[])": "f6db0da0",
							"stakingToken()": "72f702f3",
							"tokenAddress()": "9d76ea58",
							"tokenBalance(address)": "eedc966a",
							"totalBalance()": "ad7a672f",
							"totalClaims()": "41c61383",
							"totalDeposits()": "7d882097",
							"totalSupply()": "18160ddd",
							"totalTxs()": "537a39bb",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b",
							"users()": "f2020275",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_dripRate\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_compounded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onCompound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onDonate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onDonateBNB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_divs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onSetFeeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC721[]\",\"name\":\"oldOne\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"contract IERC721[]\",\"name\":\"newOne\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onSetImmunityToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"soldTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_liquidated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensEarned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"accountOf\",\"outputs\":[{\"internalType\":\"uint256[14]\",\"name\":\"\",\"type\":\"uint256[14]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnbReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateSharesReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkImmunity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isImmune\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"dailyEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dripPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dripRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forDivs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jpeg\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRebaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payoutFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_divs\",\"type\":\"uint256\"}],\"name\":\"setFeeSplit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721[]\",\"name\":\"_contract\",\"type\":\"address[]\"}],\"name\":\"setImmunityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTxs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DiamodSafe.sol\":\"DiamondSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]},\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]},\"contracts/DiamodSafe.sol\":{\"keccak256\":\"0x2a61ada9e77cddd40681fae78ad9dccdd267b4e9ee504c27d476755a4675633a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5729fec6d080f7ef372d09c57c75266312da563a6da67ebf3e2152629f441ac6\",\"dweb:/ipfs/QmUjMtepnbnZLFGWrJY5gDuSKwSspCjLB1Qrg5X5V3NpYD\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0xeb8c011452adc20505919f8025380c2c92a96417e37754891a124efe26d06104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5812d283c1ee0a50269953cc3978f60a6f5bf4892943a4351813631c786656f\",\"dweb:/ipfs/QmZED8YeS22yqkV86rYsR3CPSkLMD4S1m22DWChZD4jce5\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xb00b01076641e395e084d4d608fa07c800b43d2e2e693da6c548144085ac58ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fa763a7012ab18e0949a4dc631033e2c95d6c877f8be570ef474d6a3f81ae6a\",\"dweb:/ipfs/QmauEsZiHVs7yjJrUjMb1oxCwJiBtjuuSDBoExaP63xMtD\"]},\"contracts/SafeERC20.sol\":{\"keccak256\":\"0x018e2f7fedfb39f2695564356081fb76a5432c71f17ffa3a8bcd4b1af97f4daa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9630329ce796ce63e271c8b15492abf4553832ed1a1686001d98cc55889396cb\",\"dweb:/ipfs/QmQ1V92HceZ8nWVtj9nMw5eKDA7mFima3xb5WKriPvRwK9\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]},\"lib/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xd7fb250e2e4263d67b5a44b6d2bfa04a28599e2e3f5691e68a0cf5dc21743604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb0ba356d486a3efeab5c7db11efcbdd65a31e1bd832b522e12276ed8782c8c5\",\"dweb:/ipfs/QmeE3Y1WJu1SfjADtmZnm91neyQ2ukRvjAUeK36vVq71nK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2184,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 336,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)2060"
							},
							{
								"astId": 338,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "requiredBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 340,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 342,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "bnbReceiver",
								"offset": 0,
								"slot": "4",
								"type": "t_address_payable"
							},
							{
								"astId": 345,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "jpeg",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_contract(IERC721)2176)dyn_storage"
							},
							{
								"astId": 347,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "users",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 349,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "totalTxs",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 351,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "lastPayout",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 353,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "totalClaims",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 355,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "totalDeposits",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 357,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "dripPoolBalance",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 359,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "dripRate",
								"offset": 0,
								"slot": "12",
								"type": "t_uint8"
							},
							{
								"astId": 369,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "forPool",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 371,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "forDivs",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 379,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "lastRebaseTime",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 381,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "currentTotalStaked",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 383,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "profitPerShare_",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 438,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "payoutsOf_",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 442,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "balanceOf_",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 446,
								"contract": "contracts/DiamodSafe.sol:DiamondSafe",
								"label": "accountOf_",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_struct(Account)434_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IERC721)2176)dyn_storage": {
								"base": "t_contract(IERC721)2176",
								"encoding": "dynamic_array",
								"label": "contract IERC721[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)2060": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)2176": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_struct(Account)434_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DiamondSafe.Account)",
								"numberOfBytes": "32",
								"value": "t_struct(Account)434_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Account)434_storage": {
								"encoding": "inplace",
								"label": "struct DiamondSafe.Account",
								"members": [
									{
										"astId": 407,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "deposited",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 409,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 411,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "compounded",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 413,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "rewarded",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 415,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "contributed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 417,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "transferredShares",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 419,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "receivedShares",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 421,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xInvested",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 423,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xCompounded",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 425,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xRewarded",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 427,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xContributed",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 429,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xWithdrawn",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 431,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xTransferredShares",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 433,
										"contract": "contracts/DiamodSafe.sol:DiamondSafe",
										"label": "xReceivedShares",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "448"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721.sol\":{\"keccak256\":\"0xeb8c011452adc20505919f8025380c2c92a96417e37754891a124efe26d06104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5812d283c1ee0a50269953cc3978f60a6f5bf4892943a4351813631c786656f\",\"dweb:/ipfs/QmZED8YeS22yqkV86rYsR3CPSkLMD4S1m22DWChZD4jce5\"]},\"lib/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xd7fb250e2e4263d67b5a44b6d2bfa04a28599e2e3f5691e68a0cf5dc21743604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb0ba356d486a3efeab5c7db11efcbdd65a31e1bd832b522e12276ed8782c8c5\",\"dweb:/ipfs/QmeE3Y1WJu1SfjADtmZnm91neyQ2ukRvjAUeK36vVq71nK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xb00b01076641e395e084d4d608fa07c800b43d2e2e693da6c548144085ac58ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fa763a7012ab18e0949a4dc631033e2c95d6c877f8be570ef474d6a3f81ae6a\",\"dweb:/ipfs/QmauEsZiHVs7yjJrUjMb1oxCwJiBtjuuSDBoExaP63xMtD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2184,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeERC20.sol\":597:3701  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeERC20.sol\":597:3701  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f63def9b74c7776361776ac7770f1c288af52317bbbbb733d598e757e7c07d8764736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f63def9b74c7776361776ac7770f1c288af52317bbbbb733d598e757e7c07d8764736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 RETURNDATASIZE 0xEF SWAP12 PUSH21 0xC7776361776AC7770F1C288AF52317BBBBB733D598 0xE7 JUMPI 0xE7 0xC0 PUSH30 0x8764736F6C63430007040033000000000000000000000000000000000000 ",
							"sourceMap": "597:3104:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f63def9b74c7776361776ac7770f1c288af52317bbbbb733d598e757e7c07d8764736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 RETURNDATASIZE 0xEF SWAP12 PUSH21 0xC7776361776AC7770F1C288AF52317BBBBB733D598 0xE7 JUMPI 0xE7 0xC0 PUSH30 0x8764736F6C63430007040033000000000000000000000000000000000000 ",
							"sourceMap": "597:3104:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f63def9b74c7776361776ac7770f1c288af52317bbbbb733d598e757e7c07d8764736f6c63430007040033",
									".code": [
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]},\"contracts/SafeERC20.sol\":{\"keccak256\":\"0x018e2f7fedfb39f2695564356081fb76a5432c71f17ffa3a8bcd4b1af97f4daa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9630329ce796ce63e271c8b15492abf4553832ed1a1686001d98cc55889396cb\",\"dweb:/ipfs/QmQ1V92HceZ8nWVtj9nMw5eKDA7mFima3xb5WKriPvRwK9\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":630:7455  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":630:7455  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122045d65c3e38c393f34dd775b0471b94f64c55752f9b5a0d0f5827d56dbb16747764736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045d65c3e38c393f34dd775b0471b94f64c55752f9b5a0d0f5827d56dbb16747764736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xD6 0x5C RETURNDATACOPY CODESIZE 0xC3 SWAP4 RETURN 0x4D 0xD7 PUSH22 0xB0471B94F64C55752F9B5A0D0F5827D56DBB16747764 PUSH20 0x6F6C634300070400330000000000000000000000 ",
							"sourceMap": "630:6825:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045d65c3e38c393f34dd775b0471b94f64c55752f9b5a0d0f5827d56dbb16747764736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xD6 0x5C RETURNDATACOPY CODESIZE 0xC3 SWAP4 RETURN 0x4D 0xD7 PUSH22 0xB0471B94F64C55752F9B5A0D0F5827D56DBB16747764 PUSH20 0x6F6C634300070400330000000000000000000000 ",
							"sourceMap": "630:6825:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"safeSub(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045d65c3e38c393f34dd775b0471b94f64c55752f9b5a0d0f5827d56dbb16747764736f6c63430007040033",
									".code": [
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xd7fb250e2e4263d67b5a44b6d2bfa04a28599e2e3f5691e68a0cf5dc21743604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb0ba356d486a3efeab5c7db11efcbdd65a31e1bd832b522e12276ed8782c8c5\",\"dweb:/ipfs/QmeE3Y1WJu1SfjADtmZnm91neyQ2ukRvjAUeK36vVq71nK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1002,
					"file": "contracts/Ownable.sol",
					"start": 843
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "792:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "989:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1067:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1124:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1117:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:6:0"
									},
									"scope": 295,
									"src": "726:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2127:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2170:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2299:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2317:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2317:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2075:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2102:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:0"
									},
									"scope": 295,
									"src": "2056:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3277:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3292:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3285:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3210:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3226:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3263:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:0"
									},
									"scope": 295,
									"src": "3188:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3698:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3715:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3708:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3603:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3619:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3638:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:14:0"
									},
									"scope": 295,
									"src": "3581:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4249:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4288:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4266:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4259:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4183:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4202:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4235:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:0"
									},
									"scope": 295,
									"src": "4136:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4749:382:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4767:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4792:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4869:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4858:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4995:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5050:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "5022:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5022:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5042:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5111:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5072:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5065:59:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4639:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4655:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4689:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4735:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:14:0"
									},
									"scope": 295,
									"src": "4608:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5408:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5425:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5418:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5352:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5394:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:14:0"
									},
									"scope": 295,
									"src": "5308:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5817:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5846:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5835:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5965:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5979:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6006:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6006:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6073:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6085:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6046:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "6039:59:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5733:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5752:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:63:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5803:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:14:0"
									},
									"scope": 295,
									"src": "5689:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6381:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6419:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6427:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6398:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6391:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6330:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6367:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:14:0"
									},
									"scope": 295,
									"src": "6284:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6793:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6822:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6811:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6943:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6957:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6984:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7053:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7065:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "7026:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "7019:59:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6698:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6714:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6733:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:63:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6779:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:0"
									},
									"scope": 295,
									"src": "6668:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7220:596:0",
										"statements": [
											{
												"condition": {
													"id": 275,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "7234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7291:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 279,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7375:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7375:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "7747:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 286,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "7772:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 285,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:0"
																	}
																]
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "7371:429:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "7398:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 283,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "7230:580:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7243:42:0",
													"statements": [
														{
															"expression": {
																"id": 276,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "7264:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 274,
															"id": 277,
															"nodeType": "Return",
															"src": "7257:17:0"
														}
													]
												}
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7118:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7132:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7157:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:67:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7206:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:14:0"
									},
									"scope": 295,
									"src": "7091:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 296,
							"src": "134:7684:0"
						}
					],
					"src": "33:7785:0"
				},
				"id": 0
			},
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "668:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "678:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "651:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:1"
									},
									"scope": 318,
									"src": "598:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "773:165:1",
										"statements": [
											{
												"expression": {
													"id": 311,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$318",
														"typeString": "contract Context"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "783:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 315,
												"nodeType": "Return",
												"src": "916:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "759:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:1"
									},
									"scope": 318,
									"src": "708:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "566:374:1"
						}
					],
					"src": "33:907:1"
				},
				"id": 1
			},
			"contracts/DiamodSafe.sol": {
				"ast": {
					"absolutePath": "contracts/DiamodSafe.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"Context": [
							318
						],
						"DiamondSafe": [
							1982
						],
						"IERC165": [
							2888
						],
						"IERC20": [
							2060
						],
						"IERC721": [
							2176
						],
						"Ownable": [
							2286
						],
						"SafeERC20": [
							2499
						],
						"SafeMath": [
							2876
						]
					},
					"id": 1983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 321,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 296,
							"src": "56:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 322,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2877,
							"src": "80:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 323,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2500,
							"src": "105:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 324,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2061,
							"src": "132:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 325,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2287,
							"src": "156:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 326,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2177,
							"src": "180:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 327,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2286,
										"src": "229:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$2286",
											"typeString": "contract Ownable"
										}
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "229:7:2"
								}
							],
							"contractDependencies": [
								318,
								2286
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1982,
							"linearizedBaseContracts": [
								1982,
								2286,
								318
							],
							"name": "DiamondSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 331,
									"libraryName": {
										"id": 329,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2499,
										"src": "249:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$2499",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "243:27:2",
									"typeName": {
										"id": 330,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2060,
										"src": "263:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2060",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 334,
									"libraryName": {
										"id": 332,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2876,
										"src": "281:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2876",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "275:24:2",
									"typeName": {
										"id": 333,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "294:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 336,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "345:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2060",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 335,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2060,
										"src": "345:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2060",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08560ace",
									"id": 338,
									"mutability": "mutable",
									"name": "requiredBalance",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "538:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "538:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 340,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "650:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 339,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7c3771d",
									"id": 342,
									"mutability": "mutable",
									"name": "bnbReceiver",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "683:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 341,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "683:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b03cf5a7",
									"id": 345,
									"mutability": "mutable",
									"name": "jpeg",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "723:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
										"typeString": "contract IERC721[]"
									},
									"typeName": {
										"baseType": {
											"id": 343,
											"name": "IERC721",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2176,
											"src": "723:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$2176",
												"typeString": "contract IERC721"
											}
										},
										"id": 344,
										"nodeType": "ArrayTypeName",
										"src": "723:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage_ptr",
											"typeString": "contract IERC721[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f2020275",
									"id": 347,
									"mutability": "mutable",
									"name": "users",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "805:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 346,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "805:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "537a39bb",
									"id": 349,
									"mutability": "mutable",
									"name": "totalTxs",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "828:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "828:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9db102a",
									"id": 351,
									"mutability": "mutable",
									"name": "lastPayout",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "926:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 350,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "926:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "41c61383",
									"id": 353,
									"mutability": "mutable",
									"name": "totalClaims",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1053:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 352,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1053:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d882097",
									"id": 355,
									"mutability": "mutable",
									"name": "totalDeposits",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1082:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1082:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aecb6d28",
									"id": 357,
									"mutability": "mutable",
									"name": "dripPoolBalance",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1164:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1164:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3261592",
									"id": 359,
									"mutability": "mutable",
									"name": "dripRate",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1197:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 358,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1197:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 362,
									"mutability": "constant",
									"name": "divsFee",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1266:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 360,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1266:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 361,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1300:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 367,
									"mutability": "constant",
									"name": "magnitude",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1308:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1308:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551616_by_1",
											"typeString": "int_const 18446744073709551616"
										},
										"id": 366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 364,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1346:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3634",
											"id": 365,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1351:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_64_by_1",
												"typeString": "int_const 64"
											},
											"value": "64"
										},
										"src": "1346:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551616_by_1",
											"typeString": "int_const 18446744073709551616"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a01496de",
									"id": 369,
									"mutability": "mutable",
									"name": "forPool",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1421:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 368,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1421:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f38b9cd",
									"id": 371,
									"mutability": "mutable",
									"name": "forDivs",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1446:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 370,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1446:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "89375abf",
									"id": 374,
									"mutability": "constant",
									"name": "rebaseFrequency",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1507:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1507:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1549:7:2",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21600_by_1",
											"typeString": "int_const 21600"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "81fce645",
									"id": 377,
									"mutability": "constant",
									"name": "payoutFrequency",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1562:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1562:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1604:9:2",
										"subdenomination": "seconds",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1924063e",
									"id": 379,
									"mutability": "mutable",
									"name": "lastRebaseTime",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1652:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 381,
									"mutability": "mutable",
									"name": "currentTotalStaked",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1745:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1745:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 383,
									"mutability": "mutable",
									"name": "profitPerShare_",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "1785:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1785:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2026:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 386,
																	"name": "myTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "2044:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2044:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2057:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2044:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2036:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "2036:23:2"
											},
											{
												"id": 392,
												"nodeType": "PlaceholderStatement",
												"src": "2069:1:2"
											}
										]
									},
									"id": 394,
									"name": "onlyHolders",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2023:2:2"
									},
									"src": "2003:74:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "2159:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 397,
																	"name": "myEarnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2177:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2177:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2192:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2177:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2169:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2169:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2169:25:2"
											},
											{
												"id": 403,
												"nodeType": "PlaceholderStatement",
												"src": "2204:1:2"
											}
										]
									},
									"id": 405,
									"name": "onlyEarners",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2156:2:2"
									},
									"src": "2136:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "DiamondSafe.Account",
									"id": 434,
									"members": [
										{
											"constant": false,
											"id": 407,
											"mutability": "mutable",
											"name": "deposited",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2373:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 406,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2373:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 409,
											"mutability": "mutable",
											"name": "withdrawn",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2397:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 408,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2397:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 411,
											"mutability": "mutable",
											"name": "compounded",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2421:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 410,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2421:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 413,
											"mutability": "mutable",
											"name": "rewarded",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2446:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 412,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2446:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "contributed",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2469:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 414,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2469:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 417,
											"mutability": "mutable",
											"name": "transferredShares",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2495:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 416,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2495:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 419,
											"mutability": "mutable",
											"name": "receivedShares",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2527:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 418,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2527:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 421,
											"mutability": "mutable",
											"name": "xInvested",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2556:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 420,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2556:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 423,
											"mutability": "mutable",
											"name": "xCompounded",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2580:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 422,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2580:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 425,
											"mutability": "mutable",
											"name": "xRewarded",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2606:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 424,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2606:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 427,
											"mutability": "mutable",
											"name": "xContributed",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2630:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 426,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2630:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 429,
											"mutability": "mutable",
											"name": "xWithdrawn",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2657:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 428,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2657:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 431,
											"mutability": "mutable",
											"name": "xTransferredShares",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2682:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 430,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2682:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 433,
											"mutability": "mutable",
											"name": "xReceivedShares",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "2715:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 432,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2715:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Account",
									"nodeType": "StructDefinition",
									"scope": 1982,
									"src": "2348:394:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "payoutsOf_",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "2874:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 437,
										"keyType": {
											"id": 435,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2882:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2874:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 436,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2893:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "balanceOf_",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "2917:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 441,
										"keyType": {
											"id": 439,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2925:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2917:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 440,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2936:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "accountOf_",
									"nodeType": "VariableDeclaration",
									"scope": 1982,
									"src": "2961:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
										"typeString": "mapping(address => struct DiamondSafe.Account)"
									},
									"typeName": {
										"id": 445,
										"keyType": {
											"id": 443,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2969:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2961:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
											"typeString": "mapping(address => struct DiamondSafe.Account)"
										},
										"valueType": {
											"id": 444,
											"name": "Account",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 434,
											"src": "2980:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Account_$434_storage_ptr",
												"typeString": "struct DiamondSafe.Account"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 456,
									"name": "onDeposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3157:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": false,
												"mutability": "mutable",
												"name": "_deposited",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3188:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensMinted",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3216:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3246:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3246:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:119:2"
									},
									"src": "3132:135:2"
								},
								{
									"anonymous": false,
									"id": 466,
									"name": "onWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3298:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidated",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3329:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensEarned",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3358:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3388:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3388:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:120:2"
									},
									"src": "3272:137:2"
								},
								{
									"anonymous": false,
									"id": 476,
									"name": "onCompound",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3440:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "_compounded",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3471:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensMinted",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3500:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3530:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3530:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:120:2"
									},
									"src": "3414:137:2"
								},
								{
									"anonymous": false,
									"id": 484,
									"name": "onWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3573:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": false,
												"mutability": "mutable",
												"name": "_withdrawn",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3596:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3616:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3616:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3572:59:2"
									},
									"src": "3556:76:2"
								},
								{
									"anonymous": false,
									"id": 494,
									"name": "onTransfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3663:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3693:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3721:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3745:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3653:112:2"
									},
									"src": "3637:129:2"
								},
								{
									"anonymous": false,
									"id": 506,
									"name": "onUpdate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3795:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": false,
												"mutability": "mutable",
												"name": "invested",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3826:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3852:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "soldTokens",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3876:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3904:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3904:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3785:139:2"
									},
									"src": "3771:154:2"
								},
								{
									"anonymous": false,
									"id": 512,
									"name": "onRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"indexed": false,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3946:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3963:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:36:2"
									},
									"src": "3931:51:2"
								},
								{
									"anonymous": false,
									"id": 520,
									"name": "onDonate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "4003:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"indexed": false,
												"mutability": "mutable",
												"name": "_contributed",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "4025:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "4047:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4047:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4002:60:2"
									},
									"src": "3988:75:2"
								},
								{
									"anonymous": false,
									"id": 528,
									"name": "onDonateBNB",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4086:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4108:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4124:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4124:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:54:2"
									},
									"src": "4068:72:2"
								},
								{
									"anonymous": false,
									"id": 536,
									"name": "onSetFeeSplit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "4166:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4166:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": false,
												"mutability": "mutable",
												"name": "_divs",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "4178:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4178:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "4190:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:43:2"
									},
									"src": "4146:63:2"
								},
								{
									"anonymous": false,
									"id": 548,
									"name": "onSetImmunityToken",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4248:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldOne",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4281:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 539,
														"name": "IERC721",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2176,
														"src": "4281:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2176",
															"typeString": "contract IERC721"
														}
													},
													"id": 540,
													"nodeType": "ArrayTypeName",
													"src": "4281:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOne",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4307:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 542,
														"name": "IERC721",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2176,
														"src": "4307:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2176",
															"typeString": "contract IERC721"
														}
													},
													"id": 543,
													"nodeType": "ArrayTypeName",
													"src": "4307:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4333:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4333:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:118:2"
									},
									"src": "4214:143:2"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "4551:500:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 558,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "4582:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4607:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4599:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 559,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4599:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4599:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4582:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4632:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 564,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "4613:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 19,
																	"src": "4613:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4613:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4582:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f41444452455353",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c9aa80f6df0d7d66f29f9faed5ce34d8bae3d216a4ab057cfd7af24bdab39cb",
																"typeString": "literal_string \"INVALID_ADDRESS\""
															},
															"value": "INVALID_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c9aa80f6df0d7d66f29f9faed5ce34d8bae3d216a4ab057cfd7af24bdab39cb",
																"typeString": "literal_string \"INVALID_ADDRESS\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4561:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:126:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "4561:126:2"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "4698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "4713:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4698:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "4698:28:2"
											},
											{
												"expression": {
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 576,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4736:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2060",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 578,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4758:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 577,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "4751:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2060_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4751:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2060",
															"typeString": "contract IERC20"
														}
													},
													"src": "4736:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "4736:36:2"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "bnbReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "4783:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 583,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "4797:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4797:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4783:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4783:24:2"
											},
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 587,
														"name": "dripRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4887:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 588,
														"name": "_dripRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "4898:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4887:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "4887:20:2"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "lastPayout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "4917:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"expression": {
																	"id": 592,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "4931:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4931:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 594,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4930:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4917:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "4917:30:2"
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 597,
														"name": "forPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "4982:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4992:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "4982:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "4982:11:2"
											},
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 601,
														"name": "forDivs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "5003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5013:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5003:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "5003:11:2"
											},
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 605,
														"name": "requiredBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "5025:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5043:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5025:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "5025:19:2"
											}
										]
									},
									"id": 610,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 555,
											"modifierName": {
												"id": 554,
												"name": "Ownable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2286,
												"src": "4541:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Ownable_$2286_$",
													"typeString": "type(contract Ownable)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4541:9:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4501:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_dripRate",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4524:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 551,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4524:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4500:40:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4551:0:2"
									},
									"scope": 1982,
									"src": "4489:562:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "5210:124:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "bnbReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5238:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 617,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5251:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5251:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 613,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "5220:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "5220:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 622,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5288:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5288:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 624,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5300:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5300:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 626,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "5311:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5311:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "onDonateBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "5276:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5276:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "5271:56:2"
											}
										]
									},
									"id": 631,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5190:2:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5210:0:2"
									},
									"scope": 1982,
									"src": "5183:151:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "5535:466:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 641,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5649:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5649:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 645,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5669:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondSafe_$1982",
																				"typeString": "contract DiamondSafe"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondSafe_$1982",
																				"typeString": "contract DiamondSafe"
																			}
																		],
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5661:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 643,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5661:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5661:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 647,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "5676:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 639,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "5623:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2041,
																"src": "5623:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5623:61:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5615:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "5615:70:2"
											},
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "dripPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "5747:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 652,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5766:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5747:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "5747:26:2"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 655,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "5783:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 658,
															"indexExpression": {
																"expression": {
																	"id": 656,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5794:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5794:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5783:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xContributed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "5783:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5822:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5783:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "5783:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 664,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5925:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5925:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 666,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "5937:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 667,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "5946:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5946:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "onDonate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "5916:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "EmitStatement",
												"src": "5911:51:2"
											},
											{
												"expression": {
													"id": 671,
													"name": "dripPoolBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 357,
													"src": "5979:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 672,
												"nodeType": "Return",
												"src": "5972:22:2"
											}
										]
									},
									"functionSelector": "f14faf6f",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5496:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5496:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5495:14:2"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5526:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5525:9:2"
									},
									"scope": 1982,
									"src": "5480:521:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "6078:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 682,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6105:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6105:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 684,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "depositTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "6095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6095:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 686,
												"nodeType": "Return",
												"src": "6088:37:2"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "6039:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6039:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:14:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "6069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:9:2"
									},
									"scope": 1982,
									"src": "6022:110:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "6228:769:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 700,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6342:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6342:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 704,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "6362:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondSafe_$1982",
																				"typeString": "contract DiamondSafe"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondSafe_$1982",
																				"typeString": "contract DiamondSafe"
																			}
																		],
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6354:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 702,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6354:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6354:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 706,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "6369:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 698,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6316:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2041,
																"src": "6316:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6316:61:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6308:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6308:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "6308:70:2"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "totalDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "6440:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 711,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "6457:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6440:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "6440:24:2"
											},
											{
												"assignments": [
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "6527:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 714,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6527:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [
														{
															"id": 717,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6556:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "6563:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "_depositTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6527:44:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 722,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6646:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 723,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "6665:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 725,
																"indexExpression": {
																	"id": 724,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "6676:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6665:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "6665:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 727,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "6706:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 729,
															"indexExpression": {
																"id": 728,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6717:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6706:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 730,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "6737:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 732,
																"indexExpression": {
																	"id": 731,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "6748:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6737:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "6737:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 734,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6778:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6778:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "6624:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6624:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "EmitStatement",
												"src": "6619:184:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 738,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "6878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "6878:12:2"
											},
											{
												"expression": {
													"id": 741,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 715,
													"src": "6984:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 696,
												"id": 742,
												"nodeType": "Return",
												"src": "6977:13:2"
											}
										]
									},
									"functionSelector": "ffaad6a5",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6174:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6189:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6189:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6173:29:2"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6218:9:2"
									},
									"scope": 1982,
									"src": "6155:842:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "7058:34:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 749,
														"name": "_compoundTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "7068:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "7068:17:2"
											}
										]
									},
									"functionSelector": "f69e2046",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 747,
											"modifierName": {
												"id": 746,
												"name": "onlyEarners",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 405,
												"src": "7046:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7046:11:2"
										}
									],
									"name": "compound",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7036:2:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:2"
									},
									"scope": 1982,
									"src": "7019:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "7151:852:2",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "_user",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "7161:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 758,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7161:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"expression": {
														"id": 760,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "7177:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7177:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7161:26:2"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "7197:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7197:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 765,
														"name": "myEarnings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "7218:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7218:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7197:33:2"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 768,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7324:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 770,
														"indexExpression": {
															"id": 769,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "7335:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7324:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "_dividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "7354:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 775,
																	"name": "magnitude",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "7367:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7354:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7346:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 771,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7346:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 773,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7345:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7345:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7324:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "7324:53:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "7463:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "7470:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 780,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7441:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2009,
														"src": "7441:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7441:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "7441:40:2"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 787,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "7556:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 789,
															"indexExpression": {
																"id": 788,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "7567:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7556:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "withdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "7556:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 793,
																		"name": "accountOf_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "7612:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																			"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																		}
																	},
																	"id": 795,
																	"indexExpression": {
																		"id": 794,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "7623:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7612:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Account_$434_storage",
																		"typeString": "struct DiamondSafe.Account storage ref"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "withdrawn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 409,
																"src": "7612:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 797,
																"name": "_dividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "7653:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 791,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "7586:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2681,
															"src": "7586:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7586:87:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7556:117:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "7556:117:2"
											},
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 801,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "7683:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 803,
															"indexExpression": {
																"id": 802,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "7694:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7683:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xWithdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 429,
														"src": "7683:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7715:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7683:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "7683:33:2"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 808,
														"name": "totalTxs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "7773:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7785:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7773:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7773:13:2"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "totalClaims",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "7796:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 813,
														"name": "_dividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "7811:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7796:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "7796:25:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 817,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "7879:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "7886:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 819,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "7898:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7898:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "onWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															484
														],
														"referencedDeclaration": 484,
														"src": "7868:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7868:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "EmitStatement",
												"src": "7863:51:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 823,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "7984:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7984:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "7984:12:2"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 756,
											"modifierName": {
												"id": 755,
												"name": "onlyEarners",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 405,
												"src": "7139:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7139:11:2"
										}
									],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7129:2:2"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7151:0:2"
									},
									"scope": 1982,
									"src": "7113:890:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "8079:1471:2",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "_user",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "8089:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 834,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8089:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"expression": {
														"id": 836,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "8105:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8105:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8089:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "8133:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 841,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "8144:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 843,
																"indexExpression": {
																	"id": 842,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "8155:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8144:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8133:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8125:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8125:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "8125:37:2"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "_undividedDividends",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "8173:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8173:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 851,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "8216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 852,
																"name": "divsFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "8225:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 849,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "8203:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2737,
															"src": "8203:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8203:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8236:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "8203:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8173:66:2"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "isImmune",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "8266:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 857,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8266:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 860,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8296:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8296:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 859,
														"name": "checkImmunity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "8282:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8282:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8266:41:2"
											},
											{
												"condition": {
													"id": 864,
													"name": "isImmune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 858,
													"src": "8347:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "8343:129:2",
												"trueBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "8357:115:2",
													"statements": [
														{
															"expression": {
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 865,
																	"name": "_undividedDividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "8433:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8455:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8433:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 868,
															"nodeType": "ExpressionStatement",
															"src": "8433:23:2"
														}
													]
												}
											},
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "_taxedTokens",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "8536:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 871,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8536:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 878,
												"initialValue": {
													"arguments": [
														{
															"id": 875,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8573:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 876,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8582:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 873,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "8560:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2703,
														"src": "8560:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8560:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8536:66:2"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 879,
														"name": "currentTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "8612:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 882,
																"name": "currentTotalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "8646:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 883,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "8666:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 880,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "8633:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2703,
															"src": "8633:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8633:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8612:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "8612:62:2"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 887,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "8684:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 889,
														"indexExpression": {
															"id": 888,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8695:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8684:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 892,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "8717:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"id": 893,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "8728:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8717:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 895,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "8736:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 890,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "8704:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2703,
															"src": "8704:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8704:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8684:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "8684:60:2"
											},
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "_updatedPayouts",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "8826:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 899,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8826:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "8873:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 905,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "8891:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8873:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 907,
																			"name": "_taxedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "8902:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 908,
																			"name": "magnitude",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "8917:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8902:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 910,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8901:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8873:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8852:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 901,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8852:6:2",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 903,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8851:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8826:111:2"
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 914,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "8947:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 916,
														"indexExpression": {
															"id": 915,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8958:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8947:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 917,
														"name": "_updatedPayouts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "8968:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8947:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8947:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "9077:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "allocateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "9064:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9064:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "9064:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 925,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "9180:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "9187:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 927,
															"name": "_taxedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "9196:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 928,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "9210:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9210:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "onWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															484
														],
														"referencedDeclaration": 466,
														"src": "9169:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9169:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "EmitStatement",
												"src": "9164:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 933,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "9301:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 934,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "9320:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 936,
																"indexExpression": {
																	"id": 935,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "9331:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9320:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "9320:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 938,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "9361:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 940,
															"indexExpression": {
																"id": 939,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "9372:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9361:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 941,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "9392:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 943,
																"indexExpression": {
																	"id": 942,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "9403:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9392:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "9392:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 945,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "9433:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9433:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "9279:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9279:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "EmitStatement",
												"src": "9274:184:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 949,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "9527:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9527:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "9527:12:2"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 832,
											"modifierName": {
												"id": 831,
												"name": "onlyHolders",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 394,
												"src": "8067:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8067:11:2"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8043:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:17:2"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8079:0:2"
									},
									"scope": 1982,
									"src": "8025:1525:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "9678:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "9711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "9716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 964,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "9695:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9695:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 963,
												"id": 968,
												"nodeType": "Return",
												"src": "9688:36:2"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 960,
											"modifierName": {
												"id": 959,
												"name": "onlyHolders",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 394,
												"src": "9651:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9651:11:2"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "9599:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "9620:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:52:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "9672:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9672:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9671:6:2"
									},
									"scope": 1982,
									"src": "9572:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "9994:293:2",
										"statements": [
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "10004:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10004:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"hexValue": "30",
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10016:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10004:13:2"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "jpegTest1",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "10027:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2176",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 981,
															"name": "IERC721",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2176,
															"src": "10027:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$2176",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"nodeType": "VariableDeclarationStatement",
												"src": "10027:17:2"
											},
											{
												"body": {
													"id": 1010,
													"nodeType": "Block",
													"src": "10090:99:2",
													"statements": [
														{
															"expression": {
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "jpegTest1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "10104:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$2176",
																		"typeString": "contract IERC721"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 997,
																				"name": "jpeg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "10124:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
																					"typeString": "contract IERC721[] storage ref"
																				}
																			},
																			"id": 999,
																			"indexExpression": {
																				"id": 998,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "10129:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$2176",
																				"typeString": "contract IERC721"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC721_$2176",
																				"typeString": "contract IERC721"
																			}
																		],
																		"id": 996,
																		"name": "IERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "10116:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721_$2176_$",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10116:16:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$2176",
																		"typeString": "contract IERC721"
																	}
																},
																"src": "10104:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$2176",
																	"typeString": "contract IERC721"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "10104:28:2"
														},
														{
															"expression": {
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1003,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "10147:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1006,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "10172:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1004,
																			"name": "jpegTest1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "10152:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$2176",
																				"typeString": "contract IERC721"
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2101,
																		"src": "10152:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10152:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10147:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "10147:31:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "10069:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 989,
															"name": "jpeg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "10073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10073:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10069:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"initializationExpression": {
													"assignments": [
														985
													],
													"declarations": [
														{
															"constant": false,
															"id": 985,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1011,
															"src": "10058:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 984,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10058:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 987,
													"initialValue": {
														"hexValue": "30",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10066:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10058:9:2"
												},
												"loopExpression": {
													"expression": {
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10086:3:2",
														"subExpression": {
															"id": 992,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10086:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 994,
													"nodeType": "ExpressionStatement",
													"src": "10086:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10054:135:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "10201:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1013,
														"name": "requiredBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "10206:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10201:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "10197:62:2",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "10223:36:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10244:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 976,
															"id": 1016,
															"nodeType": "Return",
															"src": "10237:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10275:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 976,
												"id": 1020,
												"nodeType": "Return",
												"src": "10268:12:2"
											}
										]
									},
									"functionSelector": "36599ead",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkImmunity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9943:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9942:15:2"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "isImmune",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "9979:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9979:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9978:15:2"
									},
									"scope": 1982,
									"src": "9920:367:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "10343:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1028,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10370:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10370:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1027,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "10360:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10360:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1031,
												"nodeType": "Return",
												"src": "10353:28:2"
											}
										]
									},
									"functionSelector": "949e8acd",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10310:2:2"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10334:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10333:9:2"
									},
									"scope": 1982,
									"src": "10293:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "10446:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1039,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10475:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10475:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1038,
														"name": "dividendsOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "10463:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10463:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1042,
												"nodeType": "Return",
												"src": "10456:30:2"
											}
										]
									},
									"functionSelector": "ffe6bbd8",
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myEarnings",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10413:2:2"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "10437:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10436:9:2"
									},
									"scope": 1982,
									"src": "10394:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "10563:41:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1051,
														"name": "balanceOf_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "10580:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1053,
													"indexExpression": {
														"id": 1052,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10591:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10580:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1054,
												"nodeType": "Return",
												"src": "10573:24:2"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "10518:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10517:15:2"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "10554:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10553:9:2"
									},
									"scope": 1982,
									"src": "10499:105:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "10677:37:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1063,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "10694:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "10694:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1065,
												"nodeType": "Return",
												"src": "10687:20:2"
											}
										]
									},
									"functionSelector": "eedc966a",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "10632:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10632:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10631:15:2"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "10668:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10667:9:2"
									},
									"scope": 1982,
									"src": "10610:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "10774:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1076,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10822:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DiamondSafe_$1982",
																		"typeString": "contract DiamondSafe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DiamondSafe_$1982",
																		"typeString": "contract DiamondSafe"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10814:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1074,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10814:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10814:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 1072,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10791:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1999,
														"src": "10791:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1079,
												"nodeType": "Return",
												"src": "10784:44:2"
											}
										]
									},
									"functionSelector": "ad7a672f",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10741:2:2"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "10765:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10764:9:2"
									},
									"scope": 1982,
									"src": "10720:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "10894:42:2",
										"statements": [
											{
												"expression": {
													"id": 1086,
													"name": "currentTotalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 381,
													"src": "10911:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1087,
												"nodeType": "Return",
												"src": "10904:25:2"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10861:2:2"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "10885:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10885:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10884:9:2"
									},
									"scope": 1982,
									"src": "10841:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "11008:174:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1102,
																				"name": "profitPerShare_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 383,
																				"src": "11073:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1103,
																					"name": "balanceOf_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 442,
																					"src": "11091:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1105,
																				"indexExpression": {
																					"id": 1104,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1091,
																					"src": "11102:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11091:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11073:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"components": [
																			{
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11065:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 1099,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11065:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11064:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		}
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11064:45:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1108,
																		"name": "payoutsOf_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "11132:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																			"typeString": "mapping(address => int256)"
																		}
																	},
																	"id": 1110,
																	"indexExpression": {
																		"id": 1109,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "11143:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11132:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11064:85:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"components": [
																{
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11038:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11038:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1098,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11037:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11037:126:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1113,
														"name": "magnitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "11166:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11037:138:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1115,
												"nodeType": "Return",
												"src": "11018:157:2"
											}
										]
									},
									"functionSelector": "0065318b",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dividendsOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "10963:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10962:15:2"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "10999:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10998:9:2"
									},
									"scope": 1982,
									"src": "10942:240:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "11239:214:2",
										"statements": [
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "11249:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11249:22:2"
											},
											{
												"assignments": [
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "11281:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11281:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1137,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1132,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "11328:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1133,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "11337:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1130,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "11315:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "11315:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11315:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11347:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1128,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "11302:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2759,
														"src": "11302:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11302:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11281:70:2"
											},
											{
												"assignments": [
													1139
												],
												"declarations": [
													{
														"constant": false,
														"id": 1139,
														"mutability": "mutable",
														"name": "_taxedTokens",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "11361:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11361:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "11397:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1143,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "11406:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1140,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "11384:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2703,
														"src": "11384:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11384:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11361:56:2"
											},
											{
												"expression": {
													"id": 1146,
													"name": "_taxedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "11434:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1147,
												"nodeType": "Return",
												"src": "11427:19:2"
											}
										]
									},
									"functionSelector": "4b750334",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11206:2:2"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "11230:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11229:9:2"
									},
									"scope": 1982,
									"src": "11188:265:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "11509:214:2",
										"statements": [
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "11519:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11519:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11519:22:2"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "11551:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11551:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1164,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "11598:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1165,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "11607:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1162,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "11585:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "11585:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11585:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11617:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1160,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "11572:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2759,
														"src": "11572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11572:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11551:70:2"
											},
											{
												"assignments": [
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "_taxedTokens",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "11631:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11631:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1177,
												"initialValue": {
													"arguments": [
														{
															"id": 1174,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "11667:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1175,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "11676:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1172,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "11654:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2681,
														"src": "11654:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11654:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11631:56:2"
											},
											{
												"expression": {
													"id": 1178,
													"name": "_taxedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1171,
													"src": "11704:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1179,
												"nodeType": "Return",
												"src": "11697:19:2"
											}
										]
									},
									"functionSelector": "8620410b",
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11476:2:2"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "11500:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:9:2"
									},
									"scope": 1982,
									"src": "11459:264:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "11823:203:2",
										"statements": [
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "_divies",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "11833:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11833:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1194,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "11877:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1195,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "11886:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1192,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "11864:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "11864:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11864:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11896:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1190,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "11851:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2759,
														"src": "11851:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11851:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11833:67:2"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "_remains",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "11910:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11910:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"id": 1204,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "11942:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1205,
															"name": "_divies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "11951:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1202,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "11929:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2703,
														"src": "11929:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11929:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11910:49:2"
											},
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "_result",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "11969:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"id": 1210,
													"name": "_remains",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1201,
													"src": "11987:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11969:26:2"
											},
											{
												"expression": {
													"id": 1212,
													"name": "_result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1209,
													"src": "12012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1213,
												"nodeType": "Return",
												"src": "12005:14:2"
											}
										]
									},
									"functionSelector": "e02e1e9c",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateSharesReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "11771:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:31:2"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "11814:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:9:2"
									},
									"scope": 1982,
									"src": "11729:297:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "12126:251:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "12144:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1224,
																"name": "currentTotalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "12155:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12144:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12136:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12136:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "12136:38:2"
											},
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "12184:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12184:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"id": 1230,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "12202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12184:25:2"
											},
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "_divies",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "12219:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12219:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1238,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "12263:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1239,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "12272:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1236,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "12250:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "12250:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12250:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12282:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1234,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "12237:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2759,
														"src": "12237:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12237:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12219:67:2"
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "_remains",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "12296:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12296:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1251,
												"initialValue": {
													"arguments": [
														{
															"id": 1248,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "12328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1249,
															"name": "_divies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "12337:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1246,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "12315:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2703,
														"src": "12315:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12315:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12296:49:2"
											},
											{
												"expression": {
													"id": 1252,
													"name": "_remains",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1245,
													"src": "12362:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1253,
												"nodeType": "Return",
												"src": "12355:15:2"
											}
										]
									},
									"functionSelector": "10d0ffdd",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokensReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "12074:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12074:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12064:31:2"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "12117:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12116:9:2"
									},
									"scope": 1982,
									"src": "12032:345:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "12458:522:2",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "12468:16:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
															"typeString": "struct DiamondSafe.Account"
														},
														"typeName": {
															"id": 1264,
															"name": "Account",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 434,
															"src": "12468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage_ptr",
																"typeString": "struct DiamondSafe.Account"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"baseExpression": {
														"id": 1266,
														"name": "accountOf_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "12487:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
															"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
														}
													},
													"id": 1268,
													"indexExpression": {
														"id": 1267,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "12498:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12487:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Account_$434_storage",
														"typeString": "struct DiamondSafe.Account storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12468:36:2"
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "accountArray",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "12514:31:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
															"typeString": "uint256[14]"
														},
														"typeName": {
															"baseType": {
																"id": 1273,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12514:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1274,
															"length": {
																"hexValue": "3134",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12522:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14_by_1",
																	"typeString": "int_const 14"
																},
																"value": "14"
															},
															"nodeType": "ArrayTypeName",
															"src": "12514:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$14_storage_ptr",
																"typeString": "uint256[14]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"components": [
														{
															"expression": {
																"id": 1276,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12562:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "12562:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12587:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "12587:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1280,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12612:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewarded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 413,
															"src": "12612:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1282,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12636:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "compounded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 411,
															"src": "12636:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1284,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12662:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contributed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "12662:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1286,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferredShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "12689:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12722:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "receivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 419,
															"src": "12722:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1290,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12752:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xInvested",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 421,
															"src": "12752:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1292,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12777:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xRewarded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 425,
															"src": "12777:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xContributed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 427,
															"src": "12802:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1296,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xWithdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 429,
															"src": "12830:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1298,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xTransferredShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 431,
															"src": "12856:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1300,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12890:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xReceivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 433,
															"src": "12890:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1302,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "12921:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xCompounded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "12921:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1304,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12548:396:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
														"typeString": "uint256[14] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12514:430:2"
											},
											{
												"expression": {
													"id": 1306,
													"name": "accountArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1275,
													"src": "12961:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
														"typeString": "uint256[14] memory"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1307,
												"nodeType": "Return",
												"src": "12954:19:2"
											}
										]
									},
									"functionSelector": "8086b8ba",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accountOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "12402:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12402:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12401:15:2"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "12438:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
													"typeString": "uint256[14]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12438:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1261,
													"length": {
														"hexValue": "3134",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12446:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_14_by_1",
															"typeString": "int_const 14"
														},
														"value": "14"
													},
													"nodeType": "ArrayTypeName",
													"src": "12438:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$14_storage_ptr",
														"typeString": "uint256[14]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12437:20:2"
									},
									"scope": 1982,
									"src": "12383:597:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "13054:215:2",
										"statements": [
											{
												"assignments": [
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "share",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "13064:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13064:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13114:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1320,
																	"name": "dripRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "13100:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1318,
																	"name": "dripPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "13080:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "13080:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13080:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2759,
														"src": "13080:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13080:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13064:54:2"
											},
											{
												"expression": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1326,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "13148:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13169:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13148:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1329,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13147:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13261:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13147:115:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 1337,
																"name": "currentTotalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "13223:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1332,
																			"name": "balanceOf_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "13200:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1334,
																		"indexExpression": {
																			"id": 1333,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "13211:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13200:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1330,
																		"name": "share",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "13190:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2737,
																	"src": "13190:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13190:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2759,
															"src": "13190:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13190:52:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1341,
												"nodeType": "Return",
												"src": "13128:134:2"
											}
										]
									},
									"functionSelector": "fbaf1bbd",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dailyEstimate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "13009:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13009:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13008:15:2"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "13045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13044:9:2"
									},
									"scope": 1982,
									"src": "12986:283:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "13505:296:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1357,
																		"name": "_divs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "13533:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1355,
																		"name": "_pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "13523:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2681,
																	"src": "13523:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13523:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13543:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "13523:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54454e5f504f5254494f4e535f524551554952455f4449564953494f4e",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13547:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c70c5fa0b5c0d2773598ee22ede93a0b89d086249c68ce8bc880fe634a056ae",
																"typeString": "literal_string \"TEN_PORTIONS_REQUIRE_DIVISION\""
															},
															"value": "TEN_PORTIONS_REQUIRE_DIVISION"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c70c5fa0b5c0d2773598ee22ede93a0b89d086249c68ce8bc880fe634a056ae",
																"typeString": "literal_string \"TEN_PORTIONS_REQUIRE_DIVISION\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13515:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13515:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "13515:64:2"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1364,
														"name": "forPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "13623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1365,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "13633:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13623:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "13623:15:2"
											},
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1368,
														"name": "forDivs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "13648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1369,
														"name": "_divs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "13658:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13648:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "13648:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1373,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "13743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1374,
															"name": "_divs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "13750:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1375,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "13757:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13757:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1372,
														"name": "onSetFeeSplit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "13729:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13729:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "EmitStatement",
												"src": "13724:49:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13790:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1353,
												"id": 1380,
												"nodeType": "Return",
												"src": "13783:11:2"
											}
										]
									},
									"functionSelector": "7e6335c7",
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1350,
											"modifierName": {
												"id": 1349,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2235,
												"src": "13471:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13471:9:2"
										}
									],
									"name": "setFeeSplit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "13421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_divs",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "13444:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13444:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13411:52:2"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "13490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13490:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13489:15:2"
									},
									"scope": 1982,
									"src": "13391:410:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "13972:415:2",
										"statements": [
											{
												"body": {
													"id": 1413,
													"nodeType": "Block",
													"src": "14014:130:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30783830616335386364",
																				"id": 1408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14107:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2158778573_by_1",
																					"typeString": "int_const 2158778573"
																				},
																				"value": "0x80ac58cd"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2158778573_by_1",
																					"typeString": "int_const 2158778573"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 1404,
																					"name": "_contract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "14076:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
																						"typeString": "contract IERC721[] memory"
																					}
																				},
																				"id": 1406,
																				"indexExpression": {
																					"id": 1405,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1393,
																					"src": "14086:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14076:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC721_$2176",
																					"typeString": "contract IERC721"
																				}
																			},
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2887,
																			"src": "14076:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14076:42:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e4f545f455243373231",
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14120:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d74553be9cf5182c4eb87cee7703c25a8fb7e946d1fe89483a54f86d57680453",
																			"typeString": "literal_string \"NOT_ERC721\""
																		},
																		"value": "NOT_ERC721"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d74553be9cf5182c4eb87cee7703c25a8fb7e946d1fe89483a54f86d57680453",
																			"typeString": "literal_string \"NOT_ERC721\""
																		}
																	],
																	"id": 1403,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "14068:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14068:65:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "14068:65:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1396,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "13993:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1397,
															"name": "jpeg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "13997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13997:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13993:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"initializationExpression": {
													"assignments": [
														1393
													],
													"declarations": [
														{
															"constant": false,
															"id": 1393,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1414,
															"src": "13982:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1392,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "13982:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1395,
													"initialValue": {
														"hexValue": "30",
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13990:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13982:9:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14010:3:2",
														"subExpression": {
															"id": 1400,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "14010:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ExpressionStatement",
													"src": "14010:3:2"
												},
												"nodeType": "ForStatement",
												"src": "13978:166:2"
											},
											{
												"assignments": [
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "oldContract",
														"nodeType": "VariableDeclaration",
														"scope": 1436,
														"src": "14153:28:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
															"typeString": "contract IERC721[]"
														},
														"typeName": {
															"baseType": {
																"id": 1416,
																"name": "IERC721",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2176,
																"src": "14153:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$2176",
																	"typeString": "contract IERC721"
																}
															},
															"id": 1417,
															"nodeType": "ArrayTypeName",
															"src": "14153:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage_ptr",
																"typeString": "contract IERC721[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"initialValue": {
													"id": 1419,
													"name": "jpeg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "14184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
														"typeString": "contract IERC721[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14153:35:2"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1421,
														"name": "jpeg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "14198:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
															"typeString": "contract IERC721[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1422,
														"name": "_contract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "14205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
															"typeString": "contract IERC721[] memory"
														}
													},
													"src": "14198:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage",
														"typeString": "contract IERC721[] storage ref"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "14198:16:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14262:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14262:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1428,
															"name": "oldContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "14286:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															}
														},
														{
															"id": 1429,
															"name": "_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "14311:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															}
														},
														{
															"expression": {
																"id": 1430,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "14334:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "14334:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "onSetImmunityToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "14230:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr_$_t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,contract IERC721[] memory,contract IERC721[] memory,uint256)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14230:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "EmitStatement",
												"src": "14225:134:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1391,
												"id": 1435,
												"nodeType": "Return",
												"src": "14369:11:2"
											}
										]
									},
									"functionSelector": "f6db0da0",
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1388,
											"modifierName": {
												"id": 1387,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2235,
												"src": "13938:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13938:9:2"
										}
									],
									"name": "setImmunityToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "_contract",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "13898:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 1383,
														"name": "IERC721",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2176,
														"src": "13898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2176",
															"typeString": "contract IERC721"
														}
													},
													"id": 1384,
													"nodeType": "ArrayTypeName",
													"src": "13898:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2176_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13888:42:2"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "13957:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13957:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:15:2"
									},
									"scope": 1982,
									"src": "13863:524:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "14597:697:2",
										"statements": [
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "_onePiece",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "14607:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14607:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14635:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1444,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "14627:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2759,
														"src": "14627:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14627:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14607:31:2"
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "_forPool",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "14649:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1453,
																	"name": "forPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "14683:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1451,
																	"name": "_onePiece",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "14669:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "14669:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14669:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1455,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14668:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14649:43:2"
											},
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "_forDivs",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "14723:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14723:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1461,
																	"name": "forDivs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "14757:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1459,
																	"name": "_onePiece",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "14743:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2737,
																"src": "14743:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1463,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14742:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14723:43:2"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1465,
														"name": "dripPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "14797:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1468,
																"name": "_forPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "14835:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1466,
																"name": "dripPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "14815:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2681,
															"src": "14815:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14815:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14797:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "14797:47:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1472,
														"name": "currentTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "14923:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14944:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14923:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "15164:124:2",
													"statements": [
														{
															"expression": {
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1489,
																	"name": "dripPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "15250:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1490,
																	"name": "_forDivs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "15269:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15250:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "15250:27:2"
														}
													]
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "14919:369:2",
												"trueBody": {
													"id": 1488,
													"nodeType": "Block",
													"src": "14947:211:2",
													"statements": [
														{
															"expression": {
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1475,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "15009:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1478,
																			"name": "profitPerShare_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "15057:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1481,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1479,
																							"name": "_forDivs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1458,
																							"src": "15091:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1480,
																							"name": "magnitude",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 367,
																							"src": "15102:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15091:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1482,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "15090:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1483,
																				"name": "currentTotalStaked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "15115:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15090:43:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1476,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2876,
																			"src": "15027:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2681,
																		"src": "15027:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15027:120:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15009:138:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "15009:138:2"
														}
													]
												}
											}
										]
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocateFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "14579:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14579:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14578:10:2"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14597:0:2"
									},
									"scope": 1982,
									"src": "14557:737:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "15365:1212:2",
										"statements": [
											{
												"assignments": [
													1500
												],
												"declarations": [
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "_currentTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "15375:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1499,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15375:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"components": [
														{
															"expression": {
																"id": 1501,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "15401:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "15401:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1503,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15400:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15375:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1507,
																"name": "lastRebaseTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "15508:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1505,
																"name": "_currentTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "15482:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safeSub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2875,
															"src": "15482:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15482:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1509,
														"name": "rebaseFrequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "15526:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15482:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1522,
												"nodeType": "IfStatement",
												"src": "15478:278:2",
												"trueBody": {
													"id": 1521,
													"nodeType": "Block",
													"src": "15543:213:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1512,
																			"name": "totalBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "15606:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15606:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1514,
																		"name": "_currentTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "15622:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1511,
																	"name": "onRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "15597:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15597:43:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1516,
															"nodeType": "EmitStatement",
															"src": "15592:48:2"
														},
														{
															"expression": {
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1517,
																	"name": "lastRebaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "15711:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1518,
																	"name": "_currentTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "15728:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15711:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1520,
															"nodeType": "ExpressionStatement",
															"src": "15711:34:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1525,
																	"name": "_currentTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "15845:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1526,
																	"name": "lastPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "15864:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1523,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "15828:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safeSub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2875,
																"src": "15828:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15828:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1528,
															"name": "payoutFrequency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "15878:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15828:65:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1530,
															"name": "currentTotalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "15909:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15930:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15909:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15828:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1581,
												"nodeType": "IfStatement",
												"src": "15811:760:2",
												"trueBody": {
													"id": 1580,
													"nodeType": "Block",
													"src": "15942:629:2",
													"statements": [
														{
															"assignments": [
																1535
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1535,
																	"mutability": "mutable",
																	"name": "share",
																	"nodeType": "VariableDeclaration",
																	"scope": 1580,
																	"src": "16003:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1534,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16003:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1546,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16079:8:2",
																		"subdenomination": "hours",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "24"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16053:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1538,
																						"name": "dripRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 359,
																						"src": "16039:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"expression": {
																						"id": 1536,
																						"name": "dripPoolBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 357,
																						"src": "16019:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2737,
																					"src": "16019:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16019:29:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2759,
																			"src": "16019:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16019:38:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2759,
																	"src": "16019:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16019:82:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16003:98:2"
														},
														{
															"assignments": [
																1548
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1548,
																	"mutability": "mutable",
																	"name": "profit",
																	"nodeType": "VariableDeclaration",
																	"scope": 1580,
																	"src": "16115:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1547,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16115:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1555,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1549,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "16132:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1552,
																			"name": "lastPayout",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "16166:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1550,
																			"name": "_currentTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "16140:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeSub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2875,
																		"src": "16140:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16140:37:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16132:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16115:62:2"
														},
														{
															"expression": {
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1556,
																	"name": "dripPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "16268:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1559,
																			"name": "profit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "16310:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1557,
																			"name": "dripPoolBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "16286:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeSub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2875,
																		"src": "16286:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16286:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16268:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1562,
															"nodeType": "ExpressionStatement",
															"src": "16268:49:2"
														},
														{
															"expression": {
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1563,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "16331:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1566,
																			"name": "profitPerShare_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "16379:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1567,
																							"name": "profit",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1548,
																							"src": "16413:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1568,
																							"name": "magnitude",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 367,
																							"src": "16422:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16413:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1570,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "16412:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1571,
																				"name": "currentTotalStaked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "16435:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16412:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1564,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2876,
																			"src": "16349:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2681,
																		"src": "16349:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16349:118:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16331:136:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "16331:136:2"
														},
														{
															"expression": {
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1576,
																	"name": "lastPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "16530:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1577,
																	"name": "_currentTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "16543:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16530:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1579,
															"nodeType": "ExpressionStatement",
															"src": "16530:30:2"
														}
													]
												}
											}
										]
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15354:2:2"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15365:0:2"
									},
									"scope": 1982,
									"src": "15335:1242:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "16733:1466:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1592,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "16835:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1594,
																"indexExpression": {
																	"id": 1593,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "16846:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16835:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "16835:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16871:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16835:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1598,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "16888:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1600,
																"indexExpression": {
																	"id": 1599,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "16899:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16888:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "receivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 419,
															"src": "16888:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16929:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16888:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16835:95:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "16818:158:2",
												"trueBody": {
													"id": 1609,
													"nodeType": "Block",
													"src": "16941:35:2",
													"statements": [
														{
															"expression": {
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1605,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "16955:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16964:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1608,
															"nodeType": "ExpressionStatement",
															"src": "16955:10:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1611,
														"name": "totalTxs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "17014:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17026:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "17014:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "17014:13:2"
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "_undividedDividends",
														"nodeType": "VariableDeclaration",
														"scope": 1717,
														"src": "17043:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1619,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "17086:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1620,
																"name": "divsFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "17095:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 1617,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "17073:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2737,
															"src": "17073:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17073:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17106:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "17073:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17043:66:2"
											},
											{
												"assignments": [
													1626
												],
												"declarations": [
													{
														"constant": false,
														"id": 1626,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1717,
														"src": "17121:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"arguments": [
														{
															"id": 1629,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "17154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1630,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "17163:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1627,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "17141:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2703,
														"src": "17141:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17141:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17121:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1634,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "17248:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "17260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1636,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "17269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1637,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "17278:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "17278:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "onDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "17238:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17238:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "EmitStatement",
												"src": "17233:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1642,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "17393:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17403:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17393:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1647,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17437:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1648,
																			"name": "currentTotalStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "17446:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1645,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2876,
																			"src": "17424:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2681,
																		"src": "17424:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17424:41:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1650,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "17468:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17424:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17393:93:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17372:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17372:124:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "17372:124:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1655,
														"name": "currentTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "17510:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17531:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17510:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1667,
													"nodeType": "Block",
													"src": "17594:53:2",
													"statements": [
														{
															"expression": {
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1663,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "17608:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1664,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "17629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17608:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1666,
															"nodeType": "ExpressionStatement",
															"src": "17608:28:2"
														}
													]
												},
												"id": 1668,
												"nodeType": "IfStatement",
												"src": "17506:141:2",
												"trueBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "17534:54:2",
													"statements": [
														{
															"expression": {
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1658,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "17548:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1659,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "17570:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17548:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1661,
															"nodeType": "ExpressionStatement",
															"src": "17548:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "17725:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1669,
														"name": "allocateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "17712:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17712:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "17712:33:2"
											},
											{
												"expression": {
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1673,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "17755:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1675,
														"indexExpression": {
															"id": 1674,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "17766:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17755:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1678,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "17793:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1680,
																"indexExpression": {
																	"id": 1679,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "17804:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17793:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1681,
																"name": "_tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "17817:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1676,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "17780:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2681,
															"src": "17780:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17780:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17755:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "17755:70:2"
											},
											{
												"assignments": [
													1686
												],
												"declarations": [
													{
														"constant": false,
														"id": 1686,
														"mutability": "mutable",
														"name": "_updatedPayouts",
														"nodeType": "VariableDeclaration",
														"scope": 1717,
														"src": "17866:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1685,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "17866:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1690,
																"name": "profitPerShare_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "17900:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1691,
																"name": "_tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "17918:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17900:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17892:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1687,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17892:6:2",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 1689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17891:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17891:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17866:60:2"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1695,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "17964:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1697,
														"indexExpression": {
															"id": 1696,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "17975:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17964:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1698,
														"name": "_updatedPayouts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "17990:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17964:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "17964:41:2"
											},
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1701,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "18015:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1703,
															"indexExpression": {
																"id": 1702,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "18026:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18015:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "deposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "18015:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1705,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "18051:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18015:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "18015:43:2"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1708,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "18068:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1710,
															"indexExpression": {
																"id": 1709,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "18079:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18068:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xInvested",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 421,
														"src": "18068:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18104:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18068:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "18068:37:2"
											},
											{
												"expression": {
													"id": 1715,
													"name": "_tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1626,
													"src": "18185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1716,
												"nodeType": "Return",
												"src": "18178:14:2"
											}
										]
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16656:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16684:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16646:59:2"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16724:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16723:9:2"
									},
									"scope": 1982,
									"src": "16623:1576:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "18293:1124:2",
										"statements": [
											{
												"assignments": [
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "_user",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18303:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1723,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18303:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"initialValue": {
													"expression": {
														"id": 1725,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "18319:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "18319:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18303:26:2"
											},
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18405:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18405:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1733,
												"initialValue": {
													"arguments": [
														{
															"id": 1731,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "18438:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "dividendsOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "18426:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18426:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18405:39:2"
											},
											{
												"expression": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1734,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "18454:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1736,
														"indexExpression": {
															"id": 1735,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "18465:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18454:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1740,
																	"name": "_dividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "18484:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1741,
																	"name": "magnitude",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "18497:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18484:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18476:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1737,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "18476:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18475:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18475:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18454:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "18454:53:2"
											},
											{
												"assignments": [
													1747
												],
												"declarations": [
													{
														"constant": false,
														"id": 1747,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18662:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1746,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18662:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1749,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "18695:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18695:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1751,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "18707:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1748,
														"name": "_depositTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "18680:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18680:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18662:56:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1755,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "18776:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1756,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "18783:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1757,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "18795:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1758,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "18804:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18804:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1754,
														"name": "onCompound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "18765:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18765:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "EmitStatement",
												"src": "18760:60:2"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1762,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "18867:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1764,
															"indexExpression": {
																"id": 1763,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "18878:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18867:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "compounded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 411,
														"src": "18867:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 1768,
																		"name": "accountOf_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "18924:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																			"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																		}
																	},
																	"id": 1770,
																	"indexExpression": {
																		"id": 1769,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "18935:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18924:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Account_$434_storage",
																		"typeString": "struct DiamondSafe.Account storage ref"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "compounded",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "18924:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1772,
																"name": "_dividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "18966:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1766,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "18898:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2681,
															"src": "18898:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18898:88:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18867:119:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "18867:119:2"
											},
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1776,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "18996:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1778,
															"indexExpression": {
																"id": 1777,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "19007:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18996:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xCompounded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 423,
														"src": "18996:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19029:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18996:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "18996:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1784,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "19105:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1785,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "19124:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1787,
																"indexExpression": {
																	"id": 1786,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "19135:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19124:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "19124:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1789,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "19165:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1791,
															"indexExpression": {
																"id": 1790,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "19176:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19165:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1792,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "19196:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1794,
																"indexExpression": {
																	"id": 1793,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "19207:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19196:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "19196:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1796,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "19237:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "19237:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1783,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "19083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19083:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "19078:184:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1800,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "19341:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19341:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "19341:12:2"
											},
											{
												"expression": {
													"id": 1803,
													"name": "_tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1747,
													"src": "19403:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1722,
												"id": 1804,
												"nodeType": "Return",
												"src": "19396:14:2"
											}
										]
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_compoundTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18263:2:2"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "18284:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18284:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18283:9:2"
									},
									"scope": 1982,
									"src": "18239:1178:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "19581:1852:2",
										"statements": [
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 1980,
														"src": "19591:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19591:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1819,
												"initialValue": {
													"expression": {
														"id": 1817,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "19609:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19609:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19591:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1821,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "19637:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1822,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "19648:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1824,
																"indexExpression": {
																	"id": 1823,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "19659:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19648:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19637:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19629:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19629:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "19629:39:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1828,
															"name": "myEarnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "19768:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19768:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19768:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1836,
												"nodeType": "IfStatement",
												"src": "19764:56:2",
												"trueBody": {
													"id": 1835,
													"nodeType": "Block",
													"src": "19786:34:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1832,
																	"name": "harvest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "19800:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19800:9:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1834,
															"nodeType": "ExpressionStatement",
															"src": "19800:9:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1837,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "19862:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1839,
														"indexExpression": {
															"id": 1838,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "19873:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19862:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1842,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "19897:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1844,
																"indexExpression": {
																	"id": 1843,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "19908:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19897:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1845,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "19918:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1840,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "19884:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2703,
															"src": "19884:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19884:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19862:64:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "19862:64:2"
											},
											{
												"expression": {
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1849,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "19936:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1851,
														"indexExpression": {
															"id": 1850,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "19947:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19936:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1854,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "19974:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1856,
																"indexExpression": {
																	"id": 1855,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "19985:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19974:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1857,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "19998:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1852,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "19961:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2876_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2681,
															"src": "19961:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19961:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19936:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "19936:70:2"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1861,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "20078:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1863,
														"indexExpression": {
															"id": 1862,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "20089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20078:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1867,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "20110:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1868,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "20128:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20110:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20102:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1864,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20102:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1866,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20101:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20101:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20078:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "20078:58:2"
											},
											{
												"expression": {
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1873,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "20146:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1875,
														"indexExpression": {
															"id": 1874,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "20157:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20146:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1879,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "20181:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1880,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "20199:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20181:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20173:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1876,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20173:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20172:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20172:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20146:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "20146:61:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1885,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "20310:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1887,
																"indexExpression": {
																	"id": 1886,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "20321:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20310:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "20310:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20346:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20310:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1891,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "20363:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1893,
																"indexExpression": {
																	"id": 1892,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "20374:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20363:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "receivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 419,
															"src": "20363:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20404:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20363:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20310:95:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1903,
												"nodeType": "IfStatement",
												"src": "20293:158:2",
												"trueBody": {
													"id": 1902,
													"nodeType": "Block",
													"src": "20416:35:2",
													"statements": [
														{
															"expression": {
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1898,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "20430:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20439:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20430:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1901,
															"nodeType": "ExpressionStatement",
															"src": "20430:10:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1904,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "20487:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1906,
															"indexExpression": {
																"id": 1905,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "20498:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20487:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xTransferredShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "20487:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20529:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20487:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "20487:43:2"
											},
											{
												"expression": {
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1911,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "20540:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1913,
															"indexExpression": {
																"id": 1912,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "20551:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20540:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "transferredShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "20540:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1915,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "20581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20540:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "20540:48:2"
											},
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1918,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "20598:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1920,
															"indexExpression": {
																"id": 1919,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "20609:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20598:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "receivedShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 419,
														"src": "20598:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1922,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "20639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20598:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "20598:48:2"
											},
											{
												"expression": {
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1925,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "20656:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1927,
															"indexExpression": {
																"id": 1926,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "20667:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20656:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$434_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xReceivedShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "20656:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20698:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20656:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "20656:43:2"
											},
											{
												"expression": {
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1932,
														"name": "totalTxs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "20751:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20763:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20751:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "20751:13:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1937,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "20841:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1938,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "20850:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "20862:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1940,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "20871:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "20871:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1936,
														"name": "onTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "20830:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20830:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "EmitStatement",
												"src": "20825:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1945,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "20973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1946,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "20994:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1948,
																"indexExpression": {
																	"id": 1947,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "21005:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20994:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "20994:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1950,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "21037:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1952,
															"indexExpression": {
																"id": 1951,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "21048:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21037:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1953,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "21070:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1955,
																"indexExpression": {
																	"id": 1954,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "21081:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21070:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "21070:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1957,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "21113:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "21113:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "20951:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20951:187:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "EmitStatement",
												"src": "20946:192:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1962,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "21227:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1963,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "21251:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1965,
																"indexExpression": {
																	"id": 1964,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "21262:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21251:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "21251:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1967,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "21297:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1969,
															"indexExpression": {
																"id": 1968,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "21308:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21297:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1970,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "21333:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$434_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1972,
																"indexExpression": {
																	"id": 1971,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "21344:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21333:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$434_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "21333:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1974,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "21379:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "21379:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1961,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "21205:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21205:199:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "EmitStatement",
												"src": "21200:204:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21422:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1814,
												"id": 1979,
												"nodeType": "Return",
												"src": "21415:11:2"
											}
										]
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "19498:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "19526:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19488:59:2"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "19566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19566:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19565:15:2"
									},
									"scope": 1982,
									"src": "19464:1969:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1983,
							"src": "205:21230:2"
						}
					],
					"src": "32:21404:2"
				},
				"id": 2
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2060
						]
					},
					"id": 2061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1984,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1985,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2060,
							"linearizedBaseContracts": [
								2060
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 2060,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 2060,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 2060,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 2060,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 2060,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 2060,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 2050,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 2059,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 2061,
							"src": "137:2566:3"
						}
					],
					"src": "33:2670:3"
				},
				"id": 3
			},
			"contracts/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2888
						],
						"IERC721": [
							2176
						]
					},
					"id": 2177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2062,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "lib/utils/introspection/IERC165.sol",
							"file": "../lib/utils/introspection/IERC165.sol",
							"id": 2063,
							"nodeType": "ImportDirective",
							"scope": 2177,
							"sourceUnit": 2889,
							"src": "133:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2065,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2888,
										"src": "272:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$2888",
											"typeString": "contract IERC165"
										}
									},
									"id": 2066,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:4"
								}
							],
							"contractDependencies": [
								2888
							],
							"contractKind": "interface",
							"documentation": {
								"id": 2064,
								"nodeType": "StructuredDocumentation",
								"src": "183:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 2176,
							"linearizedBaseContracts": [
								2176,
								2888
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "286:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 2075,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "394:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "416:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "436:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:67:4"
									},
									"src": "379:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "467:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 2084,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "581:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "604:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "630:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:74:4"
									},
									"src": "566:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "661:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 2093,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "804:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "827:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "853:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:64:4"
									},
									"src": "783:85:4"
								},
								{
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "874:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 2101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "974:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:4"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:17:4"
									},
									"scope": 2176,
									"src": "955:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "1035:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1188:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:17:4"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1228:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:15:4"
									},
									"scope": 2176,
									"src": "1171:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "1249:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1845:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1867:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1887:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1912:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1912:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:102:4"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:0:4"
									},
									"scope": 2176,
									"src": "1810:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "1953:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 2131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2680:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2680:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2702:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:73:4"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:4"
									},
									"scope": 2176,
									"src": "2645:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "2759:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3527:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3549:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3569:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:73:4"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3599:0:4"
									},
									"scope": 2176,
									"src": "3496:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "3606:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "4080:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "4092:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:29:4"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4117:0:4"
									},
									"scope": 2176,
									"src": "4063:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "4124:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4465:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4483:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4483:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:34:4"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:0:4"
									},
									"scope": 2176,
									"src": "4438:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "4514:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "4679:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4678:17:4"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "4719:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:18:4"
									},
									"scope": 2176,
									"src": "4658:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "4743:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "4912:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "4927:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4911:33:4"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "4968:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4968:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:6:4"
									},
									"scope": 2176,
									"src": "4886:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2177,
							"src": "251:4725:4"
						}
					],
					"src": "108:4868:4"
				},
				"id": 4
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							318
						],
						"Ownable": [
							2286
						]
					},
					"id": 2287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2178,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 2179,
							"nodeType": "ImportDirective",
							"scope": 2287,
							"sourceUnit": 319,
							"src": "66:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2181,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 318,
										"src": "614:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$318",
											"typeString": "contract Context"
										}
									},
									"id": 2182,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:5"
								}
							],
							"contractDependencies": [
								318
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2180,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2286,
							"linearizedBaseContracts": [
								2286,
								318
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2184,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 2286,
									"src": "628:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2183,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2190,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "684:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "715:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:5"
									},
									"src": "657:84:5"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "867:135:5",
										"statements": [
											{
												"assignments": [
													2195
												],
												"declarations": [
													{
														"constant": false,
														"id": 2195,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 2211,
														"src": "877:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2194,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "877:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2198,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2196,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "877:32:5"
											},
											{
												"expression": {
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2199,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "919:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2200,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "928:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "919:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "919:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "973:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2204,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "973:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "973:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2208,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "985:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2203,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "952:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "952:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "EmitStatement",
												"src": "947:48:5"
											}
										]
									},
									"documentation": {
										"id": 2191,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2212,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:5"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:5"
									},
									"scope": 2286,
									"src": "843:159:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "1133:30:5",
										"statements": [
											{
												"expression": {
													"id": 2218,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2184,
													"src": "1150:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2219,
												"nodeType": "Return",
												"src": "1143:13:5"
											}
										]
									},
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "1008:65:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1092:2:5"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1124:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:9:5"
									},
									"scope": 2286,
									"src": "1078:85:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "1272:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2225,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "1290:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1290:7:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2227,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1301:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1290:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "1282:68:5"
											},
											{
												"id": 2233,
												"nodeType": "PlaceholderStatement",
												"src": "1360:1:5"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "1169:77:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2235,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:2:5"
									},
									"src": "1251:117:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "1764:91:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2242,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "1800:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1816:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1808:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2243,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1808:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1808:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2241,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "1779:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "EmitStatement",
												"src": "1774:45:5"
											},
											{
												"expression": {
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2249,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "1829:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1846:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1838:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1838:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1838:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1829:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "1829:19:5"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "1374:331:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2239,
											"modifierName": {
												"id": 2238,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2235,
												"src": "1754:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1754:9:5"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:2:5"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:0:5"
									},
									"scope": 2286,
									"src": "1710:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2284,
										"nodeType": "Block",
										"src": "2074:170:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2266,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "2092:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2104:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2267,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2104:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2104:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2092:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2116:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2084:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2084:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "2084:73:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2276,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2193:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2277,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "2201:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2275,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "2172:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2279,
												"nodeType": "EmitStatement",
												"src": "2167:43:5"
											},
											{
												"expression": {
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2280,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "2220:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2281,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "2229:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "2220:17:5"
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "1861:138:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2263,
											"modifierName": {
												"id": 2262,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2235,
												"src": "2064:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2064:9:5"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2031:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:18:5"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:5"
									},
									"scope": 2286,
									"src": "2004:240:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2287,
							"src": "585:1661:5"
						}
					],
					"src": "33:2213:5"
				},
				"id": 5
			},
			"contracts/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"IERC20": [
							2060
						],
						"SafeERC20": [
							2499
						],
						"SafeMath": [
							2876
						]
					},
					"id": 2500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2288,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2289,
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 2061,
							"src": "66:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2290,
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 2877,
							"src": "89:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 2291,
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 296,
							"src": "114:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2292,
								"nodeType": "StructuredDocumentation",
								"src": "139:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2499,
							"linearizedBaseContracts": [
								2499
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2295,
									"libraryName": {
										"id": 2293,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2876,
										"src": "627:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2876",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "621:27:6",
									"typeName": {
										"id": 2294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2298,
									"libraryName": {
										"id": 2296,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 295,
										"src": "659:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$295",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:26:6",
									"typeName": {
										"id": 2297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "757:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2308,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "787:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2311,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "817:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2060",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2009,
																		"src": "817:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "817:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2314,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "842:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "846:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2309,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "794:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "794:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "794:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2307,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2498,
														"src": "767:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2060_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2318,
												"nodeType": "ExpressionStatement",
												"src": "767:86:6"
											}
										]
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "707:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2060",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2299,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2060,
													"src": "707:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "721:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "733:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:41:6"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:6"
									},
									"scope": 2499,
									"src": "685:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "956:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2332,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "986:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2335,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2322,
																			"src": "1016:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2060",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2041,
																		"src": "1016:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1016:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2338,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2324,
																	"src": "1045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2339,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "1051:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2340,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "1055:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "993:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "993:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "993:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2331,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2498,
														"src": "966:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2060_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "966:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "ExpressionStatement",
												"src": "966:96:6"
											}
										]
									},
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "892:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2060",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2321,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2060,
													"src": "892:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "906:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "920:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "932:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:55:6"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:0:6"
									},
									"scope": 2499,
									"src": "866:203:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "1405:537:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2352,
																			"src": "1694:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1703:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1694:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1693:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2364,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1734:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2499",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2499",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1726:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2362,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1726:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1726:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2366,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "1741:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2360,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2348,
																					"src": "1710:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2060",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2019,
																				"src": "1710:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1710:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1753:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1710:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1709:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1693:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1769:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1685:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1685:150:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "1685:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2376,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "1865:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2379,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2348,
																			"src": "1895:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2060",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2029,
																		"src": "1895:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1895:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "1919:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2383,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "1928:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2377,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1872:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1872:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2375,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2498,
														"src": "1845:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2060_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "1845:90:6"
											}
										]
									},
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "1075:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1350:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2060",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2347,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2060,
													"src": "1350:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1364:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1381:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:46:6"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:0:6"
									},
									"scope": 2499,
									"src": "1329:613:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "2034:197:6",
										"statements": [
											{
												"assignments": [
													2398
												],
												"declarations": [
													{
														"constant": false,
														"id": 2398,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "2044:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2397,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2044:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2410,
												"initialValue": {
													"arguments": [
														{
															"id": 2408,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "2111:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2403,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2091:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2499",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2499",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2401,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2083:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2083:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2405,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "2098:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "2067:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2019,
																"src": "2067:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2067:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2681,
														"src": "2067:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2044:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "2147:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2415,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "2177:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2060",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2029,
																		"src": "2177:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2177:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2418,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "2201:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2419,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2398,
																	"src": "2210:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2413,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2154:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2154:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2411,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2498,
														"src": "2127:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2060_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "2127:97:6"
											}
										]
									},
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "1979:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2060",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2389,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2060,
													"src": "1979:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "1993:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "2010:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:46:6"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:6"
									},
									"scope": 2499,
									"src": "1948:283:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "2323:242:6",
										"statements": [
											{
												"assignments": [
													2434
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 2460,
														"src": "2333:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2333:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2447,
												"initialValue": {
													"arguments": [
														{
															"id": 2444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "2400:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2407:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2439,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2380:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2499",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2499",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2372:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2437,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2372:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2372:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2441,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "2387:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "2356:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2019,
																"src": "2356:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2356:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2805,
														"src": "2356:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2333:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2449,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2426,
															"src": "2481:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2452,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "2511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2060",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2029,
																		"src": "2511:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2511:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2455,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "2535:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2456,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "2544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2450,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2488:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2488:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2488:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2060",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2448,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2498,
														"src": "2461:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2060_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2459,
												"nodeType": "ExpressionStatement",
												"src": "2461:97:6"
											}
										]
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2268:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2060",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2425,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2060,
													"src": "2268:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2282:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:46:6"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2323:0:6"
									},
									"scope": 2499,
									"src": "2237:328:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "3018:681:6",
										"statements": [
											{
												"assignments": [
													2470
												],
												"declarations": [
													{
														"constant": false,
														"id": 2470,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2497,
														"src": "3367:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2469,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3367:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2479,
												"initialValue": {
													"arguments": [
														{
															"id": 2476,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "3421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3427:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2473,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2464,
																	"src": "3401:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2060",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2060",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3393:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3393:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3393:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "3393:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3367:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2480,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "3476:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3476:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3476:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2496,
												"nodeType": "IfStatement",
												"src": "3472:221:6",
												"trueBody": {
													"id": 2495,
													"nodeType": "Block",
													"src": "3499:194:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2487,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2470,
																				"src": "3616:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3629:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2488,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3629:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2490,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3628:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2485,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3605:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3605:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3605:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3637:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2484,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3597:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3597:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2494,
															"nodeType": "ExpressionStatement",
															"src": "3597:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "2571:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2977:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2060",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2463,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2060,
													"src": "2977:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2060",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2991:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2991:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:33:6"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3018:0:6"
									},
									"scope": 2499,
									"src": "2948:751:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2500,
							"src": "597:3104:6"
						}
					],
					"src": "33:3668:6"
				},
				"id": 6
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2876
						]
					},
					"id": 2877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2501,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2502,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2876,
							"linearizedBaseContracts": [
								2876
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "865:98:7",
										"statements": [
											{
												"assignments": [
													2515
												],
												"declarations": [
													{
														"constant": false,
														"id": 2515,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "875:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2519,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "887:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2517,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "891:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2520,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2515,
														"src": "906:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2521,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "910:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2527,
												"nodeType": "IfStatement",
												"src": "902:28:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2525,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2513,
													"id": 2526,
													"nodeType": "Return",
													"src": "913:17:7"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2529,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "954:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2530,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2513,
												"id": 2531,
												"nodeType": "Return",
												"src": "940:16:7"
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "805:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "816:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:7"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "850:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "856:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:7"
									},
									"scope": 2876,
									"src": "789:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2559,
										"nodeType": "Block",
										"src": "1185:75:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2545,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2538,
														"src": "1199:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2546,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2536,
														"src": "1203:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2552,
												"nodeType": "IfStatement",
												"src": "1195:28:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2550,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2544,
													"id": 2551,
													"nodeType": "Return",
													"src": "1206:17:7"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2554,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "1247:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2555,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2538,
																"src": "1251:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2557,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2544,
												"id": 2558,
												"nodeType": "Return",
												"src": "1233:20:7"
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:7",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "1125:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "1136:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:7"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "1170:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "1176:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:7"
									},
									"scope": 2876,
									"src": "1109:151:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "1484:359:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2572,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2563,
														"src": "1716:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2579,
												"nodeType": "IfStatement",
												"src": "1712:28:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2571,
													"id": 2578,
													"nodeType": "Return",
													"src": "1724:16:7"
												}
											},
											{
												"assignments": [
													2581
												],
												"declarations": [
													{
														"constant": false,
														"id": 2581,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "1750:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2585,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2582,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2563,
														"src": "1762:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2583,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "1766:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2586,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "1781:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "1785:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2589,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "1790:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2595,
												"nodeType": "IfStatement",
												"src": "1777:33:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2593,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2571,
													"id": 2594,
													"nodeType": "Return",
													"src": "1793:17:7"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2597,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "1834:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2598,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2571,
												"id": 2599,
												"nodeType": "Return",
												"src": "1820:16:7"
											}
										]
									},
									"documentation": {
										"id": 2561,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "1424:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "1435:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:7"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "1469:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "1475:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:7"
									},
									"scope": 2876,
									"src": "1408:435:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2627,
										"nodeType": "Block",
										"src": "2068:76:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "2082:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2620,
												"nodeType": "IfStatement",
												"src": "2078:29:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2618,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2612,
													"id": 2619,
													"nodeType": "Return",
													"src": "2090:17:7"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2622,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2604,
																"src": "2131:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2623,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2606,
																"src": "2135:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2625,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2612,
												"id": 2626,
												"nodeType": "Return",
												"src": "2117:20:7"
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "2019:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:7"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "2053:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "2059:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:7"
									},
									"scope": 2876,
									"src": "1992:152:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "2379:76:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2640,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2633,
														"src": "2393:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2647,
												"nodeType": "IfStatement",
												"src": "2389:29:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2645,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2639,
													"id": 2646,
													"nodeType": "Return",
													"src": "2401:17:7"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2649,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2631,
																"src": "2442:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2633,
																"src": "2446:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2652,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2639,
												"id": 2653,
												"nodeType": "Return",
												"src": "2428:20:7"
											}
										]
									},
									"documentation": {
										"id": 2629,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "2319:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "2330:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:7"
									},
									"returnParameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "2364:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "2370:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:7"
									},
									"scope": 2876,
									"src": "2303:152:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2680,
										"nodeType": "Block",
										"src": "2757:108:7",
										"statements": [
											{
												"assignments": [
													2666
												],
												"declarations": [
													{
														"constant": false,
														"id": 2666,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2680,
														"src": "2767:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2670,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2667,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2658,
														"src": "2779:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2668,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2660,
														"src": "2783:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2672,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "2802:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2673,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2658,
																"src": "2807:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2677,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:7"
											},
											{
												"expression": {
													"id": 2678,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2666,
													"src": "2857:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2664,
												"id": 2679,
												"nodeType": "Return",
												"src": "2850:8:7"
											}
										]
									},
									"documentation": {
										"id": 2656,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "2703:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "2714:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:7"
									},
									"returnParameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "2748:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:7"
									},
									"scope": 2876,
									"src": "2690:175:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2702,
										"nodeType": "Block",
										"src": "3203:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3221:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2693,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2684,
																"src": "3226:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2697,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2698,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2684,
														"src": "3279:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2699,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2686,
														"src": "3283:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2690,
												"id": 2701,
												"nodeType": "Return",
												"src": "3272:12:7"
											}
										]
									},
									"documentation": {
										"id": 2682,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "3149:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "3160:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:7"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "3194:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:7"
									},
									"scope": 2876,
									"src": "3136:155:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "3605:148:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2713,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "3619:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2718,
												"nodeType": "IfStatement",
												"src": "3615:20:7",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2712,
													"id": 2717,
													"nodeType": "Return",
													"src": "3627:8:7"
												}
											},
											{
												"assignments": [
													2720
												],
												"declarations": [
													{
														"constant": false,
														"id": 2720,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2736,
														"src": "3645:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2724,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2721,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "3657:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2722,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "3661:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2726,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2720,
																	"src": "3680:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2727,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "3684:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "3689:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2733,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:7"
											},
											{
												"expression": {
													"id": 2734,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2720,
													"src": "3745:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2712,
												"id": 2735,
												"nodeType": "Return",
												"src": "3738:8:7"
											}
										]
									},
									"documentation": {
										"id": 2704,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "3551:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "3562:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:7"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "3596:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:7"
									},
									"scope": 2876,
									"src": "3538:215:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "4284:83:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "4302:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2754,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "4355:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2755,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2742,
														"src": "4359:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2746,
												"id": 2757,
												"nodeType": "Return",
												"src": "4348:12:7"
											}
										]
									},
									"documentation": {
										"id": 2738,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "4230:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "4241:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:7"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "4275:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:7"
									},
									"scope": 2876,
									"src": "4217:150:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2780,
										"nodeType": "Block",
										"src": "4887:81:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2770,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "4905:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2775,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2776,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "4956:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2777,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2764,
														"src": "4960:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2768,
												"id": 2779,
												"nodeType": "Return",
												"src": "4949:12:7"
											}
										]
									},
									"documentation": {
										"id": 2760,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "4833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "4844:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:7"
									},
									"returnParameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "4878:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:7"
									},
									"scope": 2876,
									"src": "4820:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "5527:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2794,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2786,
																"src": "5545:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2795,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2784,
																"src": "5550:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2797,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2788,
															"src": "5553:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2799,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2800,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2784,
														"src": "5583:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2801,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2786,
														"src": "5587:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2792,
												"id": 2803,
												"nodeType": "Return",
												"src": "5576:12:7"
											}
										]
									},
									"documentation": {
										"id": 2782,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "5445:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "5456:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "5467:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:7"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "5518:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:7"
									},
									"scope": 2876,
									"src": "5432:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "6347:67:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2818,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2810,
																"src": "6365:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2821,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "6372:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2824,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "6402:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2825,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "6406:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2816,
												"id": 2827,
												"nodeType": "Return",
												"src": "6395:12:7"
											}
										]
									},
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "6265:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "6276:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "6287:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:50:7"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "6338:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:9:7"
									},
									"scope": 2876,
									"src": "6252:162:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "7155:67:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2842,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "7173:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2845,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2836,
															"src": "7180:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2848,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2832,
														"src": "7210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2849,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "7214:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2840,
												"id": 2851,
												"nodeType": "Return",
												"src": "7203:12:7"
											}
										]
									},
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "7073:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "7084:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "7095:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2835,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:50:7"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "7146:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7145:9:7"
									},
									"scope": 2876,
									"src": "7060:162:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "7350:103:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2862,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "7364:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2863,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "7368:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7364:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2872,
													"nodeType": "Block",
													"src": "7410:37:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "7431:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2869,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2857,
																	"src": "7435:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7431:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2861,
															"id": 2871,
															"nodeType": "Return",
															"src": "7424:12:7"
														}
													]
												},
												"id": 2873,
												"nodeType": "IfStatement",
												"src": "7360:87:7",
												"trueBody": {
													"id": 2867,
													"nodeType": "Block",
													"src": "7371:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7392:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2861,
															"id": 2866,
															"nodeType": "Return",
															"src": "7385:8:7"
														}
													]
												}
											}
										]
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7305:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7305:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7313:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7313:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7304:16:7"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "7344:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7344:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7343:6:7"
									},
									"scope": 2876,
									"src": "7288:165:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2877,
							"src": "630:6825:7"
						}
					],
					"src": "33:7422:7"
				},
				"id": 7
			},
			"lib/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2888
						]
					},
					"id": 2889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2878,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2879,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2888,
							"linearizedBaseContracts": [
								2888
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2880,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2881,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 2888,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2889,
							"src": "405:447:8"
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			}
		}
	}
}