{
	"id": "bc853ed37e0c63e56241b435cbf219c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DiamodSafe copy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.4;\n\nimport \"./Address.sol\";\nimport \"./SafeMath.sol\";\nimport \"./SafeERC20.sol\";\n\nimport \"./IERC20.sol\";\n\nimport \"./Ownable.sol\";\nimport \"./IERC721.sol\";\nimport \"./ReentrancyGuard.sol\";\n\ncontract DiamondSafe is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint;\n\n    // Import the BEP20 token interface\n    IERC20 public stakingToken;\n    \n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$$CONFIGURABLES AND VARIABLES$$$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n    //NFT amount to hold for immunity\n    uint256 public requiredBalance;\n\n    // Store the token address and the reserve address as well as the NFTs\n    address public tokenAddress;\n    address payable public bnbReceiver;\n    IERC721[] public jpeg;\n    // Store the number of unique users and total Tx's\n    uint public users;\n    uint public totalTxs;\n\n    // Store the starting time & block number and the last payout time\n    uint public lastPayout; // What time was the last payout (timestamp)?\n\n    // Store the details of total deposits & claims\n    uint public totalClaims;\n    uint public totalDeposits;\n\n    // Store the total drip pool balance and rate\n    uint public dripPoolBalance;\n    uint8 public dripRate;\n\n    // 10% fee on deposit and withdrawal\n    uint8 internal constant divsFee = 10;\n    uint256 internal constant magnitude = 2 ** 64;\n\n    // How many portions of the fees does each receiver get?\n    uint public forPool;\n    uint public forDivs;\n\n    // Rebase and payout frequency\n    uint256 public constant rebaseFrequency = 6 hours;\n    uint256 public constant payoutFrequency = 2 seconds;\n\n    // Timestamp of last rebase\n    uint256 public lastRebaseTime;\n\n    // Current total tokens staked, and profit per share\n    uint256 private currentTotalStaked;\n    uint256 private profitPerShare_;\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ MODIFIERS                    $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // Only holders - Caller must have funds in the vault\n    modifier onlyHolders() {\n        require(myTokens() > 0);\n        _;\n    }\n\n    // Only earners - Caller must have some earnings\n    modifier onlyEarners() {\n        require(myEarnings() > 0);\n        _;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n     $$ ACCOUNT STRUCT                 $$\n     $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    struct Account {\n        uint deposited;\n        uint withdrawn;\n        uint compounded;\n        uint rewarded;\n        uint contributed;\n        uint transferredShares;\n        uint receivedShares;\n        uint xInvested;\n        uint xCompounded;\n        uint xRewarded;\n        uint xContributed;\n        uint xWithdrawn;\n        uint xTransferredShares;\n        uint xReceivedShares;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ MAPPINGS                       $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    mapping(address => int256) payoutsOf_;\n    mapping(address => uint256) balanceOf_;\n    mapping(address => Account) accountOf_;\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ EVENTS                         $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    event onDeposit(\n        address indexed _user,\n        uint256 _deposited,\n        uint256 tokensMinted,\n        uint timestamp\n    );\n    event onWithdraw(\n        address indexed _user,\n        uint256 _liquidated,\n        uint256 tokensEarned,\n        uint timestamp\n    );\n    event onCompound(\n        address indexed _user,\n        uint256 _compounded,\n        uint256 tokensMinted,\n        uint timestamp\n    );\n    event onWithdraw(address indexed _user, uint256 _withdrawn, uint timestamp);\n    event onTransfer(\n        address indexed from,\n        address indexed to,\n        uint256 tokens,\n        uint timestamp\n    );\n    event onUpdate(\n        address indexed _user,\n        uint256 invested,\n        uint256 tokens,\n        uint256 soldTokens,\n        uint timestamp\n    );\n\n    event onRebase(uint256 balance, uint256 timestamp);\n\n    event onDonate(address indexed from, uint256 _contributed, uint timestamp);\n    event onDonateBNB(address indexed from, uint256 amount, uint timestamp);\n\n    event onSetFeeSplit(uint _pool, uint _divs, uint256 timestamp);\n    event onSetImmunityToken(\n        address indexed _caller,\n        IERC721 []oldOne,\n        IERC721 []newOne,\n        uint256 timestamp\n    );\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ CONSTRUCTOR                    $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    constructor(address _tokenAddress, uint8 _dripRate) Ownable() {\n        require(\n            _tokenAddress != address(0) && Address.isContract(_tokenAddress),\n            \"INVALID_ADDRESS\"\n        );\n\n        tokenAddress = _tokenAddress;\n        stakingToken = IERC20(_tokenAddress);\n\n        bnbReceiver = msg.sender;\n\n        // Set Drip Rate and last payout date (first time around)...\n        dripRate = _dripRate;\n        lastPayout = (block.timestamp);\n\n        // Fee portions\n        forPool = 8;\n        forDivs = 2;\n\n        requiredBalance = 1;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ FALLBACK                       $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    receive() external payable {\n        Address.sendValue(bnbReceiver, msg.value);\n        emit onDonateBNB(msg.sender, msg.value, block.timestamp);\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ WRITE FUNCTIONS                $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // Donate\n    function donate(uint _amount) public returns (uint256) {\n        // Move the tokens from the caller's wallet to this contract.\n        require(stakingToken.transferFrom(msg.sender, address(this), _amount));\n\n        // Add the tokens to the drip pool balance\n        dripPoolBalance += _amount;\n        accountOf_[msg.sender].xContributed += 1;\n        accountOf_[msg.sender].contributed += _amount;\n\n        // Tell the network, successful function - how much in the pool now?\n        emit onDonate(msg.sender, _amount, block.timestamp);\n        return dripPoolBalance;\n    }\n\n    // Deposit\n    function deposit(uint _amount) public returns (uint256) {\n        return depositTo(msg.sender, _amount);\n    }\n\n    // DepositTo\n    function depositTo(address _user, uint _amount) public returns (uint256) {\n        // Move the tokens from the caller's wallet to this contract.\n        require(stakingToken.transferFrom(msg.sender, address(this), _amount));\n\n        // Add the deposit to the totalDeposits...\n        totalDeposits += _amount;\n\n        // Then actually call the deposit method...\n        uint amount = _depositTokens(_user, _amount);\n\n        // Update the leaderboard...\n        emit onUpdate(\n            _user,\n            accountOf_[_user].deposited,\n            balanceOf_[_user],\n            accountOf_[_user].withdrawn,\n            block.timestamp\n        );\n\n        // Then trigger a distribution for everyone, kind soul!\n        distribute();\n\n        // Successful function - how many 'shares' (tokens) are the result?\n        return amount;\n    }\n\n    // Compound\n    function compound() public onlyEarners {\n        _compoundTokens();\n    }\n\n    // Harvest\n    function harvest() public onlyEarners {\n        address _user = msg.sender;\n        uint256 _dividends = myEarnings();\n\n        // Calculate the payout, add it to the user's total paid out accounting...\n        payoutsOf_[_user] += (int256)(_dividends * magnitude);\n\n        // Pay the user their tokens to their wallet\n        stakingToken.transfer(_user, _dividends);\n\n        // Update accounting for user/total withdrawal stats...\n        accountOf_[_user].withdrawn = SafeMath.add(\n            accountOf_[_user].withdrawn,\n            _dividends\n        );\n        accountOf_[_user].xWithdrawn += 1;\n\n        // Update total Tx's and claims stats\n        totalTxs += 1;\n        totalClaims += _dividends;\n\n        // Tell the network...\n        emit onWithdraw(_user, _dividends, block.timestamp);\n\n        // Trigger a distribution for everyone, kind soul!\n        distribute();\n    }\n\n    // Withdraw\n    function withdraw(uint256 _amount) public onlyHolders {\n        address _user = msg.sender;\n        require(_amount <= balanceOf_[_user]);\n         uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100;\n                \n        bool isImmune = checkImmunity(msg.sender);\n        //Checks immunity\n        if (isImmune) {\n            //Sets amount of tokens to be taxed to 0 of immune\n           _undividedDividends = 0;  \n           } \n         // Calculate dividends and 'shares' (tokens)\n        uint256  _taxedTokens = SafeMath.sub(_amount, _undividedDividends);\n        currentTotalStaked = SafeMath.sub(currentTotalStaked, _amount);\n        balanceOf_[_user] = SafeMath.sub(balanceOf_[_user], _amount);\n\n        // Update the payment ratios for the user and everyone else...\n        int256 _updatedPayouts = (int256)(\n            profitPerShare_ * _amount + (_taxedTokens * magnitude)\n        );\n        payoutsOf_[_user] -= _updatedPayouts;\n\n        // Serve dividends between the drip and instant divs (4:1)...\n        allocateFees(_undividedDividends);\n\n        // Tell the network, and trigger a distribution\n        emit onWithdraw(_user, _amount, _taxedTokens, block.timestamp);\n\n        // Update the leaderboard...\n        emit onUpdate(\n            _user,\n            accountOf_[_user].deposited,\n            balanceOf_[_user],\n            accountOf_[_user].withdrawn,\n            block.timestamp\n        );\n        // Trigger a distribution for everyone, kind soul!\n        distribute();\n        }\n     // Transfer\n    function transfer(\n        address _to,\n        uint256 _amount\n    ) external onlyHolders returns (bool) {\n        return _transferTokens(_to, _amount);\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$VIEW FUNCTIONS                 $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // User is immune to withdraw fees when holding an item\n    function checkImmunity(address _user) public view returns (bool isImmune) {\n        uint256 x = 0;\n        IERC721 jpegTest1;\n        for(uint i =0; i < jpeg.length; i++){\n            jpegTest1 = IERC721(jpeg[i]);\n             x += jpegTest1.balanceOf(_user);\n        }\n       if (x >= requiredBalance) {\n            return true;\n        }\n        return false;\n    }\n\n    function myTokens() public view returns (uint256) {\n        return balanceOf(msg.sender);\n    }\n\n    function myEarnings() public view returns (uint256) {\n        return dividendsOf(msg.sender);\n    }\n\n    function balanceOf(address _user) public view returns (uint256) {\n        return balanceOf_[_user];\n    }\n\n    function tokenBalance(address _user) public view returns (uint256) {\n        return _user.balance;\n    }\n\n    function totalBalance() public view returns (uint256) {\n        return stakingToken.balanceOf(address(this));\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return currentTotalStaked;\n    }\n\n    function dividendsOf(address _user) public view returns (uint256) {\n        return\n            (uint256)(\n                (int256)(profitPerShare_ * balanceOf_[_user]) -\n                    payoutsOf_[_user]\n            ) / magnitude;\n    }\n\n    function sellPrice() public pure  returns (uint256) {\n        uint256 _tokens = 1e18;\n        uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100);\n        uint256 _taxedTokens = SafeMath.sub(_tokens, _dividends);\n        return _taxedTokens;\n    }\n\n    function buyPrice() public pure returns (uint256) {\n        uint256 _tokens = 1e18;\n        uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100);\n        uint256 _taxedTokens = SafeMath.add(_tokens, _dividends);\n        return _taxedTokens;\n    }\n\n    function calculateSharesReceived(\n        uint256 _amount\n    ) public pure returns (uint256) {\n        uint256 _divies = SafeMath.div(SafeMath.mul(_amount, divsFee), 100);\n        uint256 _remains = SafeMath.sub(_amount, _divies);\n        uint256 _result = _remains;\n        return _result;\n    }\n\n    function calculateTokensReceived(\n        uint256 _amount\n    ) public view returns (uint256) {\n        require(_amount <= currentTotalStaked);\n        uint256 _tokens = _amount;\n        uint256 _divies = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100);\n        uint256 _remains = SafeMath.sub(_tokens, _divies);\n        return _remains;\n    }\n\n    function accountOf(address _user) public view returns (uint256[14] memory) {\n        Account memory a = accountOf_[_user];\n        uint256[14] memory accountArray = [\n            a.deposited,\n            a.withdrawn,\n            a.rewarded,\n            a.compounded,\n            a.contributed,\n            a.transferredShares,\n            a.receivedShares,\n            a.xInvested,\n            a.xRewarded,\n            a.xContributed,\n            a.xWithdrawn,\n            a.xTransferredShares,\n            a.xReceivedShares,\n            a.xCompounded\n        ];\n        return accountArray;\n    }\n\n    function dailyEstimate(address _user) public view returns (uint256) {\n        uint256 share = dripPoolBalance.mul(dripRate).div(100);\n        return\n            (currentTotalStaked > 0)\n                ? share.mul(balanceOf_[_user]).div(currentTotalStaked)\n                : 0;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ PUBLIC OWNER-ONLY FUNCTIONS $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n    function setFeeSplit(\n        uint256 _pool,\n        uint256 _divs\n    ) public onlyOwner returns (bool _success) {\n        require(_pool.add(_divs) == 10, \"TEN_PORTIONS_REQUIRE_DIVISION\");\n\n        // Set the new values...\n        forPool = _pool;\n        forDivs = _divs;\n\n        // Tell the network, successful function!\n        emit onSetFeeSplit(_pool, _divs, block.timestamp);\n        return true;\n    }\n\n   // make a set of NFT available for immunity withdraw\n    function setImmunityToken(\n        IERC721[] memory _contract\n    ) public onlyOwner returns (bool _success) {\n    for(uint i =0; i < jpeg.length; i++){\n    // check to make sure they are ERC721 tokens\n   require(_contract[i].supportsInterface(0x80ac58cd), \"NOT_ERC721\");    \n    }\n        IERC721[] memory oldContract = jpeg;\n        jpeg = _contract;\n\n        emit onSetImmunityToken(\n            msg.sender,\n            oldContract,\n            _contract,\n            block.timestamp\n        );\n        return true;\n    }\n\n    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n    $$ PRIVATE / INTERNAL FUNCTIONS   $$\n    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\n\n    // Allocate fees (private method)\n    function allocateFees(uint fee) private {\n        uint256 _onePiece = fee.div(10);\n\n        uint256 _forPool = (_onePiece.mul(forPool)); // for the Drip Pool\n        uint256 _forDivs = (_onePiece.mul(forDivs)); // for Instant Divs\n\n        dripPoolBalance = dripPoolBalance.add(_forPool);\n\n        // If there's more than 0 tokens staked in the vault...\n        if (currentTotalStaked > 0) {\n            // Distribute those instant divs...\n            profitPerShare_ = SafeMath.add(\n                profitPerShare_,\n                (_forDivs * magnitude) / currentTotalStaked\n            );\n        } else {\n            // Otherwise add the divs portion to the drip pool balance.\n            dripPoolBalance += _forDivs;\n        }\n    }\n\n    // Distribute (private method)\n    function distribute() private {\n        uint _currentTimestamp = (block.timestamp);\n\n        // Log a rebase, if it's time to do so...\n        if (_currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency) {\n            // Tell the network...\n            emit onRebase(totalBalance(), _currentTimestamp);\n\n            // Update the time this was last updated...\n            lastRebaseTime = _currentTimestamp;\n        }\n\n        // If there's any time difference...\n        if (\n            SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency &&\n            currentTotalStaked > 0\n        ) {\n            // Calculate shares and profits...\n            uint256 share = dripPoolBalance.mul(dripRate).div(100).div(\n                24 hours\n            );\n            uint256 profit = share * _currentTimestamp.safeSub(lastPayout);\n\n            // Subtract from drip pool balance and add to all user earnings\n            dripPoolBalance = dripPoolBalance.safeSub(profit);\n            profitPerShare_ = SafeMath.add(\n                profitPerShare_,\n                (profit * magnitude) / currentTotalStaked\n            );\n\n            // Update the last payout timestamp\n            lastPayout = _currentTimestamp;\n        }\n    }\n\n    // Deposit Tokens (internal method)\n    function _depositTokens(\n        address _recipient,\n        uint256 _amount\n    ) internal returns (uint256) {\n        // If the recipient has zero activity, they're new - COUNT THEM!!!\n        if (\n            accountOf_[_recipient].deposited == 0 &&\n            accountOf_[_recipient].receivedShares == 0\n        ) {\n            users += 1;\n        }\n\n        // Count this tx...\n        totalTxs += 1;     \n         uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100;\n          uint256   _tokens = SafeMath.sub(_amount, _undividedDividends);\n\n       \n        // Tell the network...\n        emit onDeposit(_recipient, _amount, _tokens, block.timestamp);\n\n        // There needs to be something being added in this call...\n        require(\n            _tokens > 0 &&\n                SafeMath.add(_tokens, currentTotalStaked) > currentTotalStaked\n        );\n        if (currentTotalStaked > 0) {\n            currentTotalStaked += _tokens;\n        } else {\n            currentTotalStaked = _tokens;\n        }\n\n        // Allocate fees, and balance to the recipient\n        allocateFees(_undividedDividends);\n        balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _tokens);\n\n        // Updated payouts...\n        int256 _updatedPayouts = (int256)(profitPerShare_ * _tokens);\n\n        // Update stats...\n        payoutsOf_[_recipient] += _updatedPayouts;\n        accountOf_[_recipient].deposited += _amount;\n        accountOf_[_recipient].xInvested += 1;\n\n        // Successful function - how many \"shares\" generated?\n        return _tokens;\n    }\n\n    // Compound (internal method)\n    function _compoundTokens() internal returns (uint256) {\n        address _user = msg.sender;\n\n        // Quickly roll the caller's earnings into their payouts\n        uint256 _dividends = dividendsOf(_user);\n        payoutsOf_[_user] += (int256)(_dividends * magnitude);\n\n        // Then actually trigger the deposit method\n        // (NOTE: No tokens required here, earnings are tokens already within the contract)\n        uint256 _tokens = _depositTokens(msg.sender, _dividends);\n\n        // Tell the network...\n        emit onCompound(_user, _dividends, _tokens, block.timestamp);\n\n        // Then update the stats...\n        accountOf_[_user].compounded = SafeMath.add(\n            accountOf_[_user].compounded,\n            _dividends\n        );\n        accountOf_[_user].xCompounded += 1;\n\n        // Update the leaderboard...\n        emit onUpdate(\n            _user,\n            accountOf_[_user].deposited,\n            balanceOf_[_user],\n            accountOf_[_user].withdrawn,\n            block.timestamp\n        );\n\n        // Then trigger a distribution for everyone, you kind soul!\n        distribute();\n\n        // Successful function!\n        return _tokens;\n    }\n\n    // Transfer Tokens (internal method)\n    function _transferTokens(\n        address _recipient,\n        uint256 _amount\n    ) internal returns (bool _success) {\n        address _sender = msg.sender;\n        require(_amount <= balanceOf_[_sender]);\n\n        // Harvest any earnings before transferring, to help with cleaner accounting\n        if (myEarnings() > 0) {\n            harvest();\n        }\n\n        // \"Move\" the tokens...\n        balanceOf_[_sender] = SafeMath.sub(balanceOf_[_sender], _amount);\n        balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _amount);\n\n        // Adjust payout ratios to match the new balances...\n        payoutsOf_[_sender] -= (int256)(profitPerShare_ * _amount);\n        payoutsOf_[_recipient] += (int256)(profitPerShare_ * _amount);\n\n        // If the recipient has zero activity, they're new - COUNT THEM!!!\n        if (\n            accountOf_[_recipient].deposited == 0 &&\n            accountOf_[_recipient].receivedShares == 0\n        ) {\n            users += 1;\n        }\n        // Update stats...\n        accountOf_[_sender].xTransferredShares += 1;\n        accountOf_[_sender].transferredShares += _amount;\n        accountOf_[_recipient].receivedShares += _amount;\n        accountOf_[_recipient].xReceivedShares += 1;\n\n        // Add this to the Tx counter...\n        totalTxs += 1;\n\n        // Tell the network, successful function!\n        emit onTransfer(_sender, _recipient, _amount, block.timestamp);\n\n        // Update the leaderboard for sender...\n        emit onUpdate(\n            _sender,\n            accountOf_[_sender].deposited,\n            balanceOf_[_sender],\n            accountOf_[_sender].withdrawn,\n            block.timestamp\n        );\n\n        // Update the leaderboard for recipient...\n        emit onUpdate(\n            _recipient,\n            accountOf_[_recipient].deposited,\n            balanceOf_[_recipient],\n            accountOf_[_recipient].withdrawn,\n            block.timestamp\n        );\n\n        return true;\n    }\n}\n"
			},
			"contracts/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.7.4;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"contracts/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.7.4;\n\nimport \"../lib/utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n\n        /* @dev Subtracts two numbers, else returns zero */\n    function safeSub(uint a, uint b) internal pure returns (uint) {\n        if (b > a) {\n            return 0;\n        } else {\n            return a - b;\n        }\n    }\n}"
			},
			"contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			},
			"lib/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.7.4;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206b1a8e1c3037391b27a4562b7ae80dd22c2649fa38a0ba6e514f04800a8bf84464736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1a8e1c3037391b27a4562b7ae80dd22c2649fa38a0ba6e514f04800a8bf84464736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1A8E1C3037391B27A4562B7A 0xE8 0xD 0xD2 0x2C 0x26 0x49 STATICCALL CODESIZE LOG0 0xBA PUSH15 0x514F04800A8BF84464736F6C634300 SMOD DIV STOP CALLER ",
							"sourceMap": "134:7684:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1a8e1c3037391b27a4562b7ae80dd22c2649fa38a0ba6e514f04800a8bf84464736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1A8E1C3037391B27A4562B7A 0xE8 0xD 0xD2 0x2C 0x26 0x49 STATICCALL CODESIZE LOG0 0xBA PUSH15 0x514F04800A8BF84464736F6C634300 SMOD DIV STOP CALLER ",
							"sourceMap": "134:7684:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b1a8e1c3037391b27a4562b7ae80dd22c2649fa38a0ba6e514f04800a8bf84464736f6c63430007040033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DiamodSafe copy.sol": {
				"DiamondSafe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "_dripRate",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_compounded",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onCompound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_deposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensMinted",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_contributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onDonate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onDonateBNB",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_divs",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onSetFeeSplit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IERC721[]",
									"name": "oldOne",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "contract IERC721[]",
									"name": "newOne",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onSetImmunityToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "invested",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "soldTokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_liquidated",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensEarned",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_withdrawn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "onWithdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "accountOf",
							"outputs": [
								{
									"internalType": "uint256[14]",
									"name": "",
									"type": "uint256[14]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bnbReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "calculateSharesReceived",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "calculateTokensReceived",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "checkImmunity",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isImmune",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "dailyEstimate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "dividendsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "donate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dripPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dripRate",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forDivs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "jpeg",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPayout",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRebaseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myEarnings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "payoutFrequency",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFrequency",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiredBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pool",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_divs",
									"type": "uint256"
								}
							],
							"name": "setFeeSplit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721[]",
									"name": "_contract",
									"type": "address[]"
								}
							],
							"name": "setImmunityToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "tokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalClaims",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTxs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DiamodSafe copy.sol\":237:21540  contract DiamondSafe is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DiamodSafe copy.sol\":4538:5100  constructor(address _tokenAddress, uint8 _dripRate) Ownable() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Ownable.sol\":877:894  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":897:909  _msgSender() */\n  tag_7\n    /* \"contracts/Ownable.sol\":897:907  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/Ownable.sol\":897:909  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Ownable.sol\":877:909  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":928:937  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":919:925  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":919:937  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":985:994  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":952:995  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":981:982  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":952:995  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":843:1002  constructor () internal {... */\n  pop\n    /* \"contracts/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"contracts/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4656:4657  0 */\n  0x00\n    /* \"contracts/DiamodSafe copy.sol\":4631:4658  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/DiamodSafe copy.sol\":4631:4644  _tokenAddress */\n  dup3\n    /* \"contracts/DiamodSafe copy.sol\":4631:4658  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/DiamodSafe copy.sol\":4631:4695  _tokenAddress != address(0) && Address.isContract(_tokenAddress) */\n  dup1\n  iszero\n  tag_11\n  jumpi\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4662:4695  Address.isContract(_tokenAddress) */\n  tag_12\n    /* \"contracts/DiamodSafe copy.sol\":4681:4694  _tokenAddress */\n  dup3\n    /* \"contracts/DiamodSafe copy.sol\":4662:4680  Address.isContract */\n  or(tag_0_209, shl(0x20, tag_13))\n    /* \"contracts/DiamodSafe copy.sol\":4662:4695  Address.isContract(_tokenAddress) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/DiamodSafe copy.sol\":4631:4695  _tokenAddress != address(0) && Address.isContract(_tokenAddress) */\ntag_11:\n    /* \"contracts/DiamodSafe copy.sol\":4610:4736  require(... */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x494e56414c49445f414444524553530000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/DiamodSafe copy.sol\":4762:4775  _tokenAddress */\n  dup2\n    /* \"contracts/DiamodSafe copy.sol\":4747:4759  tokenAddress */\n  0x04\n  0x00\n    /* \"contracts/DiamodSafe copy.sol\":4747:4775  tokenAddress = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4807:4820  _tokenAddress */\n  dup2\n    /* \"contracts/DiamodSafe copy.sol\":4785:4797  stakingToken */\n  0x02\n  0x00\n    /* \"contracts/DiamodSafe copy.sol\":4785:4821  stakingToken = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4846:4856  msg.sender */\n  caller\n    /* \"contracts/DiamodSafe copy.sol\":4832:4843  bnbReceiver */\n  0x05\n  0x00\n    /* \"contracts/DiamodSafe copy.sol\":4832:4856  bnbReceiver = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4947:4956  _dripRate */\n  dup1\n    /* \"contracts/DiamodSafe copy.sol\":4936:4944  dripRate */\n  0x0d\n  0x00\n    /* \"contracts/DiamodSafe copy.sol\":4936:4956  dripRate = _dripRate */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4980:4995  block.timestamp */\n  timestamp\n    /* \"contracts/DiamodSafe copy.sol\":4966:4976  lastPayout */\n  0x09\n    /* \"contracts/DiamodSafe copy.sol\":4966:4996  lastPayout = (block.timestamp) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":5041:5042  8 */\n  0x08\n    /* \"contracts/DiamodSafe copy.sol\":5031:5038  forPool */\n  0x0e\n    /* \"contracts/DiamodSafe copy.sol\":5031:5042  forPool = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":5062:5063  2 */\n  0x02\n    /* \"contracts/DiamodSafe copy.sol\":5052:5059  forDivs */\n  0x0f\n    /* \"contracts/DiamodSafe copy.sol\":5052:5063  forDivs = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":5092:5093  1 */\n  0x01\n    /* \"contracts/DiamodSafe copy.sol\":5074:5089  requiredBalance */\n  0x03\n    /* \"contracts/DiamodSafe copy.sol\":5074:5093  requiredBalance = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":4538:5100  constructor(address _tokenAddress, uint8 _dripRate) Ownable() {... */\n  pop\n  pop\n    /* \"contracts/DiamodSafe copy.sol\":237:21540  contract DiamondSafe is Ownable, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_8:\n    /* \"contracts/Context.sol\":651:666  address payable */\n  0x00\n    /* \"contracts/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_13:\n    /* \"contracts/Address.sol\":786:790  bool */\n  0x00\n    /* \"contracts/Address.sol\":989:1001  uint256 size */\n  dup1\n    /* \"contracts/Address.sol\":1098:1105  account */\n  dup3\n    /* \"contracts/Address.sol\":1086:1106  extcodesize(account) */\n  extcodesize\n    /* \"contracts/Address.sol\":1078:1106  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"contracts/Address.sol\":1131:1132  0 */\n  0x00\n    /* \"contracts/Address.sol\":1124:1128  size */\n  dup2\n    /* \"contracts/Address.sol\":1124:1132  size > 0 */\n  gt\n    /* \"contracts/Address.sol\":1117:1132  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/DiamodSafe copy.sol\":237:21540  contract DiamondSafe is Ownable, ReentrancyGuard {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DiamodSafe copy.sol\":237:21540  contract DiamondSafe is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd7c3771d\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf69e2046\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf6db0da0\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xfbaf1bbd\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xffaad6a5\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xffe6bbd8\n      eq\n      tag_45\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0xd7c3771d\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe02e1e9c\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xeedc966a\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf14faf6f\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2020275\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0xad7a672f\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xad7a672f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xaecb6d28\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb03cf5a7\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb9db102a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd3261592\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x949e8acd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa01496de\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x4b750334\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x7d882097\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x7d882097\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7e6335c7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8086b8ba\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x81fce645\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8620410b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x89375abf\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x4b750334\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x537a39bb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x1f38b9cd\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x1f38b9cd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36599ead\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x41c61383\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x65318b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08560ace\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10d0ffdd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1924063e\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/DiamodSafe copy.sol\":5269:5310  Address.sendValue(bnbReceiver, msg.value) */\n      tag_55\n        /* \"contracts/DiamodSafe copy.sol\":5287:5298  bnbReceiver */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":5300:5309  msg.value */\n      callvalue\n        /* \"contracts/DiamodSafe copy.sol\":5269:5286  Address.sendValue */\n      tag_56\n        /* \"contracts/DiamodSafe copy.sol\":5269:5310  Address.sendValue(bnbReceiver, msg.value) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/DiamodSafe copy.sol\":5337:5347  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":5325:5376  onDonateBNB(msg.sender, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3c2bd1b3f5ca07afb09fbee41ac43da2b98d9c2e9832673052e546bd1d4c091d\n        /* \"contracts/DiamodSafe copy.sol\":5349:5358  msg.value */\n      callvalue\n        /* \"contracts/DiamodSafe copy.sol\":5360:5375  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":5325:5376  onDonateBNB(msg.sender, msg.value, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":237:21540  contract DiamondSafe is Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DiamodSafe copy.sol\":11046:11286  function dividendsOf(address _user) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":587:617  uint256 public requiredBalance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":12137:12482  function calculateTokensReceived(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":10945:11040  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1701:1730  uint256 public lastRebaseTime */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1495:1514  uint public forDivs */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":8129:9654  function withdraw(uint256 _amount) public onlyHolders {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/DiamodSafe copy.sol\":10024:10391  function checkImmunity(address _user) public view returns (bool isImmune) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1102:1125  uint public totalClaims */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":7217:8107  function harvest() public onlyEarners {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/DiamodSafe copy.sol\":11292:11558  function sellPrice() public pure  returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":877:897  uint public totalTxs */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":10603:10708  function balanceOf(address _user) public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1710:1855  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/DiamodSafe copy.sol\":394:420  IERC20 public stakingToken */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1131:1156  uint public totalDeposits */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":13496:13906  function setFeeSplit(... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":12488:13085  function accountOf(address _user) public view returns (uint256[14] memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      mul(0x20, 0x0e)\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_118:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_118)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1611:1662  uint256 public constant payoutFrequency = 2 seconds */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":11564:11828  function buyPrice() public pure returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1556:1605  uint256 public constant rebaseFrequency = 6 hours */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1078:1163  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":10397:10492  function myTokens() public view returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":699:726  address public tokenAddress */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1470:1489  uint public forPool */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":9676:9835  function transfer(... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":10824:10939  function totalBalance() public view returns (uint256) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1213:1240  uint public dripPoolBalance */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":772:793  IERC721[] public jpeg */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_155\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":6126:6236  function deposit(uint _amount) public returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_159\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":975:997  uint public lastPayout */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":1246:1267  uint8 public dripRate */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":732:766  address payable public bnbReceiver */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":11834:12131  function calculateSharesReceived(... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_172\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":10714:10818  function tokenBalance(address _user) public view returns (uint256) {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_176\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":5529:6105  function donate(uint _amount) public returns (uint256) {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_178\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_180\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":854:871  uint public users */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":2004:2244  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_185\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_187\n      jump\t// in\n    tag_185:\n      stop\n        /* \"contracts/DiamodSafe copy.sol\":7123:7196  function compound() public onlyEarners {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_189\n      tag_190\n      jump\t// in\n    tag_189:\n      stop\n        /* \"contracts/DiamodSafe copy.sol\":13968:14492  function setImmunityToken(... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_192\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_197\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":13091:13374  function dailyEstimate(address _user) public view returns (uint256) {... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_199\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_201\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":6259:7101  function depositTo(address _user, uint _amount) public returns (uint256) {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_203\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_205\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiamodSafe copy.sol\":10498:10597  function myEarnings() public view returns (uint256) {... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Address.sol\":2056:2447  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_56:\n        /* \"contracts/Address.sol\":2170:2176  amount */\n      dup1\n        /* \"contracts/Address.sol\":2145:2166  address(this).balance */\n      selfbalance\n        /* \"contracts/Address.sol\":2145:2176  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"contracts/Address.sol\":2137:2210  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/Address.sol\":2299:2311  bool success */\n      0x00\n        /* \"contracts/Address.sol\":2317:2326  recipient */\n      dup3\n        /* \"contracts/Address.sol\":2317:2331  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Address.sol\":2340:2346  amount */\n      dup3\n        /* \"contracts/Address.sol\":2317:2352  recipient.call{ value: amount }(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_214\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_213)\n    tag_214:\n      0x60\n      swap2\n      pop\n    tag_213:\n      pop\n        /* \"contracts/Address.sol\":2298:2352  (bool success, ) = recipient.call{ value: amount }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Address.sol\":2370:2377  success */\n      dup1\n        /* \"contracts/Address.sol\":2362:2440  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/Address.sol\":2056:2447  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":11046:11286  function dividendsOf(address _user) public view returns (uint256) {... */\n    tag_60:\n        /* \"contracts/DiamodSafe copy.sol\":11103:11110  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":1395:1402  2 ** 64 */\n      0x010000000000000000\n        /* \"contracts/DiamodSafe copy.sol\":11236:11246  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":11236:11253  payoutsOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11247:11252  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":11236:11253  payoutsOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":11195:11205  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":11195:11212  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11206:11211  _user */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":11195:11212  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":11177:11192  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":11177:11212  profitPerShare_ * balanceOf_[_user] */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":11168:11253  (int256)(profitPerShare_ * balanceOf_[_user]) -... */\n      sub\n        /* \"contracts/DiamodSafe copy.sol\":11141:11279  (uint256)(... */\n      dup2\n      tag_217\n      jumpi\n      invalid\n    tag_217:\n      div\n        /* \"contracts/DiamodSafe copy.sol\":11122:11279  return... */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11046:11286  function dividendsOf(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":587:617  uint256 public requiredBalance */\n    tag_63:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":12137:12482  function calculateTokensReceived(... */\n    tag_67:\n        /* \"contracts/DiamodSafe copy.sol\":12222:12229  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12260:12278  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":12249:12256  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":12249:12278  _amount <= currentTotalStaked */\n      gt\n      iszero\n        /* \"contracts/DiamodSafe copy.sol\":12241:12279  require(_amount <= currentTotalStaked) */\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/DiamodSafe copy.sol\":12289:12304  uint256 _tokens */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12307:12314  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":12289:12314  uint256 _tokens = _amount */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12324:12339  uint256 _divies */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12342:12391  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      tag_220\n        /* \"contracts/DiamodSafe copy.sol\":12355:12385  SafeMath.mul(_tokens, divsFee) */\n      tag_221\n        /* \"contracts/DiamodSafe copy.sol\":12368:12375  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":1349:1351  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":12355:12385  SafeMath.mul(_tokens, divsFee) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":12355:12367  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe copy.sol\":12355:12385  SafeMath.mul(_tokens, divsFee) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/DiamodSafe copy.sol\":12387:12390  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":12342:12354  SafeMath.div */\n      tag_223\n        /* \"contracts/DiamodSafe copy.sol\":12342:12391  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/DiamodSafe copy.sol\":12324:12391  uint256 _divies = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12401:12417  uint256 _remains */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12420:12450  SafeMath.sub(_tokens, _divies) */\n      tag_224\n        /* \"contracts/DiamodSafe copy.sol\":12433:12440  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12442:12449  _divies */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12420:12432  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":12420:12450  SafeMath.sub(_tokens, _divies) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/DiamodSafe copy.sol\":12401:12450  uint256 _remains = SafeMath.sub(_tokens, _divies) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12467:12475  _remains */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":12460:12475  return _remains */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12137:12482  function calculateTokensReceived(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10945:11040  function totalSupply() public view returns (uint256) {... */\n    tag_70:\n        /* \"contracts/DiamodSafe copy.sol\":10989:10996  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11015:11033  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":11008:11033  return currentTotalStaked */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10945:11040  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1701:1730  uint256 public lastRebaseTime */\n    tag_73:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1495:1514  uint public forDivs */\n    tag_76:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":8129:9654  function withdraw(uint256 _amount) public onlyHolders {... */\n    tag_80:\n        /* \"contracts/DiamodSafe copy.sol\":2106:2107  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":2093:2103  myTokens() */\n      tag_228\n        /* \"contracts/DiamodSafe copy.sol\":2093:2101  myTokens */\n      tag_135\n        /* \"contracts/DiamodSafe copy.sol\":2093:2103  myTokens() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/DiamodSafe copy.sol\":2093:2107  myTokens() > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":2085:2108  require(myTokens() > 0) */\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n        /* \"contracts/DiamodSafe copy.sol\":8193:8206  address _user */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8209:8219  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":8193:8219  address _user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8248:8258  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":8248:8265  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8259:8264  _user */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":8248:8265  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":8237:8244  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":8237:8265  _amount <= balanceOf_[_user] */\n      gt\n      iszero\n        /* \"contracts/DiamodSafe copy.sol\":8229:8266  require(_amount <= balanceOf_[_user]) */\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/DiamodSafe copy.sol\":8277:8304  uint256 _undividedDividends */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8340:8343  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":8307:8337  SafeMath.mul(_amount, divsFee) */\n      tag_232\n        /* \"contracts/DiamodSafe copy.sol\":8320:8327  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":1349:1351  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":8307:8337  SafeMath.mul(_amount, divsFee) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":8307:8319  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe copy.sol\":8307:8337  SafeMath.mul(_amount, divsFee) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/DiamodSafe copy.sol\":8307:8343  SafeMath.mul(_amount, divsFee) / 100 */\n      dup2\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      div\n        /* \"contracts/DiamodSafe copy.sol\":8277:8343  uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8370:8383  bool isImmune */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8386:8411  checkImmunity(msg.sender) */\n      tag_234\n        /* \"contracts/DiamodSafe copy.sol\":8400:8410  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":8386:8399  checkImmunity */\n      tag_84\n        /* \"contracts/DiamodSafe copy.sol\":8386:8411  checkImmunity(msg.sender) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/DiamodSafe copy.sol\":8370:8411  bool isImmune = checkImmunity(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8451:8459  isImmune */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":8447:8576  if (isImmune) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":8559:8560  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8537:8560  _undividedDividends = 0 */\n      swap2\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8447:8576  if (isImmune) {... */\n    tag_235:\n        /* \"contracts/DiamodSafe copy.sol\":8640:8661  uint256  _taxedTokens */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8664:8706  SafeMath.sub(_amount, _undividedDividends) */\n      tag_236\n        /* \"contracts/DiamodSafe copy.sol\":8677:8684  _amount */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":8686:8705  _undividedDividends */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":8664:8676  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":8664:8706  SafeMath.sub(_amount, _undividedDividends) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/DiamodSafe copy.sol\":8640:8706  uint256  _taxedTokens = SafeMath.sub(_amount, _undividedDividends) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8737:8778  SafeMath.sub(currentTotalStaked, _amount) */\n      tag_237\n        /* \"contracts/DiamodSafe copy.sol\":8750:8768  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":8770:8777  _amount */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":8737:8749  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":8737:8778  SafeMath.sub(currentTotalStaked, _amount) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/DiamodSafe copy.sol\":8716:8734  currentTotalStaked */\n      0x11\n        /* \"contracts/DiamodSafe copy.sol\":8716:8778  currentTotalStaked = SafeMath.sub(currentTotalStaked, _amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8808:8848  SafeMath.sub(balanceOf_[_user], _amount) */\n      tag_238\n        /* \"contracts/DiamodSafe copy.sol\":8821:8831  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":8821:8838  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8832:8837  _user */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":8821:8838  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":8840:8847  _amount */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":8808:8820  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":8808:8848  SafeMath.sub(balanceOf_[_user], _amount) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/DiamodSafe copy.sol\":8788:8798  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":8788:8805  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":8799:8804  _user */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":8788:8805  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":8788:8848  balanceOf_[_user] = SafeMath.sub(balanceOf_[_user], _amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8930:8952  int256 _updatedPayouts */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":1395:1402  2 ** 64 */\n      0x010000000000000000\n        /* \"contracts/DiamodSafe copy.sol\":9006:9018  _taxedTokens */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":9006:9030  _taxedTokens * magnitude */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":8995:9002  _amount */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":8977:8992  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":8977:9002  profitPerShare_ * _amount */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":8977:9031  profitPerShare_ * _amount + (_taxedTokens * magnitude) */\n      add\n        /* \"contracts/DiamodSafe copy.sol\":8930:9041  int256 _updatedPayouts = (int256)(... */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":9072:9087  _updatedPayouts */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":9051:9061  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":9051:9068  payoutsOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":9062:9067  _user */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":9051:9068  payoutsOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":9051:9087  payoutsOf_[_user] -= _updatedPayouts */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":9168:9201  allocateFees(_undividedDividends) */\n      tag_239\n        /* \"contracts/DiamodSafe copy.sol\":9181:9200  _undividedDividends */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":9168:9180  allocateFees */\n      tag_240\n        /* \"contracts/DiamodSafe copy.sol\":9168:9201  allocateFees(_undividedDividends) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/DiamodSafe copy.sol\":9284:9289  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":9273:9330  onWithdraw(_user, _amount, _taxedTokens, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90ebb005d68efee044927e1e77e1fd0cecc508368aa72c39250a787eed5f0a70\n        /* \"contracts/DiamodSafe copy.sol\":9291:9298  _amount */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":9300:9312  _taxedTokens */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":9314:9329  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":9273:9330  onWithdraw(_user, _amount, _taxedTokens, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":9405:9410  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":9383:9562  onUpdate(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177\n        /* \"contracts/DiamodSafe copy.sol\":9424:9434  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":9424:9441  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":9435:9440  _user */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":9424:9441  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":9424:9451  accountOf_[_user].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":9465:9475  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":9465:9482  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":9476:9481  _user */\n      dup10\n        /* \"contracts/DiamodSafe copy.sol\":9465:9482  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":9496:9506  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":9496:9513  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":9507:9512  _user */\n      dup11\n        /* \"contracts/DiamodSafe copy.sol\":9496:9513  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":9496:9523  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":9537:9552  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":9383:9562  onUpdate(... */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":9631:9643  distribute() */\n      tag_241\n        /* \"contracts/DiamodSafe copy.sol\":9631:9641  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe copy.sol\":9631:9643  distribute() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/DiamodSafe copy.sol\":2118:2119  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":8129:9654  function withdraw(uint256 _amount) public onlyHolders {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10024:10391  function checkImmunity(address _user) public view returns (bool isImmune) {... */\n    tag_84:\n        /* \"contracts/DiamodSafe copy.sol\":10083:10096  bool isImmune */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10108:10117  uint256 x */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":10120:10121  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10108:10121  uint256 x = 0 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10131:10148  IERC721 jpegTest1 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10162:10168  uint i */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":10170:10171  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10162:10171  uint i =0 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10158:10293  for(uint i =0; i < jpeg.length; i++){... */\n    tag_244:\n        /* \"contracts/DiamodSafe copy.sol\":10177:10181  jpeg */\n      0x06\n        /* \"contracts/DiamodSafe copy.sol\":10177:10188  jpeg.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10173:10174  i */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":10173:10188  i < jpeg.length */\n      lt\n        /* \"contracts/DiamodSafe copy.sol\":10158:10293  for(uint i =0; i < jpeg.length; i++){... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":10228:10232  jpeg */\n      0x06\n        /* \"contracts/DiamodSafe copy.sol\":10233:10234  i */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":10228:10235  jpeg[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":10208:10236  jpegTest1 = IERC721(jpeg[i]) */\n      swap2\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10256:10265  jpegTest1 */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":10256:10275  jpegTest1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DiamodSafe copy.sol\":10276:10281  _user */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":10256:10282  jpegTest1.balanceOf(_user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10251:10282  x += jpegTest1.balanceOf(_user) */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10190:10193  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10158:10293  for(uint i =0; i < jpeg.length; i++){... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10310:10325  requiredBalance */\n      sload(0x03)\n        /* \"contracts/DiamodSafe copy.sol\":10305:10306  x */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":10305:10325  x >= requiredBalance */\n      lt\n        /* \"contracts/DiamodSafe copy.sol\":10301:10363  if (x >= requiredBalance) {... */\n      tag_253\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":10348:10352  true */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":10341:10352  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_243)\n        /* \"contracts/DiamodSafe copy.sol\":10301:10363  if (x >= requiredBalance) {... */\n    tag_253:\n        /* \"contracts/DiamodSafe copy.sol\":10379:10384  false */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10372:10384  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10024:10391  function checkImmunity(address _user) public view returns (bool isImmune) {... */\n    tag_243:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1102:1125  uint public totalClaims */\n    tag_87:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":7217:8107  function harvest() public onlyEarners {... */\n    tag_90:\n        /* \"contracts/DiamodSafe copy.sol\":2241:2242  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":2226:2238  myEarnings() */\n      tag_255\n        /* \"contracts/DiamodSafe copy.sol\":2226:2236  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe copy.sol\":2226:2238  myEarnings() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/DiamodSafe copy.sol\":2226:2242  myEarnings() > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":2218:2243  require(myEarnings() > 0) */\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n        /* \"contracts/DiamodSafe copy.sol\":7265:7278  address _user */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7281:7291  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":7265:7291  address _user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7301:7319  uint256 _dividends */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7322:7334  myEarnings() */\n      tag_258\n        /* \"contracts/DiamodSafe copy.sol\":7322:7332  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe copy.sol\":7322:7334  myEarnings() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/DiamodSafe copy.sol\":7301:7334  uint256 _dividends = myEarnings() */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":1395:1402  2 ** 64 */\n      0x010000000000000000\n        /* \"contracts/DiamodSafe copy.sol\":7458:7468  _dividends */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":7458:7480  _dividends * magnitude */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":7428:7438  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":7428:7445  payoutsOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7439:7444  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":7428:7445  payoutsOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7428:7481  payoutsOf_[_user] += (int256)(_dividends * magnitude) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7545:7557  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":7545:7566  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/DiamodSafe copy.sol\":7567:7572  _user */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":7574:7584  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":7545:7585  stakingToken.transfer(_user, _dividends) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7690:7777  SafeMath.add(... */\n      tag_263\n        /* \"contracts/DiamodSafe copy.sol\":7716:7726  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":7716:7733  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7727:7732  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":7716:7733  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":7716:7743  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":7757:7767  _dividends */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":7690:7702  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":7690:7777  SafeMath.add(... */\n      jump\t// in\n    tag_263:\n        /* \"contracts/DiamodSafe copy.sol\":7660:7670  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":7660:7677  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7671:7676  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":7660:7677  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":7660:7687  accountOf_[_user].withdrawn */\n      0x01\n      add\n        /* \"contracts/DiamodSafe copy.sol\":7660:7777  accountOf_[_user].withdrawn = SafeMath.add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7819:7820  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":7787:7797  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":7787:7804  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7798:7803  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":7787:7804  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":7787:7815  accountOf_[_user].xWithdrawn */\n      0x0b\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7787:7820  accountOf_[_user].xWithdrawn += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7889:7890  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":7877:7885  totalTxs */\n      0x08\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7877:7890  totalTxs += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7915:7925  _dividends */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":7900:7911  totalClaims */\n      0x0a\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":7900:7925  totalClaims += _dividends */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7983:7988  _user */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":7972:8018  onWithdraw(_user, _dividends, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1b091269e929df55d64d6ea7e9cadbe4fb38dce5ccdc995767bc515030dbfbbf\n        /* \"contracts/DiamodSafe copy.sol\":7990:8000  _dividends */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":8002:8017  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":7972:8018  onWithdraw(_user, _dividends, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":8088:8100  distribute() */\n      tag_265\n        /* \"contracts/DiamodSafe copy.sol\":8088:8098  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe copy.sol\":8088:8100  distribute() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/DiamodSafe copy.sol\":2253:2254  _ */\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7217:8107  function harvest() public onlyEarners {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":11292:11558  function sellPrice() public pure  returns (uint256) {... */\n    tag_93:\n        /* \"contracts/DiamodSafe copy.sol\":11335:11342  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11354:11369  uint256 _tokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":11372:11376  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DiamodSafe copy.sol\":11354:11376  uint256 _tokens = 1e18 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11386:11404  uint256 _dividends */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11407:11456  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      tag_267\n        /* \"contracts/DiamodSafe copy.sol\":11420:11450  SafeMath.mul(_tokens, divsFee) */\n      tag_268\n        /* \"contracts/DiamodSafe copy.sol\":11433:11440  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":1349:1351  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":11420:11450  SafeMath.mul(_tokens, divsFee) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":11420:11432  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe copy.sol\":11420:11450  SafeMath.mul(_tokens, divsFee) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/DiamodSafe copy.sol\":11452:11455  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":11407:11419  SafeMath.div */\n      tag_223\n        /* \"contracts/DiamodSafe copy.sol\":11407:11456  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/DiamodSafe copy.sol\":11386:11456  uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11466:11486  uint256 _taxedTokens */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11489:11522  SafeMath.sub(_tokens, _dividends) */\n      tag_269\n        /* \"contracts/DiamodSafe copy.sol\":11502:11509  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":11511:11521  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":11489:11501  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":11489:11522  SafeMath.sub(_tokens, _dividends) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/DiamodSafe copy.sol\":11466:11522  uint256 _taxedTokens = SafeMath.sub(_tokens, _dividends) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11539:11551  _taxedTokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":11532:11551  return _taxedTokens */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11292:11558  function sellPrice() public pure  returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":877:897  uint public totalTxs */\n    tag_96:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10603:10708  function balanceOf(address _user) public view returns (uint256) {... */\n    tag_100:\n        /* \"contracts/DiamodSafe copy.sol\":10658:10665  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10684:10694  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":10684:10701  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10695:10700  _user */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":10684:10701  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":10677:10701  return balanceOf_[_user] */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10603:10708  function balanceOf(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1710:1855  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_272\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_274\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_274:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/Ownable.sol\":1816:1817  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1779:1819  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1800:1806  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1779:1819  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1846:1847  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1829:1835  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1829:1848  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1710:1855  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":394:420  IERC20 public stakingToken */\n    tag_106:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1131:1156  uint public totalDeposits */\n    tag_109:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":13496:13906  function setFeeSplit(... */\n    tag_113:\n        /* \"contracts/DiamodSafe copy.sol\":13595:13608  bool _success */\n      0x00\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_278\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_279\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/DiamodSafe copy.sol\":13648:13650  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":13628:13644  _pool.add(_divs) */\n      tag_282\n        /* \"contracts/DiamodSafe copy.sol\":13638:13643  _divs */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":13628:13633  _pool */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":13628:13637  _pool.add */\n      tag_264\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":13628:13644  _pool.add(_divs) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/DiamodSafe copy.sol\":13628:13650  _pool.add(_divs) == 10 */\n      eq\n        /* \"contracts/DiamodSafe copy.sol\":13620:13684  require(_pool.add(_divs) == 10, \"TEN_PORTIONS_REQUIRE_DIVISION\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x54454e5f504f5254494f4e535f524551554952455f4449564953494f4e000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"contracts/DiamodSafe copy.sol\":13738:13743  _pool */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":13728:13735  forPool */\n      0x0e\n        /* \"contracts/DiamodSafe copy.sol\":13728:13743  forPool = _pool */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13763:13768  _divs */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":13753:13760  forDivs */\n      0x0f\n        /* \"contracts/DiamodSafe copy.sol\":13753:13768  forDivs = _divs */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13834:13878  onSetFeeSplit(_pool, _divs, block.timestamp) */\n      0x677017fa3a0fe0f50a95e6024c5b688f2b14a4696c4a897c459715cabfc1c03a\n        /* \"contracts/DiamodSafe copy.sol\":13848:13853  _pool */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":13855:13860  _divs */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":13862:13877  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":13834:13878  onSetFeeSplit(_pool, _divs, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiamodSafe copy.sol\":13895:13899  true */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":13888:13899  return true */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13496:13906  function setFeeSplit(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":12488:13085  function accountOf(address _user) public view returns (uint256[14] memory) {... */\n    tag_117:\n        /* \"contracts/DiamodSafe copy.sol\":12543:12561  uint256[14] memory */\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/DiamodSafe copy.sol\":12573:12589  Account memory a */\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"contracts/DiamodSafe copy.sol\":12592:12602  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":12592:12609  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12603:12608  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":12592:12609  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":12573:12609  Account memory a = accountOf_[_user] */\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x08\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x09\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x0a\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x0b\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x0c\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x0d\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12619:12650  uint256[14] memory accountArray */\n      tag_289\n      tag_285\n      jump\t// in\n    tag_289:\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":12667:12668  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12667:12678  a.deposited */\n      0x00\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12692:12693  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12692:12703  a.withdrawn */\n      0x20\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12717:12718  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12717:12727  a.rewarded */\n      0x60\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12741:12742  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12741:12753  a.compounded */\n      0x40\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12767:12768  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12767:12780  a.contributed */\n      0x80\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12794:12795  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12794:12813  a.transferredShares */\n      0xa0\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12827:12828  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12827:12843  a.receivedShares */\n      0xc0\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12857:12858  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12857:12868  a.xInvested */\n      0xe0\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12882:12883  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12882:12893  a.xRewarded */\n      0x0120\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12907:12908  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12907:12921  a.xContributed */\n      0x0140\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12935:12936  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12935:12947  a.xWithdrawn */\n      0x0160\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12961:12962  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12961:12981  a.xTransferredShares */\n      0x0180\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":12995:12996  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12995:13012  a.xReceivedShares */\n      0x01a0\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DiamodSafe copy.sol\":13026:13027  a */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":13026:13039  a.xCompounded */\n      0x0100\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":12619:13049  uint256[14] memory accountArray = [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13066:13078  accountArray */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":13059:13078  return accountArray */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12488:13085  function accountOf(address _user) public view returns (uint256[14] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1611:1662  uint256 public constant payoutFrequency = 2 seconds */\n    tag_123:\n        /* \"contracts/DiamodSafe copy.sol\":1653:1662  2 seconds */\n      0x02\n        /* \"contracts/DiamodSafe copy.sol\":1611:1662  uint256 public constant payoutFrequency = 2 seconds */\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":11564:11828  function buyPrice() public pure returns (uint256) {... */\n    tag_126:\n        /* \"contracts/DiamodSafe copy.sol\":11605:11612  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11624:11639  uint256 _tokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":11642:11646  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DiamodSafe copy.sol\":11624:11646  uint256 _tokens = 1e18 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11656:11674  uint256 _dividends */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11677:11726  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      tag_291\n        /* \"contracts/DiamodSafe copy.sol\":11690:11720  SafeMath.mul(_tokens, divsFee) */\n      tag_292\n        /* \"contracts/DiamodSafe copy.sol\":11703:11710  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":1349:1351  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":11690:11720  SafeMath.mul(_tokens, divsFee) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":11690:11702  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe copy.sol\":11690:11720  SafeMath.mul(_tokens, divsFee) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/DiamodSafe copy.sol\":11722:11725  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":11677:11689  SafeMath.div */\n      tag_223\n        /* \"contracts/DiamodSafe copy.sol\":11677:11726  SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/DiamodSafe copy.sol\":11656:11726  uint256 _dividends = SafeMath.div(SafeMath.mul(_tokens, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11736:11756  uint256 _taxedTokens */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11759:11792  SafeMath.add(_tokens, _dividends) */\n      tag_293\n        /* \"contracts/DiamodSafe copy.sol\":11772:11779  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":11781:11791  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":11759:11771  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":11759:11792  SafeMath.add(_tokens, _dividends) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/DiamodSafe copy.sol\":11736:11792  uint256 _taxedTokens = SafeMath.add(_tokens, _dividends) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11809:11821  _taxedTokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":11802:11821  return _taxedTokens */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11564:11828  function buyPrice() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1556:1605  uint256 public constant rebaseFrequency = 6 hours */\n    tag_129:\n        /* \"contracts/DiamodSafe copy.sol\":1598:1605  6 hours */\n      0x5460\n        /* \"contracts/DiamodSafe copy.sol\":1556:1605  uint256 public constant rebaseFrequency = 6 hours */\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1078:1163  function owner() public view virtual returns (address) {... */\n    tag_132:\n        /* \"contracts/Ownable.sol\":1124:1131  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1150:1156  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1143:1156  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1078:1163  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10397:10492  function myTokens() public view returns (uint256) {... */\n    tag_135:\n        /* \"contracts/DiamodSafe copy.sol\":10438:10445  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10464:10485  balanceOf(msg.sender) */\n      tag_296\n        /* \"contracts/DiamodSafe copy.sol\":10474:10484  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":10464:10473  balanceOf */\n      tag_100\n        /* \"contracts/DiamodSafe copy.sol\":10464:10485  balanceOf(msg.sender) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/DiamodSafe copy.sol\":10457:10485  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10397:10492  function myTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":699:726  address public tokenAddress */\n    tag_138:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1470:1489  uint public forPool */\n    tag_141:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":9676:9835  function transfer(... */\n    tag_145:\n        /* \"contracts/DiamodSafe copy.sol\":9776:9780  bool */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":2106:2107  0 */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":2093:2103  myTokens() */\n      tag_298\n        /* \"contracts/DiamodSafe copy.sol\":2093:2101  myTokens */\n      tag_135\n        /* \"contracts/DiamodSafe copy.sol\":2093:2103  myTokens() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/DiamodSafe copy.sol\":2093:2107  myTokens() > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":2085:2108  require(myTokens() > 0) */\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n        /* \"contracts/DiamodSafe copy.sol\":9799:9828  _transferTokens(_to, _amount) */\n      tag_301\n        /* \"contracts/DiamodSafe copy.sol\":9815:9818  _to */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":9820:9827  _amount */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":9799:9814  _transferTokens */\n      tag_302\n        /* \"contracts/DiamodSafe copy.sol\":9799:9828  _transferTokens(_to, _amount) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/DiamodSafe copy.sol\":9792:9828  return _transferTokens(_to, _amount) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":9676:9835  function transfer(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10824:10939  function totalBalance() public view returns (uint256) {... */\n    tag_148:\n        /* \"contracts/DiamodSafe copy.sol\":10869:10876  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10895:10907  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":10895:10917  stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DiamodSafe copy.sol\":10926:10930  this */\n      address\n        /* \"contracts/DiamodSafe copy.sol\":10895:10932  stakingToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10888:10932  return stakingToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10824:10939  function totalBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1213:1240  uint public dripPoolBalance */\n    tag_151:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":772:793  IERC721[] public jpeg */\n    tag_155:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":6126:6236  function deposit(uint _amount) public returns (uint256) {... */\n    tag_159:\n        /* \"contracts/DiamodSafe copy.sol\":6173:6180  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6199:6229  depositTo(msg.sender, _amount) */\n      tag_311\n        /* \"contracts/DiamodSafe copy.sol\":6209:6219  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":6221:6228  _amount */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":6199:6208  depositTo */\n      tag_205\n        /* \"contracts/DiamodSafe copy.sol\":6199:6229  depositTo(msg.sender, _amount) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/DiamodSafe copy.sol\":6192:6229  return depositTo(msg.sender, _amount) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":6126:6236  function deposit(uint _amount) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":975:997  uint public lastPayout */\n    tag_162:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":1246:1267  uint8 public dripRate */\n    tag_165:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":732:766  address payable public bnbReceiver */\n    tag_168:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":11834:12131  function calculateSharesReceived(... */\n    tag_172:\n        /* \"contracts/DiamodSafe copy.sol\":11919:11926  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":11938:11953  uint256 _divies */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":11956:12005  SafeMath.div(SafeMath.mul(_amount, divsFee), 100) */\n      tag_313\n        /* \"contracts/DiamodSafe copy.sol\":11969:11999  SafeMath.mul(_amount, divsFee) */\n      tag_314\n        /* \"contracts/DiamodSafe copy.sol\":11982:11989  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":1349:1351  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":11969:11999  SafeMath.mul(_amount, divsFee) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":11969:11981  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe copy.sol\":11969:11999  SafeMath.mul(_amount, divsFee) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/DiamodSafe copy.sol\":12001:12004  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":11956:11968  SafeMath.div */\n      tag_223\n        /* \"contracts/DiamodSafe copy.sol\":11956:12005  SafeMath.div(SafeMath.mul(_amount, divsFee), 100) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/DiamodSafe copy.sol\":11938:12005  uint256 _divies = SafeMath.div(SafeMath.mul(_amount, divsFee), 100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12015:12031  uint256 _remains */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12034:12064  SafeMath.sub(_amount, _divies) */\n      tag_315\n        /* \"contracts/DiamodSafe copy.sol\":12047:12054  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":12056:12063  _divies */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":12034:12046  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":12034:12064  SafeMath.sub(_amount, _divies) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/DiamodSafe copy.sol\":12015:12064  uint256 _remains = SafeMath.sub(_amount, _divies) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12074:12089  uint256 _result */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":12092:12100  _remains */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":12074:12100  uint256 _result = _remains */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":12117:12124  _result */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":12110:12124  return _result */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":11834:12131  function calculateSharesReceived(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10714:10818  function tokenBalance(address _user) public view returns (uint256) {... */\n    tag_176:\n        /* \"contracts/DiamodSafe copy.sol\":10772:10779  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10798:10803  _user */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":10798:10811  _user.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/DiamodSafe copy.sol\":10791:10811  return _user.balance */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10714:10818  function tokenBalance(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":5529:6105  function donate(uint _amount) public returns (uint256) {... */\n    tag_180:\n        /* \"contracts/DiamodSafe copy.sol\":5575:5582  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":5672:5684  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":5672:5697  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/DiamodSafe copy.sol\":5698:5708  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":5718:5722  this */\n      address\n        /* \"contracts/DiamodSafe copy.sol\":5725:5732  _amount */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":5672:5733  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_318:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_320:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_321\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_321:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":5664:5734  require(stakingToken.transferFrom(msg.sender, address(this), _amount)) */\n      tag_322\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_322:\n        /* \"contracts/DiamodSafe copy.sol\":5815:5822  _amount */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":5796:5811  dripPoolBalance */\n      0x0c\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":5796:5822  dripPoolBalance += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":5871:5872  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":5832:5842  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":5832:5854  accountOf_[msg.sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":5843:5853  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":5832:5854  accountOf_[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":5832:5867  accountOf_[msg.sender].xContributed */\n      0x0a\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":5832:5872  accountOf_[msg.sender].xContributed += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":5920:5927  _amount */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":5882:5892  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":5882:5904  accountOf_[msg.sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":5893:5903  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":5882:5904  accountOf_[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":5882:5916  accountOf_[msg.sender].contributed */\n      0x04\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":5882:5927  accountOf_[msg.sender].contributed += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":6029:6039  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":6020:6066  onDonate(msg.sender, _amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0da1788c3e861a58a47f0d46073b13c4d66efcc259714744f920d1afe7b8dee5\n        /* \"contracts/DiamodSafe copy.sol\":6041:6048  _amount */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":6050:6065  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":6020:6066  onDonate(msg.sender, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":6083:6098  dripPoolBalance */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe copy.sol\":6076:6098  return dripPoolBalance */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":5529:6105  function donate(uint _amount) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":854:871  uint public users */\n    tag_183:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2004:2244  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_187:\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_324\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_324:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_325\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_325:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_326:\n        /* \"contracts/Ownable.sol\":2112:2113  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2092:2114  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2092:2100  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2092:2114  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2084:2157  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"contracts/Ownable.sol\":2201:2209  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2172:2210  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2193:2199  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2172:2210  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2229:2237  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2220:2226  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2220:2237  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2004:2244  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":7123:7196  function compound() public onlyEarners {... */\n    tag_190:\n        /* \"contracts/DiamodSafe copy.sol\":2241:2242  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":2226:2238  myEarnings() */\n      tag_330\n        /* \"contracts/DiamodSafe copy.sol\":2226:2236  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe copy.sol\":2226:2238  myEarnings() */\n      jump\t// in\n    tag_330:\n        /* \"contracts/DiamodSafe copy.sol\":2226:2242  myEarnings() > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":2218:2243  require(myEarnings() > 0) */\n      tag_331\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_331:\n        /* \"contracts/DiamodSafe copy.sol\":7172:7189  _compoundTokens() */\n      tag_333\n        /* \"contracts/DiamodSafe copy.sol\":7172:7187  _compoundTokens */\n      tag_334\n        /* \"contracts/DiamodSafe copy.sol\":7172:7189  _compoundTokens() */\n      jump\t// in\n    tag_333:\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":7123:7196  function compound() public onlyEarners {... */\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":13968:14492  function setImmunityToken(... */\n    tag_197:\n        /* \"contracts/DiamodSafe copy.sol\":14062:14075  bool _success */\n      0x00\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      tag_336\n        /* \"contracts/Ownable.sol\":1301:1311  _msgSender */\n      tag_273\n        /* \"contracts/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_336:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      tag_337\n        /* \"contracts/Ownable.sol\":1290:1295  owner */\n      tag_132\n        /* \"contracts/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_337:\n        /* \"contracts/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_338:\n        /* \"contracts/DiamodSafe copy.sol\":14087:14093  uint i */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":14083:14249  for(uint i =0; i < jpeg.length; i++){... */\n    tag_340:\n        /* \"contracts/DiamodSafe copy.sol\":14102:14106  jpeg */\n      0x06\n        /* \"contracts/DiamodSafe copy.sol\":14102:14113  jpeg.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14098:14099  i */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":14098:14113  i < jpeg.length */\n      lt\n        /* \"contracts/DiamodSafe copy.sol\":14083:14249  for(uint i =0; i < jpeg.length; i++){... */\n      iszero\n      tag_341\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":14181:14190  _contract */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":14191:14192  i */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":14181:14193  _contract[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_343\n      jumpi\n      invalid\n    tag_343:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DiamodSafe copy.sol\":14181:14211  _contract[i].supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"contracts/DiamodSafe copy.sol\":14212:14222  0x80ac58cd */\n      0x80ac58cd\n        /* \"contracts/DiamodSafe copy.sol\":14181:14223  _contract[i].supportsInterface(0x80ac58cd) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xe0\n      shl\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_347\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_347:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14173:14238  require(_contract[i].supportsInterface(0x80ac58cd), \"NOT_ERC721\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e4f545f45524337323100000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"contracts/DiamodSafe copy.sol\":14115:14118  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14083:14249  for(uint i =0; i < jpeg.length; i++){... */\n      jump(tag_340)\n    tag_341:\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14258:14286  IERC721[] memory oldContract */\n      0x60\n        /* \"contracts/DiamodSafe copy.sol\":14289:14293  jpeg */\n      0x06\n        /* \"contracts/DiamodSafe copy.sol\":14258:14293  IERC721[] memory oldContract = jpeg */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_349\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_350:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_350\n      jumpi\n    tag_349:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14310:14319  _contract */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":14303:14307  jpeg */\n      0x06\n        /* \"contracts/DiamodSafe copy.sol\":14303:14319  jpeg = _contract */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_351\n      swap3\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14367:14377  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":14335:14464  onSetImmunityToken(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf0650831416f723858005cfeae97a2d6f5e127d1e6ae8938574d1d73e7f4727c\n        /* \"contracts/DiamodSafe copy.sol\":14391:14402  oldContract */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":14416:14425  _contract */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":14439:14454  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":14335:14464  onSetImmunityToken(... */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_353:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_355\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_353)\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_356:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_358\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_356)\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":14481:14485  true */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":14474:14485  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13968:14492  function setImmunityToken(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":13091:13374  function dailyEstimate(address _user) public view returns (uint256) {... */\n    tag_201:\n        /* \"contracts/DiamodSafe copy.sol\":13150:13157  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":13169:13182  uint256 share */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":13185:13223  dripPoolBalance.mul(dripRate).div(100) */\n      tag_360\n        /* \"contracts/DiamodSafe copy.sol\":13219:13222  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":13185:13214  dripPoolBalance.mul(dripRate) */\n      tag_361\n        /* \"contracts/DiamodSafe copy.sol\":13205:13213  dripRate */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":13185:13214  dripPoolBalance.mul(dripRate) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":13185:13200  dripPoolBalance */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe copy.sol\":13185:13204  dripPoolBalance.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":13185:13214  dripPoolBalance.mul(dripRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"contracts/DiamodSafe copy.sol\":13185:13218  dripPoolBalance.mul(dripRate).div */\n      tag_223\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":13185:13223  dripPoolBalance.mul(dripRate).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"contracts/DiamodSafe copy.sol\":13169:13223  uint256 share = dripPoolBalance.mul(dripRate).div(100) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13274:13275  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":13253:13271  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":13253:13275  currentTotalStaked > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":13252:13367  (currentTotalStaked > 0)... */\n      tag_362\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":13366:13367  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":13252:13367  (currentTotalStaked > 0)... */\n      jump(tag_363)\n    tag_362:\n        /* \"contracts/DiamodSafe copy.sol\":13295:13347  share.mul(balanceOf_[_user]).div(currentTotalStaked) */\n      tag_364\n        /* \"contracts/DiamodSafe copy.sol\":13328:13346  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":13295:13323  share.mul(balanceOf_[_user]) */\n      tag_365\n        /* \"contracts/DiamodSafe copy.sol\":13305:13315  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":13305:13322  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":13316:13321  _user */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":13305:13322  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":13295:13300  share */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":13295:13304  share.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":13295:13323  share.mul(balanceOf_[_user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"contracts/DiamodSafe copy.sol\":13295:13327  share.mul(balanceOf_[_user]).div */\n      tag_223\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":13295:13347  share.mul(balanceOf_[_user]).div(currentTotalStaked) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_364:\n        /* \"contracts/DiamodSafe copy.sol\":13252:13367  (currentTotalStaked > 0)... */\n    tag_363:\n        /* \"contracts/DiamodSafe copy.sol\":13233:13367  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":13091:13374  function dailyEstimate(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":6259:7101  function depositTo(address _user, uint _amount) public returns (uint256) {... */\n    tag_205:\n        /* \"contracts/DiamodSafe copy.sol\":6323:6330  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6420:6432  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":6420:6445  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/DiamodSafe copy.sol\":6446:6456  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":6466:6470  this */\n      address\n        /* \"contracts/DiamodSafe copy.sol\":6473:6480  _amount */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":6420:6481  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_370\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_370:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":6412:6482  require(stakingToken.transferFrom(msg.sender, address(this), _amount)) */\n      tag_371\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_371:\n        /* \"contracts/DiamodSafe copy.sol\":6561:6568  _amount */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":6544:6557  totalDeposits */\n      0x0b\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6544:6568  totalDeposits += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":6631:6642  uint amount */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6645:6675  _depositTokens(_user, _amount) */\n      tag_372\n        /* \"contracts/DiamodSafe copy.sol\":6660:6665  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":6667:6674  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":6645:6659  _depositTokens */\n      tag_373\n        /* \"contracts/DiamodSafe copy.sol\":6645:6675  _depositTokens(_user, _amount) */\n      jump\t// in\n    tag_372:\n        /* \"contracts/DiamodSafe copy.sol\":6631:6675  uint amount = _depositTokens(_user, _amount) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":6750:6755  _user */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":6728:6907  onUpdate(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177\n        /* \"contracts/DiamodSafe copy.sol\":6769:6779  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":6769:6786  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6780:6785  _user */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":6769:6786  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":6769:6796  accountOf_[_user].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":6810:6820  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":6810:6827  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6821:6826  _user */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":6810:6827  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":6841:6851  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":6841:6858  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":6852:6857  _user */\n      dup10\n        /* \"contracts/DiamodSafe copy.sol\":6841:6858  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":6841:6868  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":6882:6897  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":6728:6907  onUpdate(... */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":6982:6994  distribute() */\n      tag_374\n        /* \"contracts/DiamodSafe copy.sol\":6982:6992  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe copy.sol\":6982:6994  distribute() */\n      jump\t// in\n    tag_374:\n        /* \"contracts/DiamodSafe copy.sol\":7088:7094  amount */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":7081:7094  return amount */\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":6259:7101  function depositTo(address _user, uint _amount) public returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":10498:10597  function myEarnings() public view returns (uint256) {... */\n    tag_208:\n        /* \"contracts/DiamodSafe copy.sol\":10541:10548  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":10567:10590  dividendsOf(msg.sender) */\n      tag_376\n        /* \"contracts/DiamodSafe copy.sol\":10579:10589  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":10567:10578  dividendsOf */\n      tag_60\n        /* \"contracts/DiamodSafe copy.sol\":10567:10590  dividendsOf(msg.sender) */\n      jump\t// in\n    tag_376:\n        /* \"contracts/DiamodSafe copy.sol\":10560:10590  return dividendsOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":10498:10597  function myEarnings() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_209:\n        /* \"contracts/Address.sol\":786:790  bool */\n      0x00\n        /* \"contracts/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"contracts/Address.sol\":1098:1105  account */\n      dup3\n        /* \"contracts/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"contracts/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"contracts/Address.sol\":1124:1128  size */\n      dup2\n        /* \"contracts/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"contracts/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_222:\n        /* \"contracts/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"contracts/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_379\n      jumpi\n        /* \"contracts/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_378)\n        /* \"contracts/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_379:\n        /* \"contracts/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"contracts/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"contracts/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_380\n      jumpi\n      invalid\n    tag_380:\n      div\n        /* \"contracts/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_381:\n        /* \"contracts/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_378:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_223:\n        /* \"contracts/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"contracts/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_383:\n        /* \"contracts/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_384\n      jumpi\n      invalid\n    tag_384:\n      div\n        /* \"contracts/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_225:\n        /* \"contracts/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"contracts/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":14662:15399  function allocateFees(uint fee) private {... */\n    tag_240:\n        /* \"contracts/DiamodSafe copy.sol\":14712:14729  uint256 _onePiece */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":14732:14743  fee.div(10) */\n      tag_388\n        /* \"contracts/DiamodSafe copy.sol\":14740:14742  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":14732:14735  fee */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":14732:14739  fee.div */\n      tag_223\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":14732:14743  fee.div(10) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_388:\n        /* \"contracts/DiamodSafe copy.sol\":14712:14743  uint256 _onePiece = fee.div(10) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14754:14770  uint256 _forPool */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":14774:14796  _onePiece.mul(forPool) */\n      tag_389\n        /* \"contracts/DiamodSafe copy.sol\":14788:14795  forPool */\n      sload(0x0e)\n        /* \"contracts/DiamodSafe copy.sol\":14774:14783  _onePiece */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":14774:14787  _onePiece.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":14774:14796  _onePiece.mul(forPool) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_389:\n        /* \"contracts/DiamodSafe copy.sol\":14754:14797  uint256 _forPool = (_onePiece.mul(forPool)) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14828:14844  uint256 _forDivs */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":14848:14870  _onePiece.mul(forDivs) */\n      tag_390\n        /* \"contracts/DiamodSafe copy.sol\":14862:14869  forDivs */\n      sload(0x0f)\n        /* \"contracts/DiamodSafe copy.sol\":14848:14857  _onePiece */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":14848:14861  _onePiece.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":14848:14870  _onePiece.mul(forDivs) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_390:\n        /* \"contracts/DiamodSafe copy.sol\":14828:14871  uint256 _forDivs = (_onePiece.mul(forDivs)) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":14920:14949  dripPoolBalance.add(_forPool) */\n      tag_391\n        /* \"contracts/DiamodSafe copy.sol\":14940:14948  _forPool */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":14920:14935  dripPoolBalance */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe copy.sol\":14920:14939  dripPoolBalance.add */\n      tag_264\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":14920:14949  dripPoolBalance.add(_forPool) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"contracts/DiamodSafe copy.sol\":14902:14917  dripPoolBalance */\n      0x0c\n        /* \"contracts/DiamodSafe copy.sol\":14902:14949  dripPoolBalance = dripPoolBalance.add(_forPool) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":15049:15050  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":15028:15046  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":15028:15050  currentTotalStaked > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":15024:15393  if (currentTotalStaked > 0) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":15132:15252  SafeMath.add(... */\n      tag_393\n        /* \"contracts/DiamodSafe copy.sol\":15162:15177  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":15220:15238  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":1395:1402  2 ** 64 */\n      0x010000000000000000\n        /* \"contracts/DiamodSafe copy.sol\":15196:15204  _forDivs */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":15196:15216  _forDivs * magnitude */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":15195:15238  (_forDivs * magnitude) / currentTotalStaked */\n      dup2\n      tag_394\n      jumpi\n      invalid\n    tag_394:\n      div\n        /* \"contracts/DiamodSafe copy.sol\":15132:15144  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":15132:15252  SafeMath.add(... */\n      jump\t// in\n    tag_393:\n        /* \"contracts/DiamodSafe copy.sol\":15114:15129  profitPerShare_ */\n      0x12\n        /* \"contracts/DiamodSafe copy.sol\":15114:15252  profitPerShare_ = SafeMath.add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":15024:15393  if (currentTotalStaked > 0) {... */\n      jump(tag_395)\n    tag_392:\n        /* \"contracts/DiamodSafe copy.sol\":15374:15382  _forDivs */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":15355:15370  dripPoolBalance */\n      0x0c\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":15355:15382  dripPoolBalance += _forDivs */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":15024:15393  if (currentTotalStaked > 0) {... */\n    tag_395:\n        /* \"contracts/DiamodSafe copy.sol\":14662:15399  function allocateFees(uint fee) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":15440:16682  function distribute() private {... */\n    tag_242:\n        /* \"contracts/DiamodSafe copy.sol\":15480:15502  uint _currentTimestamp */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":15506:15521  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":15480:15522  uint _currentTimestamp = (block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":1598:1605  6 hours */\n      0x5460\n        /* \"contracts/DiamodSafe copy.sol\":15587:15628  _currentTimestamp.safeSub(lastRebaseTime) */\n      tag_397\n        /* \"contracts/DiamodSafe copy.sol\":15613:15627  lastRebaseTime */\n      sload(0x10)\n        /* \"contracts/DiamodSafe copy.sol\":15587:15604  _currentTimestamp */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":15587:15612  _currentTimestamp.safeSub */\n      tag_398\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":15587:15628  _currentTimestamp.safeSub(lastRebaseTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_397:\n        /* \"contracts/DiamodSafe copy.sol\":15587:15646  _currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":15583:15861  if (_currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":15702:15745  onRebase(totalBalance(), _currentTimestamp) */\n      0x2cfce469a63f2e9972b7f23da751e6943ed2b091c10e40b5c43b5f6105bf20ea\n        /* \"contracts/DiamodSafe copy.sol\":15711:15725  totalBalance() */\n      tag_400\n        /* \"contracts/DiamodSafe copy.sol\":15711:15723  totalBalance */\n      tag_148\n        /* \"contracts/DiamodSafe copy.sol\":15711:15725  totalBalance() */\n      jump\t// in\n    tag_400:\n        /* \"contracts/DiamodSafe copy.sol\":15727:15744  _currentTimestamp */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":15702:15745  onRebase(totalBalance(), _currentTimestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiamodSafe copy.sol\":15833:15850  _currentTimestamp */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":15816:15830  lastRebaseTime */\n      0x10\n        /* \"contracts/DiamodSafe copy.sol\":15816:15850  lastRebaseTime = _currentTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":15583:15861  if (_currentTimestamp.safeSub(lastRebaseTime) > rebaseFrequency) {... */\n    tag_399:\n        /* \"contracts/DiamodSafe copy.sol\":1653:1662  2 seconds */\n      0x02\n        /* \"contracts/DiamodSafe copy.sol\":15933:15980  SafeMath.safeSub(_currentTimestamp, lastPayout) */\n      tag_401\n        /* \"contracts/DiamodSafe copy.sol\":15950:15967  _currentTimestamp */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":15969:15979  lastPayout */\n      sload(0x09)\n        /* \"contracts/DiamodSafe copy.sol\":15933:15949  SafeMath.safeSub */\n      tag_398\n        /* \"contracts/DiamodSafe copy.sol\":15933:15980  SafeMath.safeSub(_currentTimestamp, lastPayout) */\n      jump\t// in\n    tag_401:\n        /* \"contracts/DiamodSafe copy.sol\":15933:15998  SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":15933:16036  SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency &&... */\n      dup1\n      iszero\n      tag_402\n      jumpi\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16035:16036  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":16014:16032  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":16014:16036  currentTotalStaked > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":15933:16036  SafeMath.safeSub(_currentTimestamp, lastPayout) > payoutFrequency &&... */\n    tag_402:\n        /* \"contracts/DiamodSafe copy.sol\":15916:16676  if (... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":16108:16121  uint256 share */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":16124:16206  dripPoolBalance.mul(dripRate).div(100).div(... */\n      tag_404\n        /* \"contracts/DiamodSafe copy.sol\":16184:16192  24 hours */\n      0x015180\n        /* \"contracts/DiamodSafe copy.sol\":16124:16162  dripPoolBalance.mul(dripRate).div(100) */\n      tag_405\n        /* \"contracts/DiamodSafe copy.sol\":16158:16161  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":16124:16153  dripPoolBalance.mul(dripRate) */\n      tag_406\n        /* \"contracts/DiamodSafe copy.sol\":16144:16152  dripRate */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":16124:16153  dripPoolBalance.mul(dripRate) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":16124:16139  dripPoolBalance */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe copy.sol\":16124:16143  dripPoolBalance.mul */\n      tag_222\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":16124:16153  dripPoolBalance.mul(dripRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_406:\n        /* \"contracts/DiamodSafe copy.sol\":16124:16157  dripPoolBalance.mul(dripRate).div */\n      tag_223\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":16124:16162  dripPoolBalance.mul(dripRate).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_405:\n        /* \"contracts/DiamodSafe copy.sol\":16124:16166  dripPoolBalance.mul(dripRate).div(100).div */\n      tag_223\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":16124:16206  dripPoolBalance.mul(dripRate).div(100).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_404:\n        /* \"contracts/DiamodSafe copy.sol\":16108:16206  uint256 share = dripPoolBalance.mul(dripRate).div(100).div(... */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16220:16234  uint256 profit */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":16245:16282  _currentTimestamp.safeSub(lastPayout) */\n      tag_407\n        /* \"contracts/DiamodSafe copy.sol\":16271:16281  lastPayout */\n      sload(0x09)\n        /* \"contracts/DiamodSafe copy.sol\":16245:16262  _currentTimestamp */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":16245:16270  _currentTimestamp.safeSub */\n      tag_398\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":16245:16282  _currentTimestamp.safeSub(lastPayout) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_407:\n        /* \"contracts/DiamodSafe copy.sol\":16237:16242  share */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":16237:16282  share * _currentTimestamp.safeSub(lastPayout) */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":16220:16282  uint256 profit = share * _currentTimestamp.safeSub(lastPayout) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16391:16422  dripPoolBalance.safeSub(profit) */\n      tag_408\n        /* \"contracts/DiamodSafe copy.sol\":16415:16421  profit */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":16391:16406  dripPoolBalance */\n      sload(0x0c)\n        /* \"contracts/DiamodSafe copy.sol\":16391:16414  dripPoolBalance.safeSub */\n      tag_398\n      swap1\n        /* \"contracts/DiamodSafe copy.sol\":16391:16422  dripPoolBalance.safeSub(profit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_408:\n        /* \"contracts/DiamodSafe copy.sol\":16373:16388  dripPoolBalance */\n      0x0c\n        /* \"contracts/DiamodSafe copy.sol\":16373:16422  dripPoolBalance = dripPoolBalance.safeSub(profit) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16454:16572  SafeMath.add(... */\n      tag_409\n        /* \"contracts/DiamodSafe copy.sol\":16484:16499  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":16540:16558  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":1395:1402  2 ** 64 */\n      0x010000000000000000\n        /* \"contracts/DiamodSafe copy.sol\":16518:16524  profit */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":16518:16536  profit * magnitude */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":16517:16558  (profit * magnitude) / currentTotalStaked */\n      dup2\n      tag_410\n      jumpi\n      invalid\n    tag_410:\n      div\n        /* \"contracts/DiamodSafe copy.sol\":16454:16466  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":16454:16572  SafeMath.add(... */\n      jump\t// in\n    tag_409:\n        /* \"contracts/DiamodSafe copy.sol\":16436:16451  profitPerShare_ */\n      0x12\n        /* \"contracts/DiamodSafe copy.sol\":16436:16572  profitPerShare_ = SafeMath.add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16648:16665  _currentTimestamp */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":16635:16645  lastPayout */\n      0x09\n        /* \"contracts/DiamodSafe copy.sol\":16635:16665  lastPayout = _currentTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":15916:16676  if (... */\n      pop\n      pop\n    tag_403:\n        /* \"contracts/DiamodSafe copy.sol\":15440:16682  function distribute() private {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_264:\n        /* \"contracts/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_412:\n        /* \"contracts/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_273:\n        /* \"contracts/Context.sol\":651:666  address payable */\n      0x00\n        /* \"contracts/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":19569:21538  function _transferTokens(... */\n    tag_302:\n        /* \"contracts/DiamodSafe copy.sol\":19671:19684  bool _success */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19696:19711  address _sender */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":19714:19724  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":19696:19724  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":19753:19763  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":19753:19772  balanceOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19764:19771  _sender */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":19753:19772  balanceOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":19742:19749  _amount */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":19742:19772  _amount <= balanceOf_[_sender] */\n      gt\n      iszero\n        /* \"contracts/DiamodSafe copy.sol\":19734:19773  require(_amount <= balanceOf_[_sender]) */\n      tag_415\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_415:\n        /* \"contracts/DiamodSafe copy.sol\":19888:19889  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19873:19885  myEarnings() */\n      tag_416\n        /* \"contracts/DiamodSafe copy.sol\":19873:19883  myEarnings */\n      tag_208\n        /* \"contracts/DiamodSafe copy.sol\":19873:19885  myEarnings() */\n      jump\t// in\n    tag_416:\n        /* \"contracts/DiamodSafe copy.sol\":19873:19889  myEarnings() > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":19869:19925  if (myEarnings() > 0) {... */\n      iszero\n      tag_417\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":19905:19914  harvest() */\n      tag_418\n        /* \"contracts/DiamodSafe copy.sol\":19905:19912  harvest */\n      tag_90\n        /* \"contracts/DiamodSafe copy.sol\":19905:19914  harvest() */\n      jump\t// in\n    tag_418:\n        /* \"contracts/DiamodSafe copy.sol\":19869:19925  if (myEarnings() > 0) {... */\n    tag_417:\n        /* \"contracts/DiamodSafe copy.sol\":19989:20031  SafeMath.sub(balanceOf_[_sender], _amount) */\n      tag_419\n        /* \"contracts/DiamodSafe copy.sol\":20002:20012  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":20002:20021  balanceOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20013:20020  _sender */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":20002:20021  balanceOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":20023:20030  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":19989:20001  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":19989:20031  SafeMath.sub(balanceOf_[_sender], _amount) */\n      jump\t// in\n    tag_419:\n        /* \"contracts/DiamodSafe copy.sol\":19967:19977  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":19967:19986  balanceOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19978:19985  _sender */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":19967:19986  balanceOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":19967:20031  balanceOf_[_sender] = SafeMath.sub(balanceOf_[_sender], _amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20066:20111  SafeMath.add(balanceOf_[_recipient], _amount) */\n      tag_420\n        /* \"contracts/DiamodSafe copy.sol\":20079:20089  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":20079:20101  balanceOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20090:20100  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20079:20101  balanceOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":20103:20110  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":20066:20078  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":20066:20111  SafeMath.add(balanceOf_[_recipient], _amount) */\n      jump\t// in\n    tag_420:\n        /* \"contracts/DiamodSafe copy.sol\":20041:20051  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":20041:20063  balanceOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20052:20062  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20041:20063  balanceOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20041:20111  balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20233:20240  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":20215:20230  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":20215:20240  profitPerShare_ * _amount */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":20183:20193  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":20183:20202  payoutsOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20194:20201  _sender */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":20183:20202  payoutsOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20183:20241  payoutsOf_[_sender] -= (int256)(profitPerShare_ * _amount) */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20304:20311  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":20286:20301  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":20286:20311  profitPerShare_ * _amount */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":20251:20261  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":20251:20273  payoutsOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20262:20272  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20251:20273  payoutsOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20251:20312  payoutsOf_[_recipient] += (int256)(profitPerShare_ * _amount) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20451:20452  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20415:20425  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":20415:20437  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20426:20436  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20415:20437  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20415:20447  accountOf_[_recipient].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":20415:20452  accountOf_[_recipient].deposited == 0 */\n      eq\n        /* \"contracts/DiamodSafe copy.sol\":20415:20510  accountOf_[_recipient].deposited == 0 &&... */\n      dup1\n      iszero\n      tag_421\n      jumpi\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20509:20510  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20468:20478  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":20468:20490  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20479:20489  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20468:20490  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20468:20505  accountOf_[_recipient].receivedShares */\n      0x06\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":20468:20510  accountOf_[_recipient].receivedShares == 0 */\n      eq\n        /* \"contracts/DiamodSafe copy.sol\":20415:20510  accountOf_[_recipient].deposited == 0 &&... */\n    tag_421:\n        /* \"contracts/DiamodSafe copy.sol\":20398:20556  if (... */\n      iszero\n      tag_422\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":20544:20545  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":20535:20540  users */\n      0x07\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20535:20545  users += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20398:20556  if (... */\n    tag_422:\n        /* \"contracts/DiamodSafe copy.sol\":20634:20635  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":20592:20602  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":20592:20611  accountOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20603:20610  _sender */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":20592:20611  accountOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20592:20630  accountOf_[_sender].xTransferredShares */\n      0x0c\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20592:20635  accountOf_[_sender].xTransferredShares += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20686:20693  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":20645:20655  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":20645:20664  accountOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20656:20663  _sender */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":20645:20664  accountOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20645:20682  accountOf_[_sender].transferredShares */\n      0x05\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20645:20693  accountOf_[_sender].transferredShares += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20744:20751  _amount */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":20703:20713  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":20703:20725  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20714:20724  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20703:20725  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20703:20740  accountOf_[_recipient].receivedShares */\n      0x06\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20703:20751  accountOf_[_recipient].receivedShares += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20803:20804  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":20761:20771  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":20761:20783  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20772:20782  _recipient */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":20761:20783  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":20761:20799  accountOf_[_recipient].xReceivedShares */\n      0x0d\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20761:20804  accountOf_[_recipient].xReceivedShares += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20868:20869  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":20856:20864  totalTxs */\n      0x08\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":20856:20869  totalTxs += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":20955:20965  _recipient */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":20935:20992  onTransfer(_sender, _recipient, _amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":20946:20953  _sender */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":20935:20992  onTransfer(_sender, _recipient, _amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x91c7d71a3ae3fb7cf61e00517bf4868e9e23d0bace5e304cbc3b68de5d85350e\n        /* \"contracts/DiamodSafe copy.sol\":20967:20974  _amount */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":20976:20991  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":20935:20992  onTransfer(_sender, _recipient, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DiamodSafe copy.sol\":21078:21085  _sender */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":21056:21243  onUpdate(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177\n        /* \"contracts/DiamodSafe copy.sol\":21099:21109  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":21099:21118  accountOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":21110:21117  _sender */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":21099:21118  accountOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":21099:21128  accountOf_[_sender].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":21142:21152  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":21142:21161  balanceOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":21153:21160  _sender */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":21142:21161  balanceOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":21175:21185  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":21175:21194  accountOf_[_sender] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":21186:21193  _sender */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":21175:21194  accountOf_[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":21175:21204  accountOf_[_sender].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":21218:21233  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":21056:21243  onUpdate(... */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":21332:21342  _recipient */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":21310:21509  onUpdate(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177\n        /* \"contracts/DiamodSafe copy.sol\":21356:21366  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":21356:21378  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":21367:21377  _recipient */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":21356:21378  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":21356:21388  accountOf_[_recipient].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":21402:21412  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":21402:21424  balanceOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":21413:21423  _recipient */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":21402:21424  balanceOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":21438:21448  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":21438:21460  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":21449:21459  _recipient */\n      dup10\n        /* \"contracts/DiamodSafe copy.sol\":21438:21460  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":21438:21470  accountOf_[_recipient].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":21484:21499  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":21310:21509  onUpdate(... */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":21527:21531  true */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":21520:21531  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":19569:21538  function _transferTokens(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":18344:19522  function _compoundTokens() internal returns (uint256) {... */\n    tag_334:\n        /* \"contracts/DiamodSafe copy.sol\":18389:18396  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18408:18421  address _user */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":18424:18434  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":18408:18434  address _user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18510:18528  uint256 _dividends */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18531:18549  dividendsOf(_user) */\n      tag_424\n        /* \"contracts/DiamodSafe copy.sol\":18543:18548  _user */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":18531:18542  dividendsOf */\n      tag_60\n        /* \"contracts/DiamodSafe copy.sol\":18531:18549  dividendsOf(_user) */\n      jump\t// in\n    tag_424:\n        /* \"contracts/DiamodSafe copy.sol\":18510:18549  uint256 _dividends = dividendsOf(_user) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":1395:1402  2 ** 64 */\n      0x010000000000000000\n        /* \"contracts/DiamodSafe copy.sol\":18589:18599  _dividends */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":18589:18611  _dividends * magnitude */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":18559:18569  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":18559:18576  payoutsOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18570:18575  _user */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":18559:18576  payoutsOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18559:18612  payoutsOf_[_user] += (int256)(_dividends * magnitude) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18767:18782  uint256 _tokens */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18785:18823  _depositTokens(msg.sender, _dividends) */\n      tag_425\n        /* \"contracts/DiamodSafe copy.sol\":18800:18810  msg.sender */\n      caller\n        /* \"contracts/DiamodSafe copy.sol\":18812:18822  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":18785:18799  _depositTokens */\n      tag_373\n        /* \"contracts/DiamodSafe copy.sol\":18785:18823  _depositTokens(msg.sender, _dividends) */\n      jump\t// in\n    tag_425:\n        /* \"contracts/DiamodSafe copy.sol\":18767:18823  uint256 _tokens = _depositTokens(msg.sender, _dividends) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18881:18886  _user */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":18870:18925  onCompound(_user, _dividends, _tokens, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x193a876ac91d11a4a0a71ebef73b195ba55aa7c16d6755c93c21d973e692a02c\n        /* \"contracts/DiamodSafe copy.sol\":18888:18898  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":18900:18907  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":18909:18924  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":18870:18925  onCompound(_user, _dividends, _tokens, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":19003:19091  SafeMath.add(... */\n      tag_426\n        /* \"contracts/DiamodSafe copy.sol\":19029:19039  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":19029:19046  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19040:19045  _user */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":19029:19046  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":19029:19057  accountOf_[_user].compounded */\n      0x02\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":19071:19081  _dividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":19003:19015  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":19003:19091  SafeMath.add(... */\n      jump\t// in\n    tag_426:\n        /* \"contracts/DiamodSafe copy.sol\":18972:18982  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":18972:18989  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18983:18988  _user */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":18972:18989  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":18972:19000  accountOf_[_user].compounded */\n      0x02\n      add\n        /* \"contracts/DiamodSafe copy.sol\":18972:19091  accountOf_[_user].compounded = SafeMath.add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":19134:19135  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":19101:19111  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":19101:19118  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19112:19117  _user */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":19101:19118  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":19101:19130  accountOf_[_user].xCompounded */\n      0x08\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19101:19135  accountOf_[_user].xCompounded += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":19210:19215  _user */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":19188:19367  onUpdate(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177\n        /* \"contracts/DiamodSafe copy.sol\":19229:19239  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":19229:19246  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19240:19245  _user */\n      dup7\n        /* \"contracts/DiamodSafe copy.sol\":19229:19246  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":19229:19256  accountOf_[_user].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":19270:19280  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":19270:19287  balanceOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19281:19286  _user */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":19270:19287  balanceOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":19301:19311  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":19301:19318  accountOf_[_user] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":19312:19317  _user */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":19301:19318  accountOf_[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":19301:19328  accountOf_[_user].withdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":19342:19357  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":19188:19367  onUpdate(... */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":19446:19458  distribute() */\n      tag_427\n        /* \"contracts/DiamodSafe copy.sol\":19446:19456  distribute */\n      tag_242\n        /* \"contracts/DiamodSafe copy.sol\":19446:19458  distribute() */\n      jump\t// in\n    tag_427:\n        /* \"contracts/DiamodSafe copy.sol\":19508:19515  _tokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":19501:19515  return _tokens */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18344:19522  function _compoundTokens() internal returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DiamodSafe copy.sol\":16728:18304  function _depositTokens(... */\n    tag_373:\n        /* \"contracts/DiamodSafe copy.sol\":16829:16836  uint256 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":16976:16977  0 */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":16940:16950  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":16940:16962  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":16951:16961  _recipient */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":16940:16962  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":16940:16972  accountOf_[_recipient].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":16940:16977  accountOf_[_recipient].deposited == 0 */\n      eq\n        /* \"contracts/DiamodSafe copy.sol\":16940:17035  accountOf_[_recipient].deposited == 0 &&... */\n      dup1\n      iszero\n      tag_429\n      jumpi\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17034:17035  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":16993:17003  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":16993:17015  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17004:17014  _recipient */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":16993:17015  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":16993:17030  accountOf_[_recipient].receivedShares */\n      0x06\n      add\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":16993:17035  accountOf_[_recipient].receivedShares == 0 */\n      eq\n        /* \"contracts/DiamodSafe copy.sol\":16940:17035  accountOf_[_recipient].deposited == 0 &&... */\n    tag_429:\n        /* \"contracts/DiamodSafe copy.sol\":16923:17081  if (... */\n      iszero\n      tag_430\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":17069:17070  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":17060:17065  users */\n      0x07\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17060:17070  users += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16923:17081  if (... */\n    tag_430:\n        /* \"contracts/DiamodSafe copy.sol\":17131:17132  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":17119:17127  totalTxs */\n      0x08\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17119:17132  totalTxs += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17148:17175  uint256 _undividedDividends */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17211:17214  100 */\n      0x64\n        /* \"contracts/DiamodSafe copy.sol\":17178:17208  SafeMath.mul(_amount, divsFee) */\n      tag_431\n        /* \"contracts/DiamodSafe copy.sol\":17191:17198  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":1349:1351  10 */\n      0x0a\n        /* \"contracts/DiamodSafe copy.sol\":17178:17208  SafeMath.mul(_amount, divsFee) */\n      0xff\n      and\n        /* \"contracts/DiamodSafe copy.sol\":17178:17190  SafeMath.mul */\n      tag_222\n        /* \"contracts/DiamodSafe copy.sol\":17178:17208  SafeMath.mul(_amount, divsFee) */\n      jump\t// in\n    tag_431:\n        /* \"contracts/DiamodSafe copy.sol\":17178:17214  SafeMath.mul(_amount, divsFee) / 100 */\n      dup2\n      tag_432\n      jumpi\n      invalid\n    tag_432:\n      div\n        /* \"contracts/DiamodSafe copy.sol\":17148:17214  uint256 _undividedDividends = SafeMath.mul(_amount, divsFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17226:17243  uint256   _tokens */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17246:17288  SafeMath.sub(_amount, _undividedDividends) */\n      tag_433\n        /* \"contracts/DiamodSafe copy.sol\":17259:17266  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":17268:17287  _undividedDividends */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":17246:17258  SafeMath.sub */\n      tag_225\n        /* \"contracts/DiamodSafe copy.sol\":17246:17288  SafeMath.sub(_amount, _undividedDividends) */\n      jump\t// in\n    tag_433:\n        /* \"contracts/DiamodSafe copy.sol\":17226:17288  uint256   _tokens = SafeMath.sub(_amount, _undividedDividends) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17353:17363  _recipient */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":17343:17399  onDeposit(_recipient, _amount, _tokens, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb49bb132260f6aa1c86e2d2a3957c097216e6ec9b5fa15867289f058b4d297ac\n        /* \"contracts/DiamodSafe copy.sol\":17365:17372  _amount */\n      dup6\n        /* \"contracts/DiamodSafe copy.sol\":17374:17381  _tokens */\n      dup4\n        /* \"contracts/DiamodSafe copy.sol\":17383:17398  block.timestamp */\n      timestamp\n        /* \"contracts/DiamodSafe copy.sol\":17343:17399  onDeposit(_recipient, _amount, _tokens, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DiamodSafe copy.sol\":17508:17509  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17498:17505  _tokens */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":17498:17509  _tokens > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":17498:17591  _tokens > 0 &&... */\n      dup1\n      iszero\n      tag_434\n      jumpi\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17573:17591  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":17529:17570  SafeMath.add(_tokens, currentTotalStaked) */\n      tag_435\n        /* \"contracts/DiamodSafe copy.sol\":17542:17549  _tokens */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":17551:17569  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":17529:17541  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":17529:17570  SafeMath.add(_tokens, currentTotalStaked) */\n      jump\t// in\n    tag_435:\n        /* \"contracts/DiamodSafe copy.sol\":17529:17591  SafeMath.add(_tokens, currentTotalStaked) > currentTotalStaked */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":17498:17591  _tokens > 0 &&... */\n    tag_434:\n        /* \"contracts/DiamodSafe copy.sol\":17477:17601  require(... */\n      tag_436\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_436:\n        /* \"contracts/DiamodSafe copy.sol\":17636:17637  0 */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17615:17633  currentTotalStaked */\n      sload(0x11)\n        /* \"contracts/DiamodSafe copy.sol\":17615:17637  currentTotalStaked > 0 */\n      gt\n        /* \"contracts/DiamodSafe copy.sol\":17611:17752  if (currentTotalStaked > 0) {... */\n      iszero\n      tag_437\n      jumpi\n        /* \"contracts/DiamodSafe copy.sol\":17675:17682  _tokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":17653:17671  currentTotalStaked */\n      0x11\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17653:17682  currentTotalStaked += _tokens */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17611:17752  if (currentTotalStaked > 0) {... */\n      jump(tag_438)\n    tag_437:\n        /* \"contracts/DiamodSafe copy.sol\":17734:17741  _tokens */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":17713:17731  currentTotalStaked */\n      0x11\n        /* \"contracts/DiamodSafe copy.sol\":17713:17741  currentTotalStaked = _tokens */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17611:17752  if (currentTotalStaked > 0) {... */\n    tag_438:\n        /* \"contracts/DiamodSafe copy.sol\":17817:17850  allocateFees(_undividedDividends) */\n      tag_439\n        /* \"contracts/DiamodSafe copy.sol\":17830:17849  _undividedDividends */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":17817:17829  allocateFees */\n      tag_240\n        /* \"contracts/DiamodSafe copy.sol\":17817:17850  allocateFees(_undividedDividends) */\n      jump\t// in\n    tag_439:\n        /* \"contracts/DiamodSafe copy.sol\":17885:17930  SafeMath.add(balanceOf_[_recipient], _tokens) */\n      tag_440\n        /* \"contracts/DiamodSafe copy.sol\":17898:17908  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":17898:17920  balanceOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17909:17919  _recipient */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":17898:17920  balanceOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DiamodSafe copy.sol\":17922:17929  _tokens */\n      dup3\n        /* \"contracts/DiamodSafe copy.sol\":17885:17897  SafeMath.add */\n      tag_264\n        /* \"contracts/DiamodSafe copy.sol\":17885:17930  SafeMath.add(balanceOf_[_recipient], _tokens) */\n      jump\t// in\n    tag_440:\n        /* \"contracts/DiamodSafe copy.sol\":17860:17870  balanceOf_ */\n      0x14\n        /* \"contracts/DiamodSafe copy.sol\":17860:17882  balanceOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":17871:17881  _recipient */\n      dup8\n        /* \"contracts/DiamodSafe copy.sol\":17860:17882  balanceOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":17860:17930  balanceOf_[_recipient] = SafeMath.add(balanceOf_[_recipient], _tokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":17971:17993  int256 _updatedPayouts */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18023:18030  _tokens */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":18005:18020  profitPerShare_ */\n      sload(0x12)\n        /* \"contracts/DiamodSafe copy.sol\":18005:18030  profitPerShare_ * _tokens */\n      mul\n        /* \"contracts/DiamodSafe copy.sol\":17971:18031  int256 _updatedPayouts = (int256)(profitPerShare_ * _tokens) */\n      swap1\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18095:18110  _updatedPayouts */\n      dup1\n        /* \"contracts/DiamodSafe copy.sol\":18069:18079  payoutsOf_ */\n      0x13\n        /* \"contracts/DiamodSafe copy.sol\":18069:18091  payoutsOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18080:18090  _recipient */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":18069:18091  payoutsOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18069:18110  payoutsOf_[_recipient] += _updatedPayouts */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18156:18163  _amount */\n      dup5\n        /* \"contracts/DiamodSafe copy.sol\":18120:18130  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":18120:18142  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18131:18141  _recipient */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":18120:18142  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":18120:18152  accountOf_[_recipient].deposited */\n      0x00\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18120:18163  accountOf_[_recipient].deposited += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18209:18210  1 */\n      0x01\n        /* \"contracts/DiamodSafe copy.sol\":18173:18183  accountOf_ */\n      0x15\n        /* \"contracts/DiamodSafe copy.sol\":18173:18195  accountOf_[_recipient] */\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18184:18194  _recipient */\n      dup9\n        /* \"contracts/DiamodSafe copy.sol\":18173:18195  accountOf_[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DiamodSafe copy.sol\":18173:18205  accountOf_[_recipient].xInvested */\n      0x07\n      add\n      0x00\n        /* \"contracts/DiamodSafe copy.sol\":18173:18210  accountOf_[_recipient].xInvested += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":18290:18297  _tokens */\n      dup2\n        /* \"contracts/DiamodSafe copy.sol\":18283:18297  return _tokens */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DiamodSafe copy.sol\":16728:18304  function _depositTokens(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":7288:7453  function safeSub(uint a, uint b) internal pure returns (uint) {... */\n    tag_398:\n        /* \"contracts/SafeMath.sol\":7344:7348  uint */\n      0x00\n        /* \"contracts/SafeMath.sol\":7368:7369  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":7364:7365  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":7364:7369  b > a */\n      gt\n        /* \"contracts/SafeMath.sol\":7360:7447  if (b > a) {... */\n      iszero\n      tag_442\n      jumpi\n        /* \"contracts/SafeMath.sol\":7392:7393  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":7385:7393  return 0 */\n      swap1\n      pop\n      jump(tag_441)\n        /* \"contracts/SafeMath.sol\":7360:7447  if (b > a) {... */\n    tag_442:\n        /* \"contracts/SafeMath.sol\":7435:7436  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":7431:7432  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":7431:7436  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":7424:7436  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":7288:7453  function safeSub(uint a, uint b) internal pure returns (uint) {... */\n    tag_441:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_285:\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_288:\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_352:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_444\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_445:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_446\n      jumpi\n      dup3\n      mload\n      dup3\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_445)\n    tag_446:\n    tag_444:\n      pop\n      swap1\n      pop\n      tag_447\n      swap2\n      swap1\n      tag_448\n      jump\t// in\n    tag_447:\n      pop\n      swap1\n      jump\t// out\n    tag_448:\n    tag_449:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_450\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_449)\n    tag_450:\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae 416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa264697066735822122070b3b97328e5066d7774e0528422ff8b2f026236016fe65c7ddf40594a56214e64736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200409138038062004091833981810160405260408110156200003757600080fd5b810190808051906020019092919080519060200190929190505050600062000064620002d160201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060018081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156200015957506200015882620002d960201b62002a411760201c565b5b620001cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f494e56414c49445f41444452455353000000000000000000000000000000000081525060200191505060405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600d60006101000a81548160ff021916908360ff160217905550426009819055506008600e819055506002600f8190555060016003819055505050620002ec565b600033905090565b600080823b905060008111915050919050565b613d9580620002fc6000396000f3fe60806040526004361061025f5760003560e01c80638da5cb5b11610144578063d7c3771d116100b6578063f2fde38b1161007a578063f2fde38b14610bf3578063f69e204614610c44578063f6db0da014610c5b578063fbaf1bbd14610d36578063ffaad6a514610d9b578063ffe6bbd814610e0a576102e8565b8063d7c3771d14610a84578063e02e1e9c14610ac5578063eedc966a14610b14578063f14faf6f14610b79578063f202027514610bc8576102e8565b8063ad7a672f11610108578063ad7a672f14610921578063aecb6d281461094c578063b03cf5a714610977578063b6b55f25146109dc578063b9db102a14610a2b578063d326159214610a56576102e8565b80638da5cb5b146107d8578063949e8acd146108195780639d76ea5814610844578063a01496de14610885578063a9059cbb146108b0576102e8565b80634b750334116101dd5780637d882097116101a15780637d882097146106445780637e6335c71461066f5780638086b8ba146106ca57806381fce645146107575780638620410b1461078257806389375abf146107ad576102e8565b80634b75033414610531578063537a39bb1461055c57806370a0823114610587578063715018a6146105ec57806372f702f314610603576102e8565b80631f38b9cd116102245780631f38b9cd146104225780632e1a7d4d1461044d57806336599ead1461048857806341c61383146104ef5780634641257d1461051a576102e8565b806265318b146102ed57806308560ace1461035257806310d0ffdd1461037d57806318160ddd146103cc5780631924063e146103f7576102e8565b366102e857610290600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610e35565b3373ffffffffffffffffffffffffffffffffffffffff167f3c2bd1b3f5ca07afb09fbee41ac43da2b98d9c2e9832673052e546bd1d4c091d3442604051808381526020018281526020019250505060405180910390a2005b600080fd5b3480156102f957600080fd5b5061033c6004803603602081101561031057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f6f565b6040518082815260200191505060405180910390f35b34801561035e57600080fd5b5061036761100f565b6040518082815260200191505060405180910390f35b34801561038957600080fd5b506103b6600480360360208110156103a057600080fd5b8101908080359060200190929190505050611015565b6040518082815260200191505060405180910390f35b3480156103d857600080fd5b506103e1611060565b6040518082815260200191505060405180910390f35b34801561040357600080fd5b5061040c61106a565b6040518082815260200191505060405180910390f35b34801561042e57600080fd5b50610437611070565b6040518082815260200191505060405180910390f35b34801561045957600080fd5b506104866004803603602081101561047057600080fd5b8101908080359060200190929190505050611076565b005b34801561049457600080fd5b506104d7600480360360208110156104ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113be565b60405180821515815260200191505060405180910390f35b3480156104fb57600080fd5b506105046114e8565b6040518082815260200191505060405180910390f35b34801561052657600080fd5b5061052f6114ee565b005b34801561053d57600080fd5b506105466117a0565b6040518082815260200191505060405180910390f35b34801561056857600080fd5b506105716117e1565b6040518082815260200191505060405180910390f35b34801561059357600080fd5b506105d6600480360360208110156105aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117e7565b6040518082815260200191505060405180910390f35b3480156105f857600080fd5b50610601611830565b005b34801561060f57600080fd5b5061061861199d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065057600080fd5b506106596119c3565b6040518082815260200191505060405180910390f35b34801561067b57600080fd5b506106b26004803603604081101561069257600080fd5b8101908080359060200190929190803590602001909291905050506119c9565b60405180821515815260200191505060405180910390f35b3480156106d657600080fd5b50610719600480360360208110156106ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b61565b6040518082600e60200280838360005b83811015610744578082015181840152602081019050610729565b5050505090500191505060405180910390f35b34801561076357600080fd5b5061076c611cfa565b6040518082815260200191505060405180910390f35b34801561078e57600080fd5b50610797611cff565b6040518082815260200191505060405180910390f35b3480156107b957600080fd5b506107c2611d40565b6040518082815260200191505060405180910390f35b3480156107e457600080fd5b506107ed611d46565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561082557600080fd5b5061082e611d6f565b6040518082815260200191505060405180910390f35b34801561085057600080fd5b50610859611d7f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561089157600080fd5b5061089a611da5565b6040518082815260200191505060405180910390f35b3480156108bc57600080fd5b50610909600480360360408110156108d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dab565b60405180821515815260200191505060405180910390f35b34801561092d57600080fd5b50610936611dd2565b6040518082815260200191505060405180910390f35b34801561095857600080fd5b50610961611e9d565b6040518082815260200191505060405180910390f35b34801561098357600080fd5b506109b06004803603602081101561099a57600080fd5b8101908080359060200190929190505050611ea3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109e857600080fd5b50610a15600480360360208110156109ff57600080fd5b8101908080359060200190929190505050611ee2565b6040518082815260200191505060405180910390f35b348015610a3757600080fd5b50610a40611ef5565b6040518082815260200191505060405180910390f35b348015610a6257600080fd5b50610a6b611efb565b604051808260ff16815260200191505060405180910390f35b348015610a9057600080fd5b50610a99611f0e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ad157600080fd5b50610afe60048036036020811015610ae857600080fd5b8101908080359060200190929190505050611f34565b6040518082815260200191505060405180910390f35b348015610b2057600080fd5b50610b6360048036036020811015610b3757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f6f565b6040518082815260200191505060405180910390f35b348015610b8557600080fd5b50610bb260048036036020811015610b9c57600080fd5b8101908080359060200190929190505050611f90565b6040518082815260200191505060405180910390f35b348015610bd457600080fd5b50610bdd612198565b6040518082815260200191505060405180910390f35b348015610bff57600080fd5b50610c4260048036036020811015610c1657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061219e565b005b348015610c5057600080fd5b50610c59612390565b005b348015610c6757600080fd5b50610d1e60048036036020811015610c7e57600080fd5b8101908080359060200190640100000000811115610c9b57600080fd5b820183602082011115610cad57600080fd5b80359060200191846020830284011164010000000083111715610ccf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506123af565b60405180821515815260200191505060405180910390f35b348015610d4257600080fd5b50610d8560048036036020811015610d5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612722565b6040518082815260200191505060405180910390f35b348015610da757600080fd5b50610df460048036036040811015610dbe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506127e1565b6040518082815260200191505060405180910390f35b348015610e1657600080fd5b50610e1f612a31565b6040518082815260200191505060405180910390f35b80471015610eab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a20696e73756666696369656e742062616c616e636500000081525060200191505060405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610f0b576040519150601f19603f3d011682016040523d82523d6000602084013e610f10565b606091505b5050905080610f6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180613d05603a913960400191505060405180910390fd5b505050565b600068010000000000000000601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460125402038161100757fe5b049050919050565b60035481565b600060115482111561102657600080fd5b6000829050600061104561103e83600a60ff16612a54565b6064612ada565b905060006110538383612b63565b9050809350505050919050565b6000601154905090565b60105481565b600f5481565b6000611080611d6f565b1161108a57600080fd5b6000339050601460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156110db57600080fd5b600060646110ed84600a60ff16612a54565b816110f457fe5b0490506000611102336113be565b9050801561110f57600091505b600061111b8584612b63565b905061112960115486612b63565b601181905550611178601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205486612b63565b601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000680100000000000000008202866012540201905080601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061122784612be6565b8473ffffffffffffffffffffffffffffffffffffffff167f90ebb005d68efee044927e1e77e1fd0cecc508368aa72c39250a787eed5f0a7087844260405180848152602001838152602001828152602001935050505060405180910390a28473ffffffffffffffffffffffffffffffffffffffff167f29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154601460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426040518085815260200184815260200183815260200182815260200194505050505060405180910390a26113b6612c9a565b505050505050565b60008060009050600080600090505b6006805490508110156114c757600681815481106113e757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561147b57600080fd5b505afa15801561148f573d6000803e3d6000fd5b505050506040513d60208110156114a557600080fd5b81019080805190602001909291905050508301925080806001019150506113cd565b5060035482106114dc576001925050506114e3565b6000925050505b919050565b600a5481565b60006114f8612a31565b1161150257600080fd5b60003390506000611511612a31565b9050680100000000000000008102601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115fe57600080fd5b505af1158015611612573d6000803e3d6000fd5b505050506040513d602081101561162857600080fd5b810190808051906020019092919050505050611686601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015482612deb565b601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160008282540192505081905550600160086000828254019250508190555080600a600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff167f1b091269e929df55d64d6ea7e9cadbe4fb38dce5ccdc995767bc515030dbfbbf8242604051808381526020018281526020019250505060405180910390a261179c612c9a565b5050565b600080670de0b6b3a7640000905060006117c86117c183600a60ff16612a54565b6064612ada565b905060006117d68383612b63565b905080935050505090565b60085481565b6000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611838612e73565b73ffffffffffffffffffffffffffffffffffffffff16611856611d46565b73ffffffffffffffffffffffffffffffffffffffff16146118df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b60006119d3612e73565b73ffffffffffffffffffffffffffffffffffffffff166119f1611d46565b73ffffffffffffffffffffffffffffffffffffffff1614611a7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600a611a8f8385612deb90919063ffffffff16565b14611b02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f54454e5f504f5254494f4e535f524551554952455f4449564953494f4e00000081525060200191505060405180910390fd5b82600e8190555081600f819055507f677017fa3a0fe0f50a95e6024c5b688f2b14a4696c4a897c459715cabfc1c03a83834260405180848152602001838152602001828152602001935050505060405180910390a16001905092915050565b611b69613ba5565b611b71613bc8565b601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820154815250509050611c52613ba5565b604051806101c0016040528083600001518152602001836020015181526020018360600151815260200183604001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361012001518152602001836101400151815260200183610160015181526020018361018001518152602001836101a00151815260200183610100015181525090508092505050919050565b600281565b600080670de0b6b3a764000090506000611d27611d2083600a60ff16612a54565b6064612ada565b90506000611d358383612deb565b905080935050505090565b61546081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611d7a336117e7565b905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e5481565b600080611db6611d6f565b11611dc057600080fd5b611dca8383612e7b565b905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611e5d57600080fd5b505afa158015611e71573d6000803e3d6000fd5b505050506040513d6020811015611e8757600080fd5b8101908080519060200190929190505050905090565b600c5481565b60068181548110611eb357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611eee33836127e1565b9050919050565b60095481565b600d60009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080611f4f611f4884600a60ff16612a54565b6064612ada565b90506000611f5d8483612b63565b90506000819050809350505050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561204357600080fd5b505af1158015612057573d6000803e3d6000fd5b505050506040513d602081101561206d57600080fd5b810190808051906020019092919050505061208757600080fd5b81600c600082825401925050819055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000828254019250508190555081601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f0da1788c3e861a58a47f0d46073b13c4d66efcc259714744f920d1afe7b8dee58342604051808381526020018281526020019250505060405180910390a2600c549050919050565b60075481565b6121a6612e73565b73ffffffffffffffffffffffffffffffffffffffff166121c4611d46565b73ffffffffffffffffffffffffffffffffffffffff161461224d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156122d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613cdf6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061239a612a31565b116123a457600080fd5b6123ac613568565b50565b60006123b9612e73565b73ffffffffffffffffffffffffffffffffffffffff166123d7611d46565b73ffffffffffffffffffffffffffffffffffffffff1614612460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b6006805490508110156125955782818151811061247c57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd6040518263ffffffff1660e01b8152600401808260e01b815260200191505060206040518083038186803b1580156124db57600080fd5b505afa1580156124ef573d6000803e3d6000fd5b505050506040513d602081101561250557600080fd5b8101908080519060200190929190505050612588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e4f545f4552433732310000000000000000000000000000000000000000000081525060200191505060405180910390fd5b8080600101915050612463565b506060600680548060200260200160405190810160405280929190818152602001828054801561261a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116125d0575b505050505090508260069080519060200190612637929190613c37565b503373ffffffffffffffffffffffffffffffffffffffff167ff0650831416f723858005cfeae97a2d6f5e127d1e6ae8938574d1d73e7f4727c828542604051808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b838110156126c05780820151818401526020810190506126a5565b50505050905001838103825285818151815260200191508051906020019060200280838360005b838110156127025780820151818401526020810190506126e7565b505050509050019550505050505060405180910390a26001915050919050565b60008061275f6064612751600d60009054906101000a900460ff1660ff16600c54612a5490919063ffffffff16565b612ada90919063ffffffff16565b90506000601154116127725760006127d9565b6127d86011546127ca601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612a5490919063ffffffff16565b612ada90919063ffffffff16565b5b915050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d60208110156128be57600080fd5b81019080805190602001909291905050506128d857600080fd5b81600b6000828254019250508190555060006128f4848461385c565b90508373ffffffffffffffffffffffffffffffffffffffff167f29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177601560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426040518085815260200184815260200183815260200182815260200194505050505060405180910390a2612a27612c9a565b8091505092915050565b6000612a3c33610f6f565b905090565b600080823b905060008111915050919050565b600080831415612a675760009050612ad4565b6000828402905082848281612a7857fe5b0414612acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613d3f6021913960400191505060405180910390fd5b809150505b92915050565b6000808211612b51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381612b5a57fe5b04905092915050565b600082821115612bdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000612bfc600a83612ada90919063ffffffff16565b90506000612c15600e5483612a5490919063ffffffff16565b90506000612c2e600f5484612a5490919063ffffffff16565b9050612c4582600c54612deb90919063ffffffff16565b600c8190555060006011541115612c8357612c7860125460115468010000000000000000840281612c7257fe5b04612deb565b601281905550612c94565b80600c600082825401925050819055505b50505050565b6000429050615460612cb760105483613b8690919063ffffffff16565b1115612d0b577f2cfce469a63f2e9972b7f23da751e6943ed2b091c10e40b5c43b5f6105bf20ea612ce6611dd2565b82604051808381526020018281526020019250505060405180910390a1806010819055505b6002612d1982600954613b86565b118015612d2857506000601154115b15612de8576000612d7e62015180612d706064612d62600d60009054906101000a900460ff1660ff16600c54612a5490919063ffffffff16565b612ada90919063ffffffff16565b612ada90919063ffffffff16565b90506000612d9760095484613b8690919063ffffffff16565b82029050612db081600c54613b8690919063ffffffff16565b600c81905550612dd860125460115468010000000000000000840281612dd257fe5b04612deb565b6012819055508260098190555050505b50565b600080828401905083811015612e69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600080339050601460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115612ecd57600080fd5b6000612ed7612a31565b1115612ee657612ee56114ee565b5b612f2f601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612b63565b601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612fbb601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612deb565b601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260125402601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508260125402601360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506000601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414801561313457506000601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154145b1561314b5760016007600082825401925050819055505b6001601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600c016000828254019250508190555082601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254019250508190555082601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601600082825401925050819055506001601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d016000828254019250508190555060016008600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f91c7d71a3ae3fb7cf61e00517bf4868e9e23d0bace5e304cbc3b68de5d85350e8542604051808381526020018281526020019250505060405180910390a38073ffffffffffffffffffffffffffffffffffffffff167f29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426040518085815260200184815260200183815260200182815260200194505050505060405180910390a28373ffffffffffffffffffffffffffffffffffffffff167f29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177601560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426040518085815260200184815260200183815260200182815260200194505050505060405180910390a2600191505092915050565b600080339050600061357982610f6f565b9050680100000000000000008102601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060006135df338361385c565b90508273ffffffffffffffffffffffffffffffffffffffff167f193a876ac91d11a4a0a71ebef73b195ba55aa7c16d6755c93c21d973e692a02c83834260405180848152602001838152602001828152602001935050505060405180910390a261368b601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015483612deb565b601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff167f29f64f6f46c82c5ecfa955fe7d093e63b4106b6dbe5193e00efd62c7384ef177601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426040518085815260200184815260200183815260200182815260200194505050505060405180910390a2613853612c9a565b80935050505090565b600080601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541480156138f157506000601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154145b156139085760016007600082825401925050819055505b60016008600082825401925050819055506000606461392b84600a60ff16612a54565b8161393257fe5b04905060006139418483612b63565b90508473ffffffffffffffffffffffffffffffffffffffff167fb49bb132260f6aa1c86e2d2a3957c097216e6ec9b5fa15867289f058b4d297ac85834260405180848152602001838152602001828152602001935050505060405180910390a26000811180156139bd57506011546139bb82601154612deb565b115b6139c657600080fd5b600060115411156139e657806011600082825401925050819055506139ee565b806011819055505b6139f782612be6565b613a40601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612deb565b601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008160125402905080601360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555084601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506001601560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254019250508190555081935050505092915050565b600082821115613b995760009050613b9f565b81830390505b92915050565b604051806101c00160405280600e90602082028036833780820191505090505090565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054828255906000526020600020908101928215613cb0579160200282015b82811115613caf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613c57565b5b509050613cbd9190613cc1565b5090565b5b80821115613cda576000816000905550600101613cc2565b509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122070b3b97328e5066d7774e0528422ff8b2f026236016fe65c7ddf40594a56214e64736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4091 CODESIZE SUB DUP1 PUSH3 0x4091 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0x64 PUSH3 0x2D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x159 JUMPI POP PUSH3 0x158 DUP3 PUSH3 0x2D9 PUSH1 0x20 SHL PUSH3 0x2A41 OR PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH3 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x494E56414C49445F414444524553530000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x2EC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D95 DUP1 PUSH3 0x2FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xD7C3771D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBF3 JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0xC44 JUMPI DUP1 PUSH4 0xF6DB0DA0 EQ PUSH2 0xC5B JUMPI DUP1 PUSH4 0xFBAF1BBD EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0xFFAAD6A5 EQ PUSH2 0xD9B JUMPI DUP1 PUSH4 0xFFE6BBD8 EQ PUSH2 0xE0A JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0xD7C3771D EQ PUSH2 0xA84 JUMPI DUP1 PUSH4 0xE02E1E9C EQ PUSH2 0xAC5 JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0xB14 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0xB79 JUMPI DUP1 PUSH4 0xF2020275 EQ PUSH2 0xBC8 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0xAD7A672F GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xAECB6D28 EQ PUSH2 0x94C JUMPI DUP1 PUSH4 0xB03CF5A7 EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x9DC JUMPI DUP1 PUSH4 0xB9DB102A EQ PUSH2 0xA2B JUMPI DUP1 PUSH4 0xD3261592 EQ PUSH2 0xA56 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0x949E8ACD EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0xA01496DE EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8B0 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7D882097 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x7E6335C7 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x8086B8BA EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x81FCE645 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0x8620410B EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0x89375ABF EQ PUSH2 0x7AD JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x537A39BB EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x603 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x1F38B9CD GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x1F38B9CD EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x36599EAD EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x41C61383 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x51A JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH3 0x65318B EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x8560ACE EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x10D0FFDD EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x1924063E EQ PUSH2 0x3F7 JUMPI PUSH2 0x2E8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2E8 JUMPI PUSH2 0x290 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH2 0xE35 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3C2BD1B3F5CA07AFB09FBEE41AC43DA2B98D9C2E9832673052E546BD1D4C091D CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x437 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1076 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x14EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x571 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x1830 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x618 PUSH2 0x199D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xE PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x744 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x729 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76C PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x797 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C2 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7ED PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x859 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89A PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x909 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x936 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x961 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA15 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA40 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6B PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA99 PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAFE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB63 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBDD PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC42 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x219E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC59 PUSH2 0x2390 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1F PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D05 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x14 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x12 SLOAD MUL SUB DUP2 PUSH2 0x1007 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD DUP3 GT ISZERO PUSH2 0x1026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x1045 PUSH2 0x103E DUP4 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1053 DUP4 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1080 PUSH2 0x1D6F JUMP JUMPDEST GT PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x14 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x10ED DUP5 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST DUP2 PUSH2 0x10F4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x1102 CALLER PUSH2 0x13BE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x110F JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x111B DUP6 DUP5 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP PUSH2 0x1129 PUSH1 0x11 SLOAD DUP7 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0x1178 PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP7 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH9 0x10000000000000000 DUP3 MUL DUP7 PUSH1 0x12 SLOAD MUL ADD SWAP1 POP DUP1 PUSH1 0x13 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1227 DUP5 PUSH2 0x2BE6 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90EBB005D68EFEE044927E1E77E1FD0CECC508368AA72C39250A787EED5F0A70 DUP8 DUP5 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x13B6 PUSH2 0x2C9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x14C7 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13E7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x148F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 ADD SWAP3 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13CD JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x14DC JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F8 PUSH2 0x2A31 JUMP JUMPDEST GT PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1511 PUSH2 0x2A31 JUMP JUMPDEST SWAP1 POP PUSH9 0x10000000000000000 DUP2 MUL PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1612 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH2 0x1686 PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B091269E929DF55D64D6EA7E9CADBE4FB38DCE5CCDC995767BC515030DBFBBF DUP3 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x179C PUSH2 0x2C9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0x17C8 PUSH2 0x17C1 DUP4 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17D6 DUP4 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1838 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1856 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D3 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19F1 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH2 0x1A8F DUP4 DUP6 PUSH2 0x2DEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x1B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x54454E5F504F5254494F4E535F524551554952455F4449564953494F4E000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH32 0x677017FA3A0FE0F50A95E6024C5B688F2B14A4696C4A897C459715CABFC1C03A DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B69 PUSH2 0x3BA5 JUMP JUMPDEST PUSH2 0x1B71 PUSH2 0x3BC8 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1C52 PUSH2 0x3BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x140 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x160 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x180 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x1A0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x100 ADD MLOAD DUP2 MSTORE POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0x1D27 PUSH2 0x1D20 DUP4 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D35 DUP4 DUP4 PUSH2 0x2DEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5460 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7A CALLER PUSH2 0x17E7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DB6 PUSH2 0x1D6F JUMP JUMPDEST GT PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DCA DUP4 DUP4 PUSH2 0x2E7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE CALLER DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F4F PUSH2 0x1F48 DUP5 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F5D DUP5 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2057 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA1788C3E861A58A47F0D46073B13C4D66EFCC259714744F920D1AFE7B8DEE5 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xC SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21A6 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21C4 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x224D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x22D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3CDF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239A PUSH2 0x2A31 JUMP JUMPDEST GT PUSH2 0x23A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23AC PUSH2 0x3568 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B9 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23D7 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2595 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x247C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0x80AC58CD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E4F545F45524337323100000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2463 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x261A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x25D0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2637 SWAP3 SWAP2 SWAP1 PUSH2 0x3C37 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0650831416F723858005CFEAE97A2D6F5E127D1E6AE8938574D1D73E7F4727C DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2702 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26E7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x275F PUSH1 0x64 PUSH2 0x2751 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xC SLOAD PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x11 SLOAD GT PUSH2 0x2772 JUMPI PUSH1 0x0 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x27D8 PUSH1 0x11 SLOAD PUSH2 0x27CA PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x28F4 DUP5 DUP5 PUSH2 0x385C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x2A27 PUSH2 0x2C9A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3C CALLER PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2A67 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2AD4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2A78 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2ACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D3F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2B51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2B5A JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFC PUSH1 0xA DUP4 PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C15 PUSH1 0xE SLOAD DUP4 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C2E PUSH1 0xF SLOAD DUP5 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2C45 DUP3 PUSH1 0xC SLOAD PUSH2 0x2DEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x11 SLOAD GT ISZERO PUSH2 0x2C83 JUMPI PUSH2 0x2C78 PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD PUSH9 0x10000000000000000 DUP5 MUL DUP2 PUSH2 0x2C72 JUMPI INVALID JUMPDEST DIV PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE POP PUSH2 0x2C94 JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH2 0x5460 PUSH2 0x2CB7 PUSH1 0x10 SLOAD DUP4 PUSH2 0x3B86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x2D0B JUMPI PUSH32 0x2CFCE469A63F2E9972B7F23DA751E6943ED2B091C10E40B5C43B5F6105BF20EA PUSH2 0x2CE6 PUSH2 0x1DD2 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH2 0x2D19 DUP3 PUSH1 0x9 SLOAD PUSH2 0x3B86 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2D28 JUMPI POP PUSH1 0x0 PUSH1 0x11 SLOAD GT JUMPDEST ISZERO PUSH2 0x2DE8 JUMPI PUSH1 0x0 PUSH2 0x2D7E PUSH3 0x15180 PUSH2 0x2D70 PUSH1 0x64 PUSH2 0x2D62 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xC SLOAD PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2D97 PUSH1 0x9 SLOAD DUP5 PUSH2 0x3B86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 MUL SWAP1 POP PUSH2 0x2DB0 DUP2 PUSH1 0xC SLOAD PUSH2 0x3B86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x2DD8 PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD PUSH9 0x10000000000000000 DUP5 MUL DUP2 PUSH2 0x2DD2 JUMPI INVALID JUMPDEST DIV PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2E69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x14 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x2ECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ED7 PUSH2 0x2A31 JUMP JUMPDEST GT ISZERO PUSH2 0x2EE6 JUMPI PUSH2 0x2EE5 PUSH2 0x14EE JUMP JUMPDEST JUMPDEST PUSH2 0x2F2F PUSH1 0x14 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2FBB PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x12 SLOAD MUL PUSH1 0x13 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x12 SLOAD MUL PUSH1 0x13 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3134 JUMPI POP PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x314B JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xD ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91C7D71A3AE3FB7CF61E00517BF4868E9E23D0BACE5E304CBC3B68DE5D85350E DUP6 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x3579 DUP3 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH9 0x10000000000000000 DUP2 MUL PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x35DF CALLER DUP4 PUSH2 0x385C JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x193A876AC91D11A4A0A71EBEF73B195BA55AA7C16D6755C93C21D973E692A02C DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x368B PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3853 PUSH2 0x2C9A JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x38F1 JUMPI POP PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x3908 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x392B DUP5 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST DUP2 PUSH2 0x3932 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x3941 DUP5 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB49BB132260F6AA1C86E2D2A3957C097216E6EC9B5FA15867289F058B4D297AC DUP6 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x39BD JUMPI POP PUSH1 0x11 SLOAD PUSH2 0x39BB DUP3 PUSH1 0x11 SLOAD PUSH2 0x2DEB JUMP JUMPDEST GT JUMPDEST PUSH2 0x39C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD GT ISZERO PUSH2 0x39E6 JUMPI DUP1 PUSH1 0x11 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x39EE JUMP JUMPDEST DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x39F7 DUP3 PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x3A40 PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x12 SLOAD MUL SWAP1 POP DUP1 PUSH1 0x13 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B9F JUMP JUMPDEST DUP2 DUP4 SUB SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3CB0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3CAF JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3C57 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3CBD SWAP2 SWAP1 PUSH2 0x3CC1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3CDA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3CC2 JUMP JUMPDEST POP SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20756E61626C6520 PUSH21 0x6F2073656E642076616C75652C2072656369706965 PUSH15 0x74206D617920686176652072657665 PUSH19 0x746564536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77A264697066735822122070 0xB3 0xB9 PUSH20 0x28E5066D7774E0528422FF8B2F026236016FE65C PUSH30 0xDF40594A56214E64736F6C63430007040033000000000000000000000000 ",
							"sourceMap": "237:21303:2:-:0;;;4538:562;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:17:5;897:12;:10;;;:12;;:::i;:::-;877:32;;928:9;919:6;;:18;;;;;;;;;;;;;;;;;;985:9;952:43;;981:1;952:43;;;;;;;;;;;;843:159;1716:1:6;1821:7;:22;;;;4656:1:2::1;4631:27;;:13;:27;;;;:64;;;;;4662:33;4681:13;4662:18;;;;;:33;;:::i;:::-;4631:64;4610:126;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4762:13;4747:12;;:28;;;;;;;;;;;;;;;;;;4807:13;4785:12;;:36;;;;;;;;;;;;;;;;;;4846:10;4832:11;;:24;;;;;;;;;;;;;;;;;;4947:9;4936:8;;:20;;;;;;;;;;;;;;;;;;4980:15;4966:10;:30;;;;5041:1;5031:7;:11;;;;5062:1;5052:7;:11;;;;5092:1;5074:15;:19;;;;4538:562:::0;;237:21303;;598:104:1;651:15;685:10;678:17;;598:104;:::o;726:413:0:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;237:21303:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xD7C3771D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBF3 JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0xC44 JUMPI DUP1 PUSH4 0xF6DB0DA0 EQ PUSH2 0xC5B JUMPI DUP1 PUSH4 0xFBAF1BBD EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0xFFAAD6A5 EQ PUSH2 0xD9B JUMPI DUP1 PUSH4 0xFFE6BBD8 EQ PUSH2 0xE0A JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0xD7C3771D EQ PUSH2 0xA84 JUMPI DUP1 PUSH4 0xE02E1E9C EQ PUSH2 0xAC5 JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0xB14 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0xB79 JUMPI DUP1 PUSH4 0xF2020275 EQ PUSH2 0xBC8 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0xAD7A672F GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xAECB6D28 EQ PUSH2 0x94C JUMPI DUP1 PUSH4 0xB03CF5A7 EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x9DC JUMPI DUP1 PUSH4 0xB9DB102A EQ PUSH2 0xA2B JUMPI DUP1 PUSH4 0xD3261592 EQ PUSH2 0xA56 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0x949E8ACD EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0xA01496DE EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8B0 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7D882097 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x7E6335C7 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x8086B8BA EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x81FCE645 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0x8620410B EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0x89375ABF EQ PUSH2 0x7AD JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x4B750334 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x537A39BB EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x603 JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH4 0x1F38B9CD GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x1F38B9CD EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x36599EAD EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x41C61383 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x51A JUMPI PUSH2 0x2E8 JUMP JUMPDEST DUP1 PUSH3 0x65318B EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x8560ACE EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x10D0FFDD EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x1924063E EQ PUSH2 0x3F7 JUMPI PUSH2 0x2E8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2E8 JUMPI PUSH2 0x290 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH2 0xE35 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3C2BD1B3F5CA07AFB09FBEE41AC43DA2B98D9C2E9832673052E546BD1D4C091D CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x437 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1076 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x14EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x571 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x1830 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x618 PUSH2 0x199D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xE PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x744 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x729 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76C PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x797 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C2 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7ED PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x859 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89A PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x909 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x936 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x961 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA15 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA40 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6B PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA99 PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAFE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB63 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBDD PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC42 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x219E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC59 PUSH2 0x2390 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xCAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1F PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D05 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x14 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x12 SLOAD MUL SUB DUP2 PUSH2 0x1007 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD DUP3 GT ISZERO PUSH2 0x1026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x1045 PUSH2 0x103E DUP4 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1053 DUP4 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1080 PUSH2 0x1D6F JUMP JUMPDEST GT PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x14 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x10ED DUP5 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST DUP2 PUSH2 0x10F4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x1102 CALLER PUSH2 0x13BE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x110F JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x111B DUP6 DUP5 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP PUSH2 0x1129 PUSH1 0x11 SLOAD DUP7 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0x1178 PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP7 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH9 0x10000000000000000 DUP3 MUL DUP7 PUSH1 0x12 SLOAD MUL ADD SWAP1 POP DUP1 PUSH1 0x13 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1227 DUP5 PUSH2 0x2BE6 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90EBB005D68EFEE044927E1E77E1FD0CECC508368AA72C39250A787EED5F0A70 DUP8 DUP5 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x13B6 PUSH2 0x2C9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x14C7 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13E7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x148F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 ADD SWAP3 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13CD JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x14DC JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F8 PUSH2 0x2A31 JUMP JUMPDEST GT PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1511 PUSH2 0x2A31 JUMP JUMPDEST SWAP1 POP PUSH9 0x10000000000000000 DUP2 MUL PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1612 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH2 0x1686 PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B091269E929DF55D64D6EA7E9CADBE4FB38DCE5CCDC995767BC515030DBFBBF DUP3 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x179C PUSH2 0x2C9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0x17C8 PUSH2 0x17C1 DUP4 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17D6 DUP4 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1838 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1856 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D3 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19F1 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH2 0x1A8F DUP4 DUP6 PUSH2 0x2DEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x1B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x54454E5F504F5254494F4E535F524551554952455F4449564953494F4E000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH32 0x677017FA3A0FE0F50A95E6024C5B688F2B14A4696C4A897C459715CABFC1C03A DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B69 PUSH2 0x3BA5 JUMP JUMPDEST PUSH2 0x1B71 PUSH2 0x3BC8 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1C52 PUSH2 0x3BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x140 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x160 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x180 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x1A0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0x100 ADD MLOAD DUP2 MSTORE POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0x1D27 PUSH2 0x1D20 DUP4 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D35 DUP4 DUP4 PUSH2 0x2DEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5460 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7A CALLER PUSH2 0x17E7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DB6 PUSH2 0x1D6F JUMP JUMPDEST GT PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DCA DUP4 DUP4 PUSH2 0x2E7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE CALLER DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F4F PUSH2 0x1F48 DUP5 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2ADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F5D DUP5 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2057 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA1788C3E861A58A47F0D46073B13C4D66EFCC259714744F920D1AFE7B8DEE5 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xC SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21A6 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21C4 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x224D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x22D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3CDF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239A PUSH2 0x2A31 JUMP JUMPDEST GT PUSH2 0x23A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23AC PUSH2 0x3568 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B9 PUSH2 0x2E73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23D7 PUSH2 0x1D46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2595 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x247C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH4 0x80AC58CD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E4F545F45524337323100000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2463 JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x261A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x25D0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2637 SWAP3 SWAP2 SWAP1 PUSH2 0x3C37 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0650831416F723858005CFEAE97A2D6F5E127D1E6AE8938574D1D73E7F4727C DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2702 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26E7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x275F PUSH1 0x64 PUSH2 0x2751 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xC SLOAD PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x11 SLOAD GT PUSH2 0x2772 JUMPI PUSH1 0x0 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x27D8 PUSH1 0x11 SLOAD PUSH2 0x27CA PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x28F4 DUP5 DUP5 PUSH2 0x385C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x2A27 PUSH2 0x2C9A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3C CALLER PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2A67 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2AD4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2A78 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2ACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D3F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2B51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2B5A JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFC PUSH1 0xA DUP4 PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C15 PUSH1 0xE SLOAD DUP4 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C2E PUSH1 0xF SLOAD DUP5 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2C45 DUP3 PUSH1 0xC SLOAD PUSH2 0x2DEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x11 SLOAD GT ISZERO PUSH2 0x2C83 JUMPI PUSH2 0x2C78 PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD PUSH9 0x10000000000000000 DUP5 MUL DUP2 PUSH2 0x2C72 JUMPI INVALID JUMPDEST DIV PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE POP PUSH2 0x2C94 JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH2 0x5460 PUSH2 0x2CB7 PUSH1 0x10 SLOAD DUP4 PUSH2 0x3B86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x2D0B JUMPI PUSH32 0x2CFCE469A63F2E9972B7F23DA751E6943ED2B091C10E40B5C43B5F6105BF20EA PUSH2 0x2CE6 PUSH2 0x1DD2 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH2 0x2D19 DUP3 PUSH1 0x9 SLOAD PUSH2 0x3B86 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2D28 JUMPI POP PUSH1 0x0 PUSH1 0x11 SLOAD GT JUMPDEST ISZERO PUSH2 0x2DE8 JUMPI PUSH1 0x0 PUSH2 0x2D7E PUSH3 0x15180 PUSH2 0x2D70 PUSH1 0x64 PUSH2 0x2D62 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xC SLOAD PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ADA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2D97 PUSH1 0x9 SLOAD DUP5 PUSH2 0x3B86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 MUL SWAP1 POP PUSH2 0x2DB0 DUP2 PUSH1 0xC SLOAD PUSH2 0x3B86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x2DD8 PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD PUSH9 0x10000000000000000 DUP5 MUL DUP2 PUSH2 0x2DD2 JUMPI INVALID JUMPDEST DIV PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2E69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x14 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x2ECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ED7 PUSH2 0x2A31 JUMP JUMPDEST GT ISZERO PUSH2 0x2EE6 JUMPI PUSH2 0x2EE5 PUSH2 0x14EE JUMP JUMPDEST JUMPDEST PUSH2 0x2F2F PUSH1 0x14 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2FBB PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x12 SLOAD MUL PUSH1 0x13 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x12 SLOAD MUL PUSH1 0x13 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3134 JUMPI POP PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x314B JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xD ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91C7D71A3AE3FB7CF61E00517BF4868E9E23D0BACE5E304CBC3B68DE5D85350E DUP6 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x3579 DUP3 PUSH2 0xF6F JUMP JUMPDEST SWAP1 POP PUSH9 0x10000000000000000 DUP2 MUL PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x35DF CALLER DUP4 PUSH2 0x385C JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x193A876AC91D11A4A0A71EBEF73B195BA55AA7C16D6755C93C21D973E692A02C DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x368B PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3853 PUSH2 0x2C9A JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x38F1 JUMPI POP PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x3908 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x392B DUP5 PUSH1 0xA PUSH1 0xFF AND PUSH2 0x2A54 JUMP JUMPDEST DUP2 PUSH2 0x3932 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x3941 DUP5 DUP4 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB49BB132260F6AA1C86E2D2A3957C097216E6EC9B5FA15867289F058B4D297AC DUP6 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x39BD JUMPI POP PUSH1 0x11 SLOAD PUSH2 0x39BB DUP3 PUSH1 0x11 SLOAD PUSH2 0x2DEB JUMP JUMPDEST GT JUMPDEST PUSH2 0x39C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD GT ISZERO PUSH2 0x39E6 JUMPI DUP1 PUSH1 0x11 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x39EE JUMP JUMPDEST DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x39F7 DUP3 PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x3A40 PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x12 SLOAD MUL SWAP1 POP DUP1 PUSH1 0x13 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B9F JUMP JUMPDEST DUP2 DUP4 SUB SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3CB0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3CAF JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3C57 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3CBD SWAP2 SWAP1 PUSH2 0x3CC1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3CDA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3CC2 JUMP JUMPDEST POP SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20756E61626C6520 PUSH21 0x6F2073656E642076616C75652C2072656369706965 PUSH15 0x74206D617920686176652072657665 PUSH19 0x746564536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77A264697066735822122070 0xB3 0xB9 PUSH20 0x28E5066D7774E0528422FF8B2F026236016FE65C PUSH30 0xDF40594A56214E64736F6C63430007040033000000000000000000000000 ",
							"sourceMap": "237:21303:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5269:41;5287:11;;;;;;;;;;;5300:9;5269:17;:41::i;:::-;5337:10;5325:51;;;5349:9;5360:15;5325:51;;;;;;;;;;;;;;;;;;;;;;;;237:21303;;;;;11046:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;587:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12137:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10945:95;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1701:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1495:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8129:1525;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10024:367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1102:23;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7217:890;;;;;;;;;;;;;:::i;:::-;;11292:266;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;877:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10603:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1710:145:5;;;;;;;;;;;;;:::i;:::-;;394:26:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1131:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13496:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12488:597;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11564:264;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1556:49;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1078:85:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10397:95:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;699:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1470:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9676:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10824:115;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1213:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;772:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6126:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;975:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1246:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;732:34;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11834:297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10714:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5529:576;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;854:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2004:240:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7123:73:2;;;;;;;;;;;;;:::i;:::-;;13968:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13091:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6259:842;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10498:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2056:391:0;2170:6;2145:21;:31;;2137:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2299:12;2317:9;:14;;2340:6;2317:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:54;;;2370:7;2362:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:391;;;:::o;11046:240:2:-;11103:7;1395;11236:10;:17;11247:5;11236:17;;;;;;;;;;;;;;;;11195:10;:17;11206:5;11195:17;;;;;;;;;;;;;;;;11177:15;;:35;11168:85;11141:138;;;;;;11122:157;;11046:240;;;:::o;587:30::-;;;;:::o;12137:345::-;12222:7;12260:18;;12249:7;:29;;12241:38;;;;;;12289:15;12307:7;12289:25;;12324:15;12342:49;12355:30;12368:7;1349:2;12355:30;;:12;:30::i;:::-;12387:3;12342:12;:49::i;:::-;12324:67;;12401:16;12420:30;12433:7;12442;12420:12;:30::i;:::-;12401:49;;12467:8;12460:15;;;;;12137:345;;;:::o;10945:95::-;10989:7;11015:18;;11008:25;;10945:95;:::o;1701:29::-;;;;:::o;1495:19::-;;;;:::o;8129:1525::-;2106:1;2093:10;:8;:10::i;:::-;:14;2085:23;;;;;;8193:13:::1;8209:10;8193:26;;8248:10;:17;8259:5;8248:17;;;;;;;;;;;;;;;;8237:7;:28;;8229:37;;;::::0;::::1;;8277:27;8340:3;8307:30;8320:7;1349:2;8307:30;;:12;:30::i;:::-;:36;;;;;;8277:66;;8370:13;8386:25;8400:10;8386:13;:25::i;:::-;8370:41;;8451:8;8447:129;;;8559:1;8537:23;;8447:129;8640:21;8664:42;8677:7;8686:19;8664:12;:42::i;:::-;8640:66;;8737:41;8750:18;;8770:7;8737:12;:41::i;:::-;8716:18;:62;;;;8808:40;8821:10;:17;8832:5;8821:17;;;;;;;;;;;;;;;;8840:7;8808:12;:40::i;:::-;8788:10;:17;8799:5;8788:17;;;;;;;;;;;;;;;:60;;;;8930:22;1395:7;9006:12;:24;8995:7;8977:15;;:25;:54;8930:111;;9072:15;9051:10;:17;9062:5;9051:17;;;;;;;;;;;;;;;;:36;;;;;;;;;;;9168:33;9181:19;9168:12;:33::i;:::-;9284:5;9273:57;;;9291:7;9300:12;9314:15;9273:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9405:5;9383:179;;;9424:10;:17;9435:5;9424:17;;;;;;;;;;;;;;;:27;;;9465:10;:17;9476:5;9465:17;;;;;;;;;;;;;;;;9496:10;:17;9507:5;9496:17;;;;;;;;;;;;;;;:27;;;9537:15;9383:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9631:12;:10;:12::i;:::-;2118:1;;;;;8129:1525:::0;:::o;10024:367::-;10083:13;10108:9;10120:1;10108:13;;10131:17;10162:6;10170:1;10162:9;;10158:135;10177:4;:11;;;;10173:1;:15;10158:135;;;10228:4;10233:1;10228:7;;;;;;;;;;;;;;;;;;;;;;;;;10208:28;;10256:9;:19;;;10276:5;10256:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10251:31;;;;10190:3;;;;;;;10158:135;;;;10310:15;;10305:1;:20;10301:62;;10348:4;10341:11;;;;;;10301:62;10379:5;10372:12;;;;10024:367;;;;:::o;1102:23::-;;;;:::o;7217:890::-;2241:1;2226:12;:10;:12::i;:::-;:16;2218:25;;;;;;7265:13:::1;7281:10;7265:26;;7301:18;7322:12;:10;:12::i;:::-;7301:33;;1395:7;7458:10;:22;7428:10;:17;7439:5;7428:17;;;;;;;;;;;;;;;;:53;;;;;;;;;;;7545:12;;;;;;;;;;;:21;;;7567:5;7574:10;7545:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;7690:87;7716:10;:17;7727:5;7716:17;;;;;;;;;;;;;;;:27;;;7757:10;7690:12;:87::i;:::-;7660:10;:17;7671:5;7660:17;;;;;;;;;;;;;;;:27;;:117;;;;7819:1;7787:10;:17;7798:5;7787:17;;;;;;;;;;;;;;;:28;;;:33;;;;;;;;;;;7889:1;7877:8;;:13;;;;;;;;;;;7915:10;7900:11;;:25;;;;;;;;;;;7983:5;7972:46;;;7990:10;8002:15;7972:46;;;;;;;;;;;;;;;;;;;;;;;;8088:12;:10;:12::i;:::-;2253:1;;7217:890::o:0;11292:266::-;11335:7;11354:15;11372:4;11354:22;;11386:18;11407:49;11420:30;11433:7;1349:2;11420:30;;:12;:30::i;:::-;11452:3;11407:12;:49::i;:::-;11386:70;;11466:20;11489:33;11502:7;11511:10;11489:12;:33::i;:::-;11466:56;;11539:12;11532:19;;;;;11292:266;:::o;877:20::-;;;;:::o;10603:105::-;10658:7;10684:10;:17;10695:5;10684:17;;;;;;;;;;;;;;;;10677:24;;10603:105;;;:::o;1710:145:5:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:1:::1;1779:40;;1800:6;::::0;::::1;;;;;;;;1779:40;;;;;;;;;;;;1846:1;1829:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1710:145::o:0;394:26:2:-;;;;;;;;;;;;;:::o;1131:25::-;;;;:::o;13496:410::-;13595:13;1301:12:5;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13648:2:2::1;13628:16;13638:5;13628;:9;;:16;;;;:::i;:::-;:22;13620:64;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;13738:5;13728:7;:15;;;;13763:5;13753:7;:15;;;;13834:44;13848:5;13855;13862:15;13834:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13895:4;13888:11;;13496:410:::0;;;;:::o;12488:597::-;12543:18;;:::i;:::-;12573:16;;:::i;:::-;12592:10;:17;12603:5;12592:17;;;;;;;;;;;;;;;12573:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12619:31;;:::i;:::-;:430;;;;;;;;12667:1;:11;;;12619:430;;;;12692:1;:11;;;12619:430;;;;12717:1;:10;;;12619:430;;;;12741:1;:12;;;12619:430;;;;12767:1;:13;;;12619:430;;;;12794:1;:19;;;12619:430;;;;12827:1;:16;;;12619:430;;;;12857:1;:11;;;12619:430;;;;12882:1;:11;;;12619:430;;;;12907:1;:14;;;12619:430;;;;12935:1;:12;;;12619:430;;;;12961:1;:20;;;12619:430;;;;12995:1;:17;;;12619:430;;;;13026:1;:13;;;12619:430;;;;;13066:12;13059:19;;;;12488:597;;;:::o;1611:51::-;1653:9;1611:51;:::o;11564:264::-;11605:7;11624:15;11642:4;11624:22;;11656:18;11677:49;11690:30;11703:7;1349:2;11690:30;;:12;:30::i;:::-;11722:3;11677:12;:49::i;:::-;11656:70;;11736:20;11759:33;11772:7;11781:10;11759:12;:33::i;:::-;11736:56;;11809:12;11802:19;;;;;11564:264;:::o;1556:49::-;1598:7;1556:49;:::o;1078:85:5:-;1124:7;1150:6;;;;;;;;;;;1143:13;;1078:85;:::o;10397:95:2:-;10438:7;10464:21;10474:10;10464:9;:21::i;:::-;10457:28;;10397:95;:::o;699:27::-;;;;;;;;;;;;;:::o;1470:19::-;;;;:::o;9676:159::-;9776:4;2106:1;2093:10;:8;:10::i;:::-;:14;2085:23;;;;;;9799:29:::1;9815:3;9820:7;9799:15;:29::i;:::-;9792:36;;9676:159:::0;;;;:::o;10824:115::-;10869:7;10895:12;;;;;;;;;;;:22;;;10926:4;10895:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10888:44;;10824:115;:::o;1213:27::-;;;;:::o;772:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6126:110::-;6173:7;6199:30;6209:10;6221:7;6199:9;:30::i;:::-;6192:37;;6126:110;;;:::o;975:22::-;;;;:::o;1246:21::-;;;;;;;;;;;;;:::o;732:34::-;;;;;;;;;;;;;:::o;11834:297::-;11919:7;11938:15;11956:49;11969:30;11982:7;1349:2;11969:30;;:12;:30::i;:::-;12001:3;11956:12;:49::i;:::-;11938:67;;12015:16;12034:30;12047:7;12056;12034:12;:30::i;:::-;12015:49;;12074:15;12092:8;12074:26;;12117:7;12110:14;;;;;11834:297;;;:::o;10714:104::-;10772:7;10798:5;:13;;;10791:20;;10714:104;;;:::o;5529:576::-;5575:7;5672:12;;;;;;;;;;;:25;;;5698:10;5718:4;5725:7;5672:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5664:70;;;;;;5815:7;5796:15;;:26;;;;;;;;;;;5871:1;5832:10;:22;5843:10;5832:22;;;;;;;;;;;;;;;:35;;;:40;;;;;;;;;;;5920:7;5882:10;:22;5893:10;5882:22;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;6029:10;6020:46;;;6041:7;6050:15;6020:46;;;;;;;;;;;;;;;;;;;;;;;;6083:15;;6076:22;;5529:576;;;:::o;854:17::-;;;;:::o;2004:240:5:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2112:1:::1;2092:22;;:8;:22;;;;2084:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:8;2172:38;;2193:6;::::0;::::1;;;;;;;;2172:38;;;;;;;;;;;;2229:8;2220:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2004:240:::0;:::o;7123:73:2:-;2241:1;2226:12;:10;:12::i;:::-;:16;2218:25;;;;;;7172:17:::1;:15;:17::i;:::-;;7123:73::o:0;13968:524::-;14062:13;1301:12:5;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14087:6:2::1;14083:166;14102:4;:11;;;;14098:1;:15;14083:166;;;14181:9;14191:1;14181:12;;;;;;;;;;;;;;:30;;;14212:10;14181:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;14173:65;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;14115:3;;;;;;;14083:166;;;;14258:28;14289:4;14258:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14310:9;14303:4;:16;;;;;;;;;;;;:::i;:::-;;14367:10;14335:129;;;14391:11;14416:9;14439:15;14335:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14481:4;14474:11;;;13968:524:::0;;;:::o;13091:283::-;13150:7;13169:13;13185:38;13219:3;13185:29;13205:8;;;;;;;;;;;13185:29;;:15;;:19;;:29;;;;:::i;:::-;:33;;:38;;;;:::i;:::-;13169:54;;13274:1;13253:18;;:22;13252:115;;13366:1;13252:115;;;13295:52;13328:18;;13295:28;13305:10;:17;13316:5;13305:17;;;;;;;;;;;;;;;;13295:5;:9;;:28;;;;:::i;:::-;:32;;:52;;;;:::i;:::-;13252:115;13233:134;;;13091:283;;;:::o;6259:842::-;6323:7;6420:12;;;;;;;;;;;:25;;;6446:10;6466:4;6473:7;6420:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6412:70;;;;;;6561:7;6544:13;;:24;;;;;;;;;;;6631:11;6645:30;6660:5;6667:7;6645:14;:30::i;:::-;6631:44;;6750:5;6728:179;;;6769:10;:17;6780:5;6769:17;;;;;;;;;;;;;;;:27;;;6810:10;:17;6821:5;6810:17;;;;;;;;;;;;;;;;6841:10;:17;6852:5;6841:17;;;;;;;;;;;;;;;:27;;;6882:15;6728:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6982:12;:10;:12::i;:::-;7088:6;7081:13;;;6259:842;;;;:::o;10498:99::-;10541:7;10567:23;10579:10;10567:11;:23::i;:::-;10560:30;;10498:99;:::o;726:413:0:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;3538:215:8:-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;14662:737:2:-;14712:17;14732:11;14740:2;14732:3;:7;;:11;;;;:::i;:::-;14712:31;;14754:16;14774:22;14788:7;;14774:9;:13;;:22;;;;:::i;:::-;14754:43;;14828:16;14848:22;14862:7;;14848:9;:13;;:22;;;;:::i;:::-;14828:43;;14920:29;14940:8;14920:15;;:19;;:29;;;;:::i;:::-;14902:15;:47;;;;15049:1;15028:18;;:22;15024:369;;;15132:120;15162:15;;15220:18;;1395:7;15196:8;:20;15195:43;;;;;;15132:12;:120::i;:::-;15114:15;:138;;;;15024:369;;;15374:8;15355:15;;:27;;;;;;;;;;;15024:369;14662:737;;;;:::o;15440:1242::-;15480:22;15506:15;15480:42;;1598:7;15587:41;15613:14;;15587:17;:25;;:41;;;;:::i;:::-;:59;15583:278;;;15702:43;15711:14;:12;:14::i;:::-;15727:17;15702:43;;;;;;;;;;;;;;;;;;;;;;;;15833:17;15816:14;:34;;;;15583:278;1653:9;15933:47;15950:17;15969:10;;15933:16;:47::i;:::-;:65;:103;;;;;16035:1;16014:18;;:22;15933:103;15916:760;;;16108:13;16124:82;16184:8;16124:38;16158:3;16124:29;16144:8;;;;;;;;;;;16124:29;;:15;;:19;;:29;;;;:::i;:::-;:33;;:38;;;;:::i;:::-;:42;;:82;;;;:::i;:::-;16108:98;;16220:14;16245:37;16271:10;;16245:17;:25;;:37;;;;:::i;:::-;16237:5;:45;16220:62;;16391:31;16415:6;16391:15;;:23;;:31;;;;:::i;:::-;16373:15;:49;;;;16454:118;16484:15;;16540:18;;1395:7;16518:6;:18;16517:41;;;;;;16454:12;:118::i;:::-;16436:15;:136;;;;16648:17;16635:10;:30;;;;15916:760;;;15440:1242;:::o;2690:175:8:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;598:104:1:-;651:15;685:10;678:17;;598:104;:::o;19569:1969:2:-;19671:13;19696:15;19714:10;19696:28;;19753:10;:19;19764:7;19753:19;;;;;;;;;;;;;;;;19742:7;:30;;19734:39;;;;;;19888:1;19873:12;:10;:12::i;:::-;:16;19869:56;;;19905:9;:7;:9::i;:::-;19869:56;19989:42;20002:10;:19;20013:7;20002:19;;;;;;;;;;;;;;;;20023:7;19989:12;:42::i;:::-;19967:10;:19;19978:7;19967:19;;;;;;;;;;;;;;;:64;;;;20066:45;20079:10;:22;20090:10;20079:22;;;;;;;;;;;;;;;;20103:7;20066:12;:45::i;:::-;20041:10;:22;20052:10;20041:22;;;;;;;;;;;;;;;:70;;;;20233:7;20215:15;;:25;20183:10;:19;20194:7;20183:19;;;;;;;;;;;;;;;;:58;;;;;;;;;;;20304:7;20286:15;;:25;20251:10;:22;20262:10;20251:22;;;;;;;;;;;;;;;;:61;;;;;;;;;;;20451:1;20415:10;:22;20426:10;20415:22;;;;;;;;;;;;;;;:32;;;:37;:95;;;;;20509:1;20468:10;:22;20479:10;20468:22;;;;;;;;;;;;;;;:37;;;:42;20415:95;20398:158;;;20544:1;20535:5;;:10;;;;;;;;;;;20398:158;20634:1;20592:10;:19;20603:7;20592:19;;;;;;;;;;;;;;;:38;;;:43;;;;;;;;;;;20686:7;20645:10;:19;20656:7;20645:19;;;;;;;;;;;;;;;:37;;;:48;;;;;;;;;;;20744:7;20703:10;:22;20714:10;20703:22;;;;;;;;;;;;;;;:37;;;:48;;;;;;;;;;;20803:1;20761:10;:22;20772:10;20761:22;;;;;;;;;;;;;;;:38;;;:43;;;;;;;;;;;20868:1;20856:8;;:13;;;;;;;;;;;20955:10;20935:57;;20946:7;20935:57;;;20967:7;20976:15;20935:57;;;;;;;;;;;;;;;;;;;;;;;;21078:7;21056:187;;;21099:10;:19;21110:7;21099:19;;;;;;;;;;;;;;;:29;;;21142:10;:19;21153:7;21142:19;;;;;;;;;;;;;;;;21175:10;:19;21186:7;21175:19;;;;;;;;;;;;;;;:29;;;21218:15;21056:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21332:10;21310:199;;;21356:10;:22;21367:10;21356:22;;;;;;;;;;;;;;;:32;;;21402:10;:22;21413:10;21402:22;;;;;;;;;;;;;;;;21438:10;:22;21449:10;21438:22;;;;;;;;;;;;;;;:32;;;21484:15;21310:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21527:4;21520:11;;;19569:1969;;;;:::o;18344:1178::-;18389:7;18408:13;18424:10;18408:26;;18510:18;18531;18543:5;18531:11;:18::i;:::-;18510:39;;1395:7;18589:10;:22;18559:10;:17;18570:5;18559:17;;;;;;;;;;;;;;;;:53;;;;;;;;;;;18767:15;18785:38;18800:10;18812;18785:14;:38::i;:::-;18767:56;;18881:5;18870:55;;;18888:10;18900:7;18909:15;18870:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19003:88;19029:10;:17;19040:5;19029:17;;;;;;;;;;;;;;;:28;;;19071:10;19003:12;:88::i;:::-;18972:10;:17;18983:5;18972:17;;;;;;;;;;;;;;;:28;;:119;;;;19134:1;19101:10;:17;19112:5;19101:17;;;;;;;;;;;;;;;:29;;;:34;;;;;;;;;;;19210:5;19188:179;;;19229:10;:17;19240:5;19229:17;;;;;;;;;;;;;;;:27;;;19270:10;:17;19281:5;19270:17;;;;;;;;;;;;;;;;19301:10;:17;19312:5;19301:17;;;;;;;;;;;;;;;:27;;;19342:15;19188:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19446:12;:10;:12::i;:::-;19508:7;19501:14;;;;;18344:1178;:::o;16728:1576::-;16829:7;16976:1;16940:10;:22;16951:10;16940:22;;;;;;;;;;;;;;;:32;;;:37;:95;;;;;17034:1;16993:10;:22;17004:10;16993:22;;;;;;;;;;;;;;;:37;;;:42;16940:95;16923:158;;;17069:1;17060:5;;:10;;;;;;;;;;;16923:158;17131:1;17119:8;;:13;;;;;;;;;;;17148:27;17211:3;17178:30;17191:7;1349:2;17178:30;;:12;:30::i;:::-;:36;;;;;;17148:66;;17226:17;17246:42;17259:7;17268:19;17246:12;:42::i;:::-;17226:62;;17353:10;17343:56;;;17365:7;17374;17383:15;17343:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17508:1;17498:7;:11;:93;;;;;17573:18;;17529:41;17542:7;17551:18;;17529:12;:41::i;:::-;:62;17498:93;17477:124;;;;;;17636:1;17615:18;;:22;17611:141;;;17675:7;17653:18;;:29;;;;;;;;;;;17611:141;;;17734:7;17713:18;:28;;;;17611:141;17817:33;17830:19;17817:12;:33::i;:::-;17885:45;17898:10;:22;17909:10;17898:22;;;;;;;;;;;;;;;;17922:7;17885:12;:45::i;:::-;17860:10;:22;17871:10;17860:22;;;;;;;;;;;;;;;:70;;;;17971:22;18023:7;18005:15;;:25;17971:60;;18095:15;18069:10;:22;18080:10;18069:22;;;;;;;;;;;;;;;;:41;;;;;;;;;;;18156:7;18120:10;:22;18131:10;18120:22;;;;;;;;;;;;;;;:32;;;:43;;;;;;;;;;;18209:1;18173:10;:22;18184:10;18173:22;;;;;;;;;;;;;;;:32;;;:37;;;;;;;;;;;18290:7;18283:14;;;;;16728:1576;;;;:::o;7288:165:8:-;7344:4;7368:1;7364;:5;7360:87;;;7392:1;7385:8;;;;7360:87;7435:1;7431;:5;7424:12;;7288:165;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3153000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accountOf(address)": "infinite",
								"balanceOf(address)": "1286",
								"bnbReceiver()": "1092",
								"buyPrice()": "724",
								"calculateSharesReceived(uint256)": "infinite",
								"calculateTokensReceived(uint256)": "infinite",
								"checkImmunity(address)": "infinite",
								"compound()": "infinite",
								"dailyEstimate(address)": "infinite",
								"deposit(uint256)": "infinite",
								"depositTo(address,uint256)": "infinite",
								"dividendsOf(address)": "2972",
								"donate(uint256)": "infinite",
								"dripPoolBalance()": "1072",
								"dripRate()": "1202",
								"forDivs()": "1051",
								"forPool()": "1117",
								"harvest()": "infinite",
								"jpeg(uint256)": "2100",
								"lastPayout()": "1138",
								"lastRebaseTime()": "1140",
								"myEarnings()": "3028",
								"myTokens()": "1213",
								"owner()": "1101",
								"payoutFrequency()": "316",
								"rebaseFrequency()": "360",
								"renounceOwnership()": "24441",
								"requiredBalance()": "1074",
								"sellPrice()": "624",
								"setFeeSplit(uint256,uint256)": "infinite",
								"setImmunityToken(address[])": "infinite",
								"stakingToken()": "1181",
								"tokenAddress()": "1137",
								"tokenBalance(address)": "1101",
								"totalBalance()": "infinite",
								"totalClaims()": "1117",
								"totalDeposits()": "1050",
								"totalSupply()": "1126",
								"totalTxs()": "1073",
								"transfer(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"users()": "1138",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_compoundTokens()": "infinite",
								"_depositTokens(address,uint256)": "infinite",
								"_transferTokens(address,uint256)": "infinite",
								"allocateFees(uint256)": "infinite",
								"distribute()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 877,
									"end": 894,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 897,
									"end": 909,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 897,
									"end": 909,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 877,
									"end": 909,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 877,
									"end": 909,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 937,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 925,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 925,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 919,
									"end": 937,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 919,
									"end": 937,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 919,
									"end": 937,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 919,
									"end": 937,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 994,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 981,
									"end": 982,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 952,
									"end": 995,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 952,
									"end": 995,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1002,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4657,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4658,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4631,
									"end": 4658,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4658,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4631,
									"end": 4658,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4658,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4658,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4662,
									"end": 4695,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 4681,
									"end": 4694,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4662,
									"end": 4680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4662,
									"end": 4680,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4662,
									"end": 4680,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4662,
									"end": 4680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551825"
								},
								{
									"begin": 4662,
									"end": 4680,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4662,
									"end": 4695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4662,
									"end": 4695,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 4662,
									"end": 4695,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4662,
									"end": 4695,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 4662,
									"end": 4695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 4631,
									"end": 4695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "494E56414C49445F414444524553530000000000000000000000000000000000"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 4610,
									"end": 4736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4762,
									"end": 4775,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4759,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4747,
									"end": 4759,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4747,
									"end": 4775,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4807,
									"end": 4820,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4797,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4785,
									"end": 4797,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4785,
									"end": 4821,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4846,
									"end": 4856,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4843,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 4832,
									"end": 4843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4947,
									"end": 4956,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4944,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 4936,
									"end": 4944,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4980,
									"end": 4995,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4976,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 4966,
									"end": 4996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4996,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4996,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5042,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5031,
									"end": 5038,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 5031,
									"end": 5042,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5031,
									"end": 5042,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5031,
									"end": 5042,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5031,
									"end": 5042,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5062,
									"end": 5063,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5052,
									"end": 5059,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 5052,
									"end": 5063,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5063,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5063,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5063,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5092,
									"end": 5093,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5074,
									"end": 5089,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5074,
									"end": 5093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5074,
									"end": 5093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5074,
									"end": 5093,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5074,
									"end": 5093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 5100,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 786,
									"end": 790,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 989,
									"end": 1001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1128,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 21540,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b3b97328e5066d7774e0528422ff8b2f026236016fe65c7ddf40594a56214e64736f6c63430007040033",
									".code": [
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "D7C3771D"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "F69E2046"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "F6DB0DA0"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "FBAF1BBD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "FFAAD6A5"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "FFE6BBD8"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "D7C3771D"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "E02E1E9C"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "EEDC966A"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "F14FAF6F"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "F2020275"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "AD7A672F"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "AD7A672F"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "AECB6D28"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "B03CF5A7"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "B6B55F25"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "B9DB102A"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "D3261592"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "949E8ACD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "9D76EA58"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "A01496DE"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "4B750334"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "7D882097"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "7D882097"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "7E6335C7"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "8086B8BA"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "81FCE645"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "8620410B"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "89375ABF"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "4B750334"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "537A39BB"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "72F702F3"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "1F38B9CD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "1F38B9CD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "36599EAD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "41C61383"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "4641257D"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "65318B"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "8560ACE"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "10D0FFDD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "1924063E"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5269,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5269,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5269,
											"end": 5310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5269,
											"end": 5310,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5269,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5347,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "3C2BD1B3F5CA07AFB09FBEE41AC43DA2B98D9C2E9832673052E546BD1D4C091D"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5375,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5376,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 21540,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 420,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2166,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2137,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "3A"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH data",
											"source": 0,
											"value": "51DDAA38748C0A1144620FB5BFE8EDAB31EA437571AD591A7734BBFD0429AEAE"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "3A"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2362,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000"
										},
										{
											"begin": 11236,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11205,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11211,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11177,
											"end": 11192,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 11177,
											"end": 11192,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11177,
											"end": 11212,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11279,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11122,
											"end": 11279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11122,
											"end": 11279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11286,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 587,
											"end": 617,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 617,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12222,
											"end": 12229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12249,
											"end": 12256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12249,
											"end": 12278,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12249,
											"end": 12278,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 12241,
											"end": 12279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12289,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12289,
											"end": 12314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12289,
											"end": 12314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12324,
											"end": 12339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12342,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12355,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12368,
											"end": 12375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 12355,
											"end": 12385,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12355,
											"end": 12385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12355,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12355,
											"end": 12385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12355,
											"end": 12385,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12355,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12387,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12342,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12342,
											"end": 12391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12342,
											"end": 12391,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12342,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12324,
											"end": 12391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12324,
											"end": 12391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12420,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 12420,
											"end": 12450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12420,
											"end": 12450,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 12420,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12475,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12137,
											"end": 12482,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10989,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 11040,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1730,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2107,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8193,
											"end": 8206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8219,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8193,
											"end": 8219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8193,
											"end": 8219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8258,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8264,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8244,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8265,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8277,
											"end": 8304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8343,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8307,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8320,
											"end": 8327,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 8307,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8307,
											"end": 8337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8307,
											"end": 8337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8337,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8307,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8343,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8277,
											"end": 8343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8277,
											"end": 8343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8400,
											"end": 8410,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8386,
											"end": 8411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8386,
											"end": 8411,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8386,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8447,
											"end": 8576,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8447,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8447,
											"end": 8576,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8537,
											"end": 8560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8447,
											"end": 8576,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8447,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8677,
											"end": 8684,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8705,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8664,
											"end": 8706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8664,
											"end": 8706,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8664,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8750,
											"end": 8768,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 8750,
											"end": 8768,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8770,
											"end": 8777,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8737,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8737,
											"end": 8778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8737,
											"end": 8778,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8737,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 8716,
											"end": 8778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8778,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8821,
											"end": 8831,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8837,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8821,
											"end": 8838,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 8847,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8808,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8798,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8804,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8848,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8788,
											"end": 8848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8930,
											"end": 8952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000"
										},
										{
											"begin": 9006,
											"end": 9018,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9006,
											"end": 9030,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9002,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 8992,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 8977,
											"end": 8992,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 9002,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 9031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8930,
											"end": 9041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8930,
											"end": 9041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9061,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9067,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9168,
											"end": 9201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9168,
											"end": 9201,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9168,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9284,
											"end": 9289,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "90EBB005D68EFEE044927E1E77E1FD0CECC508368AA72C39250A787EED5F0A70"
										},
										{
											"begin": 9291,
											"end": 9298,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9312,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9329,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9273,
											"end": 9330,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9405,
											"end": 9410,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177"
										},
										{
											"begin": 9424,
											"end": 9434,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9440,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9441,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9451,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9475,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9481,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9506,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9512,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9523,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9496,
											"end": 9523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9523,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9537,
											"end": 9552,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9562,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9631,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9631,
											"end": 9643,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9631,
											"end": 9643,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9631,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 9654,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10162,
											"end": 10171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10181,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10177,
											"end": 10188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10188,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10173,
											"end": 10174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10173,
											"end": 10188,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10233,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10275,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10256,
											"end": 10275,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10275,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 10276,
											"end": 10281,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10325,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10310,
											"end": 10325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10305,
											"end": 10306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10305,
											"end": 10325,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10301,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10301,
											"end": 10363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10341,
											"end": 10352,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10341,
											"end": 10352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10341,
											"end": 10352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10341,
											"end": 10352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10341,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10341,
											"end": 10352,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10301,
											"end": 10363,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10301,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10379,
											"end": 10384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2226,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7265,
											"end": 7278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7291,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7265,
											"end": 7291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7265,
											"end": 7291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000"
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7480,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7438,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7444,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7566,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7545,
											"end": 7566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7566,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 7567,
											"end": 7572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7574,
											"end": 7584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7690,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7732,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7716,
											"end": 7743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7716,
											"end": 7743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7757,
											"end": 7767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7690,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7690,
											"end": 7777,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7690,
											"end": 7777,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7690,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7670,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7676,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7677,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7777,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7787,
											"end": 7797,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7815,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7787,
											"end": 7815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7877,
											"end": 7885,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7877,
											"end": 7885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7911,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 7900,
											"end": 7911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 7988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "1B091269E929DF55D64D6EA7E9CADBE4FB38DCE5CCDC995767BC515030DBFBBF"
										},
										{
											"begin": 7990,
											"end": 8000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8017,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7972,
											"end": 8018,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8088,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 8107,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11335,
											"end": 11342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11354,
											"end": 11376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11354,
											"end": 11376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11407,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 11420,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 11433,
											"end": 11440,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 11420,
											"end": 11450,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11420,
											"end": 11450,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11420,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11420,
											"end": 11450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11420,
											"end": 11450,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 11420,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11452,
											"end": 11455,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 11407,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11407,
											"end": 11456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11456,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 11407,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11386,
											"end": 11456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11386,
											"end": 11456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11466,
											"end": 11486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11502,
											"end": 11509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11511,
											"end": 11521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11489,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11466,
											"end": 11522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11466,
											"end": 11522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11532,
											"end": 11551,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11532,
											"end": 11551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11532,
											"end": 11551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11532,
											"end": 11551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11532,
											"end": 11551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11558,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10694,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10677,
											"end": 10701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10677,
											"end": 10701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10708,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1855,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 420,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1156,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13595,
											"end": 13608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13648,
											"end": 13650,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13638,
											"end": 13643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13633,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 13628,
											"end": 13637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13628,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13628,
											"end": 13650,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "54454E5F504F5254494F4E535F524551554952455F4449564953494F4E000000"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13620,
											"end": 13684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13738,
											"end": 13743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13728,
											"end": 13735,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 13728,
											"end": 13743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13728,
											"end": 13743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13728,
											"end": 13743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13728,
											"end": 13743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13763,
											"end": 13768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13753,
											"end": 13760,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "PUSH",
											"source": 2,
											"value": "677017FA3A0FE0F50A95E6024C5B688F2B14A4696C4A897C459715CABFC1C03A"
										},
										{
											"begin": 13848,
											"end": 13853,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13855,
											"end": 13860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13862,
											"end": 13877,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13878,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 13895,
											"end": 13899,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13888,
											"end": 13899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13888,
											"end": 13899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13496,
											"end": 13906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12602,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12603,
											"end": 12608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "1C0"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 12619,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 12619,
											"end": 12650,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12619,
											"end": 12650,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 12619,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "1C0"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12667,
											"end": 12668,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12667,
											"end": 12678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12667,
											"end": 12678,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12692,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12692,
											"end": 12703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12692,
											"end": 12703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12692,
											"end": 12703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12717,
											"end": 12718,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12741,
											"end": 12742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12767,
											"end": 12768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12767,
											"end": 12780,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12767,
											"end": 12780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12767,
											"end": 12780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12794,
											"end": 12795,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12794,
											"end": 12813,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 12794,
											"end": 12813,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12794,
											"end": 12813,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12827,
											"end": 12843,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 12827,
											"end": 12843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12827,
											"end": 12843,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12858,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12868,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 12857,
											"end": 12868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12883,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12882,
											"end": 12893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12907,
											"end": 12908,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12907,
											"end": 12921,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 12907,
											"end": 12921,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12907,
											"end": 12921,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12935,
											"end": 12947,
											"name": "PUSH",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 12935,
											"end": 12947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12935,
											"end": 12947,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12961,
											"end": 12981,
											"name": "PUSH",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 12961,
											"end": 12981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12961,
											"end": 12981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12995,
											"end": 12996,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12995,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "1A0"
										},
										{
											"begin": 12995,
											"end": 13012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12995,
											"end": 13012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13026,
											"end": 13027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13026,
											"end": 13039,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13026,
											"end": 13039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13026,
											"end": 13039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12619,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13066,
											"end": 13078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13059,
											"end": 13078,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13059,
											"end": 13078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13059,
											"end": 13078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13059,
											"end": 13078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 13085,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1662,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11605,
											"end": 11612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11624,
											"end": 11639,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11642,
											"end": 11646,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11656,
											"end": 11674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 11703,
											"end": 11710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 11690,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11722,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 11677,
											"end": 11689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11677,
											"end": 11726,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11677,
											"end": 11726,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11677,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11656,
											"end": 11726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11656,
											"end": 11726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11759,
											"end": 11792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 11772,
											"end": 11779,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11781,
											"end": 11791,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11759,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 11759,
											"end": 11792,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11759,
											"end": 11792,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 11759,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11809,
											"end": 11821,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11821,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11828,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "5460"
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1163,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10438,
											"end": 10445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10464,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10474,
											"end": 10484,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10464,
											"end": 10485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10464,
											"end": 10485,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10464,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10492,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 699,
											"end": 726,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1489,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2107,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9799,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 9799,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9676,
											"end": 9835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10869,
											"end": 10876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10917,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10917,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10917,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 10926,
											"end": 10930,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10888,
											"end": 10932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10888,
											"end": 10932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 10939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1240,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6173,
											"end": 6180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6209,
											"end": 6219,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6192,
											"end": 6229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6192,
											"end": 6229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6236,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 975,
											"end": 997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 766,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11919,
											"end": 11926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 11953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11956,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11969,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 11982,
											"end": 11989,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 11969,
											"end": 11999,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11969,
											"end": 11999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11969,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11969,
											"end": 11999,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11969,
											"end": 11999,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 11969,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12001,
											"end": 12004,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 11956,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11956,
											"end": 12005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11956,
											"end": 12005,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11956,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12015,
											"end": 12031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12034,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12047,
											"end": 12054,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12034,
											"end": 12046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 12034,
											"end": 12064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12034,
											"end": 12064,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12034,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12015,
											"end": 12064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12015,
											"end": 12064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12092,
											"end": 12100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12117,
											"end": 12124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12110,
											"end": 12124,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12110,
											"end": 12124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12110,
											"end": 12124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12110,
											"end": 12124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12110,
											"end": 12124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 12131,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10772,
											"end": 10779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10818,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 5698,
											"end": 5708,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5732,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5664,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5815,
											"end": 5822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5832,
											"end": 5842,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5853,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5854,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5867,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5832,
											"end": 5867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5920,
											"end": 5927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5903,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5882,
											"end": 5927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6039,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "DA1788C3E861A58A47F0D46073B13C4D66EFCC259714744F920D1AFE7B8DEE5"
										},
										{
											"begin": 6041,
											"end": 6048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6066,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6098,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 6083,
											"end": 6098,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 6105,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 871,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH data",
											"source": 5,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2084,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2210,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 2226,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7172,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7196,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14062,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14087,
											"end": 14093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14102,
											"end": 14106,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 14102,
											"end": 14113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14102,
											"end": 14113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14102,
											"end": 14113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14102,
											"end": 14113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14098,
											"end": 14099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14098,
											"end": 14113,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14181,
											"end": 14211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14211,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 14212,
											"end": 14222,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14181,
											"end": 14223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "4E4F545F45524337323100000000000000000000000000000000000000000000"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 14173,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14083,
											"end": 14249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14289,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14258,
											"end": 14293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14310,
											"end": 14319,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14307,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14303,
											"end": 14319,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14367,
											"end": 14377,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "F0650831416F723858005CFEAE97A2D6F5E127D1E6AE8938574D1D73E7F4727C"
										},
										{
											"begin": 14391,
											"end": 14402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14416,
											"end": 14425,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14439,
											"end": 14454,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14335,
											"end": 14464,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14474,
											"end": 14485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14474,
											"end": 14485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14474,
											"end": 14485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13968,
											"end": 14492,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13150,
											"end": 13157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13169,
											"end": 13182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 13219,
											"end": 13222,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13205,
											"end": 13213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 13185,
											"end": 13200,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 13185,
											"end": 13204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13185,
											"end": 13214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 13185,
											"end": 13218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 13185,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13169,
											"end": 13223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13169,
											"end": 13223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13274,
											"end": 13275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13253,
											"end": 13275,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13366,
											"end": 13367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 13328,
											"end": 13346,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 13328,
											"end": 13346,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 13305,
											"end": 13315,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13316,
											"end": 13321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 13295,
											"end": 13304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 13295,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 13295,
											"end": 13347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 13252,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13233,
											"end": 13367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13233,
											"end": 13367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13233,
											"end": 13367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13091,
											"end": 13374,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 6446,
											"end": 6456,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6473,
											"end": 6480,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6660,
											"end": 6665,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6667,
											"end": 6674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6645,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6645,
											"end": 6675,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6645,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6645,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6755,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177"
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6796,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6820,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6826,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6851,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6858,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6868,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6841,
											"end": 6868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6868,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6882,
											"end": 6897,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6907,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6982,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7081,
											"end": 7094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7081,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7081,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 7101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 10579,
											"end": 10589,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10567,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10560,
											"end": 10590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10560,
											"end": 10590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10498,
											"end": 10597,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 8,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14712,
											"end": 14729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 14740,
											"end": 14742,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 14732,
											"end": 14735,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14732,
											"end": 14739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14732,
											"end": 14739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14712,
											"end": 14743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14712,
											"end": 14743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14754,
											"end": 14770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 14788,
											"end": 14795,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 14788,
											"end": 14795,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14774,
											"end": 14787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14754,
											"end": 14797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14754,
											"end": 14797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14828,
											"end": 14844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 14862,
											"end": 14869,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 14862,
											"end": 14869,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 14857,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 14861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14848,
											"end": 14861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 14848,
											"end": 14870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14828,
											"end": 14871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14828,
											"end": 14871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 14940,
											"end": 14948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14935,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 14920,
											"end": 14935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14920,
											"end": 14939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 14920,
											"end": 14949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14902,
											"end": 14917,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 14902,
											"end": 14949,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14902,
											"end": 14949,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14902,
											"end": 14949,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14902,
											"end": 14949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15049,
											"end": 15050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15028,
											"end": 15050,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 15162,
											"end": 15177,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 15162,
											"end": 15177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000"
										},
										{
											"begin": 15196,
											"end": 15204,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15196,
											"end": 15216,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15195,
											"end": 15238,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 15132,
											"end": 15252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15132,
											"end": 15252,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 15132,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15114,
											"end": 15129,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 15114,
											"end": 15252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15114,
											"end": 15252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15114,
											"end": 15252,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15114,
											"end": 15252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15374,
											"end": 15382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 15355,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 15024,
											"end": 15393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14662,
											"end": 15399,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15440,
											"end": 16682,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15440,
											"end": 16682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15521,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "5460"
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 15613,
											"end": 15627,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 15613,
											"end": 15627,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 15587,
											"end": 15612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 15587,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15587,
											"end": 15646,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15583,
											"end": 15861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15583,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 15583,
											"end": 15861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "PUSH",
											"source": 2,
											"value": "2CFCE469A63F2E9972B7F23DA751E6943ED2B091C10E40B5C43B5F6105BF20EA"
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 15711,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15727,
											"end": 15744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15702,
											"end": 15745,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 15833,
											"end": 15850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15830,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 15816,
											"end": 15850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15850,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15583,
											"end": 15861,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 15583,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 15933,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 15950,
											"end": 15967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15969,
											"end": 15979,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 15969,
											"end": 15979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 15949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 15933,
											"end": 15980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15933,
											"end": 15980,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 15933,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 15998,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16035,
											"end": 16036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16014,
											"end": 16032,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 16014,
											"end": 16032,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16014,
											"end": 16036,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 15933,
											"end": 16036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16108,
											"end": 16121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16184,
											"end": 16192,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 16158,
											"end": 16161,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 16144,
											"end": 16152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16139,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 16124,
											"end": 16139,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 16124,
											"end": 16143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 16124,
											"end": 16153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 16124,
											"end": 16157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 16124,
											"end": 16162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 16124,
											"end": 16166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16124,
											"end": 16206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16108,
											"end": 16206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16108,
											"end": 16206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16234,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 16271,
											"end": 16281,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 16271,
											"end": 16281,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16245,
											"end": 16262,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16245,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 16245,
											"end": 16270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16237,
											"end": 16242,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16237,
											"end": 16282,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 16415,
											"end": 16421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16406,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 16391,
											"end": 16406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 16391,
											"end": 16414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 16391,
											"end": 16422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16373,
											"end": 16388,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 16373,
											"end": 16422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16373,
											"end": 16422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16373,
											"end": 16422,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16373,
											"end": 16422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 16484,
											"end": 16499,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 16484,
											"end": 16499,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16540,
											"end": 16558,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 16540,
											"end": 16558,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000"
										},
										{
											"begin": 16518,
											"end": 16524,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16518,
											"end": 16536,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16517,
											"end": 16558,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 16454,
											"end": 16572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16454,
											"end": 16572,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 16454,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16436,
											"end": 16451,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 16436,
											"end": 16572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16436,
											"end": 16572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16436,
											"end": 16572,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16436,
											"end": 16572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16648,
											"end": 16665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16635,
											"end": 16645,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 16635,
											"end": 16665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16635,
											"end": 16665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16635,
											"end": 16665,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16635,
											"end": 16665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 15916,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15440,
											"end": 16682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15440,
											"end": 16682,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19671,
											"end": 19684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19711,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19714,
											"end": 19724,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19696,
											"end": 19724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19696,
											"end": 19724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19763,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19764,
											"end": 19771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19742,
											"end": 19749,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19742,
											"end": 19772,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19742,
											"end": 19772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 19734,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19888,
											"end": 19889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19873,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 19873,
											"end": 19883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 19873,
											"end": 19885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19873,
											"end": 19885,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 19873,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19873,
											"end": 19889,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19869,
											"end": 19925,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19869,
											"end": 19925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 19869,
											"end": 19925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 19905,
											"end": 19912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19869,
											"end": 19925,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 19869,
											"end": 19925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19989,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 20002,
											"end": 20012,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20013,
											"end": 20020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20023,
											"end": 20030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19989,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 19989,
											"end": 20031,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19989,
											"end": 20031,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 19989,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19977,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19978,
											"end": 19985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19967,
											"end": 19986,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 20031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 20031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 20031,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19967,
											"end": 20031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 20079,
											"end": 20089,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20090,
											"end": 20100,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20079,
											"end": 20101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20103,
											"end": 20110,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20066,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "tag",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 20066,
											"end": 20111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20051,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20052,
											"end": 20062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20041,
											"end": 20063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20111,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20041,
											"end": 20111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20233,
											"end": 20240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20215,
											"end": 20230,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 20215,
											"end": 20230,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20193,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20194,
											"end": 20201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20304,
											"end": 20311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20286,
											"end": 20301,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 20286,
											"end": 20301,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20286,
											"end": 20311,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20261,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20262,
											"end": 20272,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20251,
											"end": 20312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20451,
											"end": 20452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20415,
											"end": 20425,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20426,
											"end": 20436,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20415,
											"end": 20437,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20415,
											"end": 20447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20452,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20509,
											"end": 20510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20468,
											"end": 20478,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20479,
											"end": 20489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20468,
											"end": 20490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20505,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20468,
											"end": 20505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20468,
											"end": 20510,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "tag",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 20415,
											"end": 20510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20398,
											"end": 20556,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20398,
											"end": 20556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 20398,
											"end": 20556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20544,
											"end": 20545,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20535,
											"end": 20540,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 20535,
											"end": 20540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20535,
											"end": 20545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20398,
											"end": 20556,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 20398,
											"end": 20556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20634,
											"end": 20635,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20592,
											"end": 20602,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20603,
											"end": 20610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20592,
											"end": 20611,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20630,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 20592,
											"end": 20630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20630,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20592,
											"end": 20635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20686,
											"end": 20693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20655,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20656,
											"end": 20663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20645,
											"end": 20664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20682,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 20645,
											"end": 20682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20645,
											"end": 20693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20744,
											"end": 20751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20713,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20724,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20703,
											"end": 20725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20740,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20703,
											"end": 20740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20803,
											"end": 20804,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20761,
											"end": 20771,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20772,
											"end": 20782,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20761,
											"end": 20783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20799,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 20761,
											"end": 20799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 20804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20868,
											"end": 20869,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20856,
											"end": 20864,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 20856,
											"end": 20864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20856,
											"end": 20869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20955,
											"end": 20965,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20946,
											"end": 20953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "91C7D71A3AE3FB7CF61E00517BF4868E9E23D0BACE5E304CBC3B68DE5D85350E"
										},
										{
											"begin": 20967,
											"end": 20974,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20976,
											"end": 20991,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20935,
											"end": 20992,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 21078,
											"end": 21085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177"
										},
										{
											"begin": 21099,
											"end": 21109,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21110,
											"end": 21117,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21099,
											"end": 21118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21099,
											"end": 21128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21099,
											"end": 21128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21152,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21153,
											"end": 21160,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21142,
											"end": 21161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21185,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21186,
											"end": 21193,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21175,
											"end": 21194,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21204,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21175,
											"end": 21204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21175,
											"end": 21204,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21218,
											"end": 21233,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21056,
											"end": 21243,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 21332,
											"end": 21342,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177"
										},
										{
											"begin": 21356,
											"end": 21366,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21367,
											"end": 21377,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21356,
											"end": 21378,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21356,
											"end": 21388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21356,
											"end": 21388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21412,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21413,
											"end": 21423,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21402,
											"end": 21424,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21448,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21449,
											"end": 21459,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21438,
											"end": 21460,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21470,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21438,
											"end": 21470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21438,
											"end": 21470,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21484,
											"end": 21499,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21310,
											"end": 21509,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 21527,
											"end": 21531,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21520,
											"end": 21531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21520,
											"end": 21531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21520,
											"end": 21531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19569,
											"end": 21538,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18344,
											"end": 19522,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 18344,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18389,
											"end": 18396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18408,
											"end": 18421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18424,
											"end": 18434,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18531,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 18543,
											"end": 18548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18531,
											"end": 18549,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18531,
											"end": 18549,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 18531,
											"end": 18549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18510,
											"end": 18549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18510,
											"end": 18549,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000"
										},
										{
											"begin": 18589,
											"end": 18599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18589,
											"end": 18611,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18569,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18570,
											"end": 18575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18559,
											"end": 18612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18785,
											"end": 18823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 18800,
											"end": 18810,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 18812,
											"end": 18822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18785,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 18785,
											"end": 18823,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18785,
											"end": 18823,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 18785,
											"end": 18823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18881,
											"end": 18886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "193A876AC91D11A4A0A71EBEF73B195BA55AA7C16D6755C93C21D973E692A02C"
										},
										{
											"begin": 18888,
											"end": 18898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18900,
											"end": 18907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18909,
											"end": 18924,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18870,
											"end": 18925,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 19003,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 19029,
											"end": 19039,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19045,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19057,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 19029,
											"end": 19057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19029,
											"end": 19057,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19071,
											"end": 19081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19003,
											"end": 19015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 19003,
											"end": 19091,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19003,
											"end": 19091,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 19003,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18982,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 18988,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 19000,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 18972,
											"end": 19000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 19091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 19091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 19091,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18972,
											"end": 19091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19134,
											"end": 19135,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 19101,
											"end": 19111,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19112,
											"end": 19117,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19130,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 19101,
											"end": 19130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19101,
											"end": 19135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19210,
											"end": 19215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "29F64F6F46C82C5ECFA955FE7D093E63B4106B6DBE5193E00EFD62C7384EF177"
										},
										{
											"begin": 19229,
											"end": 19239,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19240,
											"end": 19245,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19229,
											"end": 19246,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19229,
											"end": 19256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19280,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19281,
											"end": 19286,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19270,
											"end": 19287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19311,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19312,
											"end": 19317,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19301,
											"end": 19318,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19328,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 19301,
											"end": 19328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19301,
											"end": 19328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19342,
											"end": 19357,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19188,
											"end": 19367,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 19446,
											"end": 19458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 19446,
											"end": 19456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 19446,
											"end": 19458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19446,
											"end": 19458,
											"name": "tag",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 19446,
											"end": 19458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19508,
											"end": 19515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19501,
											"end": 19515,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19501,
											"end": 19515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19501,
											"end": 19515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19501,
											"end": 19515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19501,
											"end": 19515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18344,
											"end": 19522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18344,
											"end": 19522,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16976,
											"end": 16977,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16950,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16951,
											"end": 16961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16940,
											"end": 16962,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16940,
											"end": 16972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 16977,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17003,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 17014,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17030,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 16993,
											"end": 17030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17030,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17035,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 16940,
											"end": 17035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16923,
											"end": 17081,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16923,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 16923,
											"end": 17081,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17069,
											"end": 17070,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17060,
											"end": 17065,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 17060,
											"end": 17065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16923,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 16923,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17131,
											"end": 17132,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17119,
											"end": 17127,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 17119,
											"end": 17127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17148,
											"end": 17175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17214,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 17178,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 17191,
											"end": 17198,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 17178,
											"end": 17208,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 17178,
											"end": 17208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17178,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 17178,
											"end": 17208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17178,
											"end": 17208,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 17178,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17178,
											"end": 17214,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 17148,
											"end": 17214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17148,
											"end": 17214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17226,
											"end": 17243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17246,
											"end": 17288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 17259,
											"end": 17266,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17268,
											"end": 17287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17246,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 17246,
											"end": 17288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17246,
											"end": 17288,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 17246,
											"end": 17288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17226,
											"end": 17288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17226,
											"end": 17288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17353,
											"end": 17363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "B49BB132260F6AA1C86E2D2A3957C097216E6EC9B5FA15867289F058B4D297AC"
										},
										{
											"begin": 17365,
											"end": 17372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17374,
											"end": 17381,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17383,
											"end": 17398,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17343,
											"end": 17399,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 17508,
											"end": 17509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17498,
											"end": 17509,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17573,
											"end": 17591,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 17573,
											"end": 17591,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17529,
											"end": 17570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 17542,
											"end": 17549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 17569,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 17551,
											"end": 17569,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17529,
											"end": 17541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17529,
											"end": 17570,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17529,
											"end": 17570,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 17529,
											"end": 17570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17529,
											"end": 17591,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 17498,
											"end": 17591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 17477,
											"end": 17601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17636,
											"end": 17637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17615,
											"end": 17633,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 17615,
											"end": 17633,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17615,
											"end": 17637,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17675,
											"end": 17682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17671,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 17653,
											"end": 17671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17653,
											"end": 17682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17734,
											"end": 17741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17713,
											"end": 17731,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 17713,
											"end": 17741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17713,
											"end": 17741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17713,
											"end": 17741,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17713,
											"end": 17741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 17611,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17817,
											"end": 17850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 17830,
											"end": 17849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17817,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 17817,
											"end": 17850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17817,
											"end": 17850,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 17817,
											"end": 17850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17885,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 17898,
											"end": 17908,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17909,
											"end": 17919,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17898,
											"end": 17920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17922,
											"end": 17929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17885,
											"end": 17897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17885,
											"end": 17930,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17885,
											"end": 17930,
											"name": "tag",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 17885,
											"end": 17930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17870,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17881,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17860,
											"end": 17882,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17930,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17860,
											"end": 17930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17971,
											"end": 17993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18023,
											"end": 18030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18020,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 18005,
											"end": 18020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17971,
											"end": 18031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17971,
											"end": 18031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18095,
											"end": 18110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18079,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18080,
											"end": 18090,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18156,
											"end": 18163,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18130,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18131,
											"end": 18141,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18120,
											"end": 18142,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18120,
											"end": 18152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18120,
											"end": 18163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18209,
											"end": 18210,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18173,
											"end": 18183,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18184,
											"end": 18194,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18195,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 18173,
											"end": 18205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18173,
											"end": 18210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18290,
											"end": 18297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18283,
											"end": 18297,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 18283,
											"end": 18297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18283,
											"end": 18297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18283,
											"end": 18297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18283,
											"end": 18297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16728,
											"end": 18304,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7344,
											"end": 7348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7360,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7435,
											"end": 7436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7432,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7453,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "288"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "448"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "448"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "450"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "450"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"51DDAA38748C0A1144620FB5BFE8EDAB31EA437571AD591A7734BBFD0429AEAE": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"accountOf(address)": "8086b8ba",
							"balanceOf(address)": "70a08231",
							"bnbReceiver()": "d7c3771d",
							"buyPrice()": "8620410b",
							"calculateSharesReceived(uint256)": "e02e1e9c",
							"calculateTokensReceived(uint256)": "10d0ffdd",
							"checkImmunity(address)": "36599ead",
							"compound()": "f69e2046",
							"dailyEstimate(address)": "fbaf1bbd",
							"deposit(uint256)": "b6b55f25",
							"depositTo(address,uint256)": "ffaad6a5",
							"dividendsOf(address)": "0065318b",
							"donate(uint256)": "f14faf6f",
							"dripPoolBalance()": "aecb6d28",
							"dripRate()": "d3261592",
							"forDivs()": "1f38b9cd",
							"forPool()": "a01496de",
							"harvest()": "4641257d",
							"jpeg(uint256)": "b03cf5a7",
							"lastPayout()": "b9db102a",
							"lastRebaseTime()": "1924063e",
							"myEarnings()": "ffe6bbd8",
							"myTokens()": "949e8acd",
							"owner()": "8da5cb5b",
							"payoutFrequency()": "81fce645",
							"rebaseFrequency()": "89375abf",
							"renounceOwnership()": "715018a6",
							"requiredBalance()": "08560ace",
							"sellPrice()": "4b750334",
							"setFeeSplit(uint256,uint256)": "7e6335c7",
							"setImmunityToken(address[])": "f6db0da0",
							"stakingToken()": "72f702f3",
							"tokenAddress()": "9d76ea58",
							"tokenBalance(address)": "eedc966a",
							"totalBalance()": "ad7a672f",
							"totalClaims()": "41c61383",
							"totalDeposits()": "7d882097",
							"totalSupply()": "18160ddd",
							"totalTxs()": "537a39bb",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b",
							"users()": "f2020275",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_dripRate\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_compounded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onCompound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onDonate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onDonateBNB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_divs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onSetFeeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC721[]\",\"name\":\"oldOne\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"contract IERC721[]\",\"name\":\"newOne\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onSetImmunityToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"soldTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_liquidated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensEarned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"accountOf\",\"outputs\":[{\"internalType\":\"uint256[14]\",\"name\":\"\",\"type\":\"uint256[14]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnbReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateSharesReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkImmunity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isImmune\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"dailyEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dripPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dripRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forDivs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jpeg\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRebaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payoutFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_divs\",\"type\":\"uint256\"}],\"name\":\"setFeeSplit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721[]\",\"name\":\"_contract\",\"type\":\"address[]\"}],\"name\":\"setImmunityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTxs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DiamodSafe copy.sol\":\"DiamondSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]},\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]},\"contracts/DiamodSafe copy.sol\":{\"keccak256\":\"0xaa7a213338c57660d1cf47651c3ff8f9bb005c479927de51f549ea4c3818d5f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b026f233693670ea04e03a6c3bea4efc79a3460d65c48718a383dab9a95744\",\"dweb:/ipfs/QmZHk31MD7xnuzVpA9BccoWNUVyCY14CWeAGbdPMgfeMAC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0xeb8c011452adc20505919f8025380c2c92a96417e37754891a124efe26d06104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5812d283c1ee0a50269953cc3978f60a6f5bf4892943a4351813631c786656f\",\"dweb:/ipfs/QmZED8YeS22yqkV86rYsR3CPSkLMD4S1m22DWChZD4jce5\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xb00b01076641e395e084d4d608fa07c800b43d2e2e693da6c548144085ac58ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fa763a7012ab18e0949a4dc631033e2c95d6c877f8be570ef474d6a3f81ae6a\",\"dweb:/ipfs/QmauEsZiHVs7yjJrUjMb1oxCwJiBtjuuSDBoExaP63xMtD\"]},\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x1708aca5d9f35560a41b69378bd448df70eb7ae285a75cd87b10a2d037248cb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2466087ea7d07fa6acced31fb9478109b880466f785ee1c6e707c257edff671b\",\"dweb:/ipfs/QmbzpJYc7cbG7BqPWD9sQYBi1ayPEnDKTfhJSPsa6BYme7\"]},\"contracts/SafeERC20.sol\":{\"keccak256\":\"0x018e2f7fedfb39f2695564356081fb76a5432c71f17ffa3a8bcd4b1af97f4daa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9630329ce796ce63e271c8b15492abf4553832ed1a1686001d98cc55889396cb\",\"dweb:/ipfs/QmQ1V92HceZ8nWVtj9nMw5eKDA7mFima3xb5WKriPvRwK9\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]},\"lib/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xd7fb250e2e4263d67b5a44b6d2bfa04a28599e2e3f5691e68a0cf5dc21743604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb0ba356d486a3efeab5c7db11efcbdd65a31e1bd832b522e12276ed8782c8c5\",\"dweb:/ipfs/QmeE3Y1WJu1SfjADtmZnm91neyQ2ukRvjAUeK36vVq71nK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2195,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2308,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)2071"
							},
							{
								"astId": 341,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "requiredBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 343,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 345,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "bnbReceiver",
								"offset": 0,
								"slot": "5",
								"type": "t_address_payable"
							},
							{
								"astId": 348,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "jpeg",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_contract(IERC721)2187)dyn_storage"
							},
							{
								"astId": 350,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "users",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 352,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "totalTxs",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 354,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "lastPayout",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 356,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "totalClaims",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 358,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "totalDeposits",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 360,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "dripPoolBalance",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 362,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "dripRate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint8"
							},
							{
								"astId": 372,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "forPool",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 374,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "forDivs",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "lastRebaseTime",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 384,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "currentTotalStaked",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 386,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "profitPerShare_",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 441,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "payoutsOf_",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 445,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "balanceOf_",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 449,
								"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
								"label": "accountOf_",
								"offset": 0,
								"slot": "21",
								"type": "t_mapping(t_address,t_struct(Account)437_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IERC721)2187)dyn_storage": {
								"base": "t_contract(IERC721)2187",
								"encoding": "dynamic_array",
								"label": "contract IERC721[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)2071": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)2187": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_struct(Account)437_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DiamondSafe.Account)",
								"numberOfBytes": "32",
								"value": "t_struct(Account)437_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Account)437_storage": {
								"encoding": "inplace",
								"label": "struct DiamondSafe.Account",
								"members": [
									{
										"astId": 410,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "deposited",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 412,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 414,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "compounded",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 416,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "rewarded",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 418,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "contributed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 420,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "transferredShares",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 422,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "receivedShares",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 424,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xInvested",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 426,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xCompounded",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 428,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xRewarded",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 430,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xContributed",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 432,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xWithdrawn",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 434,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xTransferredShares",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 436,
										"contract": "contracts/DiamodSafe copy.sol:DiamondSafe",
										"label": "xReceivedShares",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "448"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721.sol\":{\"keccak256\":\"0xeb8c011452adc20505919f8025380c2c92a96417e37754891a124efe26d06104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5812d283c1ee0a50269953cc3978f60a6f5bf4892943a4351813631c786656f\",\"dweb:/ipfs/QmZED8YeS22yqkV86rYsR3CPSkLMD4S1m22DWChZD4jce5\"]},\"lib/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xd7fb250e2e4263d67b5a44b6d2bfa04a28599e2e3f5691e68a0cf5dc21743604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb0ba356d486a3efeab5c7db11efcbdd65a31e1bd832b522e12276ed8782c8c5\",\"dweb:/ipfs/QmeE3Y1WJu1SfjADtmZnm91neyQ2ukRvjAUeK36vVq71nK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325\",\"dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xb00b01076641e395e084d4d608fa07c800b43d2e2e693da6c548144085ac58ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fa763a7012ab18e0949a4dc631033e2c95d6c877f8be570ef474d6a3f81ae6a\",\"dweb:/ipfs/QmauEsZiHVs7yjJrUjMb1oxCwJiBtjuuSDBoExaP63xMtD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2195,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x1708aca5d9f35560a41b69378bd448df70eb7ae285a75cd87b10a2d037248cb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2466087ea7d07fa6acced31fb9478109b880466f785ee1c6e707c257edff671b\",\"dweb:/ipfs/QmbzpJYc7cbG7BqPWD9sQYBi1ayPEnDKTfhJSPsa6BYme7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2308,
								"contract": "contracts/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeERC20.sol\":597:3701  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeERC20.sol\":597:3701  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122018064e87197dfdc11f5040037852ef542c7ddf13898877c05b4d5a232b8795d264736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018064e87197dfdc11f5040037852ef542c7ddf13898877c05b4d5a232b8795d264736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR MOD 0x4E DUP8 NOT PUSH30 0xFDC11F5040037852EF542C7DDF13898877C05B4D5A232B8795D264736F6C PUSH4 0x43000704 STOP CALLER ",
							"sourceMap": "597:3104:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018064e87197dfdc11f5040037852ef542c7ddf13898877c05b4d5a232b8795d264736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR MOD 0x4E DUP8 NOT PUSH30 0xFDC11F5040037852EF542C7DDF13898877C05B4D5A232B8795D264736F6C PUSH4 0x43000704 STOP CALLER ",
							"sourceMap": "597:3104:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 3701,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018064e87197dfdc11f5040037852ef542c7ddf13898877c05b4d5a232b8795d264736f6c63430007040033",
									".code": [
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 3701,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]},\"contracts/SafeERC20.sol\":{\"keccak256\":\"0x018e2f7fedfb39f2695564356081fb76a5432c71f17ffa3a8bcd4b1af97f4daa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9630329ce796ce63e271c8b15492abf4553832ed1a1686001d98cc55889396cb\",\"dweb:/ipfs/QmQ1V92HceZ8nWVtj9nMw5eKDA7mFima3xb5WKriPvRwK9\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":630:7455  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":630:7455  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d4410da9919840c755b518f6299f3c8e149ff2a404e2760f84226fc8a1a6dc3564736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4410da9919840c755b518f6299f3c8e149ff2a404e2760f84226fc8a1a6dc3564736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 COINBASE 0xD 0xA9 SWAP2 SWAP9 BLOCKHASH 0xC7 SSTORE 0xB5 XOR 0xF6 0x29 SWAP16 EXTCODECOPY DUP15 EQ SWAP16 CALLCODE LOG4 DIV 0xE2 PUSH23 0xF84226FC8A1A6DC3564736F6C63430007040033000000 ",
							"sourceMap": "630:6825:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4410da9919840c755b518f6299f3c8e149ff2a404e2760f84226fc8a1a6dc3564736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 COINBASE 0xD 0xA9 SWAP2 SWAP9 BLOCKHASH 0xC7 SSTORE 0xB5 XOR 0xF6 0x29 SWAP16 EXTCODECOPY DUP15 EQ SWAP16 CALLCODE LOG4 DIV 0xE2 PUSH23 0xF84226FC8A1A6DC3564736F6C63430007040033000000 ",
							"sourceMap": "630:6825:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"safeSub(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 630,
									"end": 7455,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4410da9919840c755b518f6299f3c8e149ff2a404e2760f84226fc8a1a6dc3564736f6c63430007040033",
									".code": [
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 630,
											"end": 7455,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x7b40d5f6514615b0c86150398de33504aa339e8410905a4a19d7e337786355a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1569afc3e523080ade628f2fa1c9460231d6c95722e250ee137f5f028508bdad\",\"dweb:/ipfs/QmTLLcqtALDcns5sMTPuK23pEACZCgoqu3VNpAs2fQkjrJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xd7fb250e2e4263d67b5a44b6d2bfa04a28599e2e3f5691e68a0cf5dc21743604\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb0ba356d486a3efeab5c7db11efcbdd65a31e1bd832b522e12276ed8782c8c5\",\"dweb:/ipfs/QmeE3Y1WJu1SfjADtmZnm91neyQ2ukRvjAUeK36vVq71nK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1002,
					"file": "contracts/Ownable.sol",
					"start": 843
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "792:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "989:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1067:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1124:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1117:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:6:0"
									},
									"scope": 295,
									"src": "726:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2127:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2170:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2299:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2317:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2317:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2075:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2102:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:0"
									},
									"scope": 295,
									"src": "2056:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3277:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3292:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3285:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3210:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3226:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3263:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:0"
									},
									"scope": 295,
									"src": "3188:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3698:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3715:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3708:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3603:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3619:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3638:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:14:0"
									},
									"scope": 295,
									"src": "3581:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4249:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4288:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4266:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4259:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4183:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4202:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4235:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:0"
									},
									"scope": 295,
									"src": "4136:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4749:382:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4767:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4792:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4869:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4858:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4995:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5050:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "5022:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5022:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5042:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5111:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5072:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5065:59:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4639:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4655:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4689:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4735:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:14:0"
									},
									"scope": 295,
									"src": "4608:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5408:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5425:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5418:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5352:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5394:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:14:0"
									},
									"scope": 295,
									"src": "5308:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5817:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5846:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5835:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5965:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5979:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6006:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6006:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6073:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6085:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6046:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "6039:59:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5733:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5752:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:63:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5803:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:14:0"
									},
									"scope": 295,
									"src": "5689:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6381:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6419:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6427:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6398:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6391:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6330:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6367:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:14:0"
									},
									"scope": 295,
									"src": "6284:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6793:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6822:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6811:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6943:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6957:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6984:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7053:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7065:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "7026:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "7019:59:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6698:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6714:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6733:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:63:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6779:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:0"
									},
									"scope": 295,
									"src": "6668:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7220:596:0",
										"statements": [
											{
												"condition": {
													"id": 275,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "7234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7291:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 279,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7375:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7375:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "7747:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 286,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "7772:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 285,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:0"
																	}
																]
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "7371:429:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "7398:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 283,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "7230:580:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7243:42:0",
													"statements": [
														{
															"expression": {
																"id": 276,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "7264:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 274,
															"id": 277,
															"nodeType": "Return",
															"src": "7257:17:0"
														}
													]
												}
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7118:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7132:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7157:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:67:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7206:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:14:0"
									},
									"scope": 295,
									"src": "7091:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 296,
							"src": "134:7684:0"
						}
					],
					"src": "33:7785:0"
				},
				"id": 0
			},
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "668:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "678:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "651:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:1"
									},
									"scope": 318,
									"src": "598:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "773:165:1",
										"statements": [
											{
												"expression": {
													"id": 311,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$318",
														"typeString": "contract Context"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "783:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 315,
												"nodeType": "Return",
												"src": "916:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "759:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:1"
									},
									"scope": 318,
									"src": "708:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "566:374:1"
						}
					],
					"src": "33:907:1"
				},
				"id": 1
			},
			"contracts/DiamodSafe copy.sol": {
				"ast": {
					"absolutePath": "contracts/DiamodSafe copy.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"Context": [
							318
						],
						"DiamondSafe": [
							1993
						],
						"IERC165": [
							2964
						],
						"IERC20": [
							2071
						],
						"IERC721": [
							2187
						],
						"Ownable": [
							2297
						],
						"ReentrancyGuard": [
							2362
						],
						"SafeERC20": [
							2575
						],
						"SafeMath": [
							2952
						]
					},
					"id": 1994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 321,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 296,
							"src": "56:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 322,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 2953,
							"src": "80:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 323,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 2576,
							"src": "105:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 324,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 2072,
							"src": "132:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 325,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 2298,
							"src": "156:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 326,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 2188,
							"src": "180:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ReentrancyGuard.sol",
							"file": "./ReentrancyGuard.sol",
							"id": 327,
							"nodeType": "ImportDirective",
							"scope": 1994,
							"sourceUnit": 2363,
							"src": "204:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 328,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2297,
										"src": "261:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$2297",
											"typeString": "contract Ownable"
										}
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "261:7:2"
								},
								{
									"baseName": {
										"id": 330,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2362,
										"src": "270:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$2362",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 331,
									"nodeType": "InheritanceSpecifier",
									"src": "270:15:2"
								}
							],
							"contractDependencies": [
								318,
								2297,
								2362
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1993,
							"linearizedBaseContracts": [
								1993,
								2362,
								2297,
								318
							],
							"name": "DiamondSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 334,
									"libraryName": {
										"id": 332,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2575,
										"src": "298:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$2575",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "292:27:2",
									"typeName": {
										"id": 333,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2071,
										"src": "312:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2071",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 337,
									"libraryName": {
										"id": 335,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2952,
										"src": "330:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2952",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "324:24:2",
									"typeName": {
										"id": 336,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "343:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 339,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "394:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2071",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 338,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2071,
										"src": "394:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2071",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08560ace",
									"id": 341,
									"mutability": "mutable",
									"name": "requiredBalance",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "587:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 343,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "699:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 342,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "699:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7c3771d",
									"id": 345,
									"mutability": "mutable",
									"name": "bnbReceiver",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "732:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 344,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "732:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b03cf5a7",
									"id": 348,
									"mutability": "mutable",
									"name": "jpeg",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "772:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
										"typeString": "contract IERC721[]"
									},
									"typeName": {
										"baseType": {
											"id": 346,
											"name": "IERC721",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2187,
											"src": "772:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$2187",
												"typeString": "contract IERC721"
											}
										},
										"id": 347,
										"nodeType": "ArrayTypeName",
										"src": "772:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage_ptr",
											"typeString": "contract IERC721[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f2020275",
									"id": 350,
									"mutability": "mutable",
									"name": "users",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "854:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 349,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "854:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "537a39bb",
									"id": 352,
									"mutability": "mutable",
									"name": "totalTxs",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "877:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 351,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "877:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9db102a",
									"id": 354,
									"mutability": "mutable",
									"name": "lastPayout",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "975:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 353,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "975:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "41c61383",
									"id": 356,
									"mutability": "mutable",
									"name": "totalClaims",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1102:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 355,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1102:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d882097",
									"id": 358,
									"mutability": "mutable",
									"name": "totalDeposits",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1131:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1131:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aecb6d28",
									"id": 360,
									"mutability": "mutable",
									"name": "dripPoolBalance",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1213:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1213:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3261592",
									"id": 362,
									"mutability": "mutable",
									"name": "dripRate",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1246:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 361,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1246:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 365,
									"mutability": "constant",
									"name": "divsFee",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1315:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 363,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1315:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 364,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1349:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 370,
									"mutability": "constant",
									"name": "magnitude",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1357:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1357:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551616_by_1",
											"typeString": "int_const 18446744073709551616"
										},
										"id": 369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 367,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1395:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3634",
											"id": 368,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1400:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_64_by_1",
												"typeString": "int_const 64"
											},
											"value": "64"
										},
										"src": "1395:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551616_by_1",
											"typeString": "int_const 18446744073709551616"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a01496de",
									"id": 372,
									"mutability": "mutable",
									"name": "forPool",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1470:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 371,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1470:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f38b9cd",
									"id": 374,
									"mutability": "mutable",
									"name": "forDivs",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1495:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 373,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1495:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "89375abf",
									"id": 377,
									"mutability": "constant",
									"name": "rebaseFrequency",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1556:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1556:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1598:7:2",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21600_by_1",
											"typeString": "int_const 21600"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "81fce645",
									"id": 380,
									"mutability": "constant",
									"name": "payoutFrequency",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1611:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 379,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1653:9:2",
										"subdenomination": "seconds",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1924063e",
									"id": 382,
									"mutability": "mutable",
									"name": "lastRebaseTime",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1701:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 381,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1701:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "currentTotalStaked",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1794:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 383,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1794:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "profitPerShare_",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "1834:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1834:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "2075:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 389,
																	"name": "myTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2093:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2093:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2106:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2093:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2085:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "2085:23:2"
											},
											{
												"id": 395,
												"nodeType": "PlaceholderStatement",
												"src": "2118:1:2"
											}
										]
									},
									"id": 397,
									"name": "onlyHolders",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:2"
									},
									"src": "2052:74:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "2208:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 400,
																	"name": "myEarnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2226:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2226:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2226:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2218:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "2218:25:2"
											},
											{
												"id": 406,
												"nodeType": "PlaceholderStatement",
												"src": "2253:1:2"
											}
										]
									},
									"id": 408,
									"name": "onlyEarners",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:2:2"
									},
									"src": "2185:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "DiamondSafe.Account",
									"id": 437,
									"members": [
										{
											"constant": false,
											"id": 410,
											"mutability": "mutable",
											"name": "deposited",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2422:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 409,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2422:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 412,
											"mutability": "mutable",
											"name": "withdrawn",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2446:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 411,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2446:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 414,
											"mutability": "mutable",
											"name": "compounded",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2470:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 413,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2470:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 416,
											"mutability": "mutable",
											"name": "rewarded",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2495:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 415,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2495:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 418,
											"mutability": "mutable",
											"name": "contributed",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2518:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 417,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2518:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 420,
											"mutability": "mutable",
											"name": "transferredShares",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2544:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 419,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2544:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 422,
											"mutability": "mutable",
											"name": "receivedShares",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2576:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 421,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2576:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 424,
											"mutability": "mutable",
											"name": "xInvested",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2605:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 423,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2605:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 426,
											"mutability": "mutable",
											"name": "xCompounded",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2629:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 425,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2629:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 428,
											"mutability": "mutable",
											"name": "xRewarded",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2655:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 427,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2655:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 430,
											"mutability": "mutable",
											"name": "xContributed",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2679:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 429,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2679:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 432,
											"mutability": "mutable",
											"name": "xWithdrawn",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2706:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 431,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2706:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 434,
											"mutability": "mutable",
											"name": "xTransferredShares",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2731:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 433,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2731:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 436,
											"mutability": "mutable",
											"name": "xReceivedShares",
											"nodeType": "VariableDeclaration",
											"scope": 437,
											"src": "2764:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 435,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2764:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Account",
									"nodeType": "StructDefinition",
									"scope": 1993,
									"src": "2397:394:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 441,
									"mutability": "mutable",
									"name": "payoutsOf_",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "2923:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 440,
										"keyType": {
											"id": 438,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2931:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2923:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 439,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2942:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "balanceOf_",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "2966:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 444,
										"keyType": {
											"id": 442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2974:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2966:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 443,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2985:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "accountOf_",
									"nodeType": "VariableDeclaration",
									"scope": 1993,
									"src": "3010:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
										"typeString": "mapping(address => struct DiamondSafe.Account)"
									},
									"typeName": {
										"id": 448,
										"keyType": {
											"id": 446,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3018:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3010:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
											"typeString": "mapping(address => struct DiamondSafe.Account)"
										},
										"valueType": {
											"id": 447,
											"name": "Account",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 437,
											"src": "3029:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Account_$437_storage_ptr",
												"typeString": "struct DiamondSafe.Account"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 459,
									"name": "onDeposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3206:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "_deposited",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3237:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensMinted",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3265:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3295:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:119:2"
									},
									"src": "3181:135:2"
								},
								{
									"anonymous": false,
									"id": 469,
									"name": "onWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3347:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidated",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3378:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensEarned",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3437:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3437:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3337:120:2"
									},
									"src": "3321:137:2"
								},
								{
									"anonymous": false,
									"id": 479,
									"name": "onCompound",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3489:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "_compounded",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3520:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensMinted",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3579:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3579:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:120:2"
									},
									"src": "3463:137:2"
								},
								{
									"anonymous": false,
									"id": 487,
									"name": "onWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3622:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "_withdrawn",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3645:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3665:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3665:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:59:2"
									},
									"src": "3605:76:2"
								},
								{
									"anonymous": false,
									"id": 497,
									"name": "onTransfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3712:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3742:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3794:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3794:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3702:112:2"
									},
									"src": "3686:129:2"
								},
								{
									"anonymous": false,
									"id": 509,
									"name": "onUpdate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3844:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": false,
												"mutability": "mutable",
												"name": "invested",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3875:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3901:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "soldTokens",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3925:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3953:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3953:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:139:2"
									},
									"src": "3820:154:2"
								},
								{
									"anonymous": false,
									"id": 515,
									"name": "onRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3995:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4012:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:36:2"
									},
									"src": "3980:51:2"
								},
								{
									"anonymous": false,
									"id": 523,
									"name": "onDonate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4052:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "_contributed",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4074:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4096:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4096:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:60:2"
									},
									"src": "4037:75:2"
								},
								{
									"anonymous": false,
									"id": 531,
									"name": "onDonateBNB",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4135:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4157:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4173:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4134:54:2"
									},
									"src": "4117:72:2"
								},
								{
									"anonymous": false,
									"id": 539,
									"name": "onSetFeeSplit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4215:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "_divs",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4227:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4227:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4239:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:43:2"
									},
									"src": "4195:63:2"
								},
								{
									"anonymous": false,
									"id": 551,
									"name": "onSetImmunityToken",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4297:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldOne",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4330:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 542,
														"name": "IERC721",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2187,
														"src": "4330:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2187",
															"typeString": "contract IERC721"
														}
													},
													"id": 543,
													"nodeType": "ArrayTypeName",
													"src": "4330:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOne",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4356:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 545,
														"name": "IERC721",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2187,
														"src": "4356:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2187",
															"typeString": "contract IERC721"
														}
													},
													"id": 546,
													"nodeType": "ArrayTypeName",
													"src": "4356:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4382:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4382:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:118:2"
									},
									"src": "4263:143:2"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "4600:500:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 561,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "4631:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4656:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4648:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 562,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4648:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4648:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4631:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 569,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "4681:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 567,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "4662:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 19,
																	"src": "4662:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4662:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4631:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f41444452455353",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4709:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c9aa80f6df0d7d66f29f9faed5ce34d8bae3d216a4ab057cfd7af24bdab39cb",
																"typeString": "literal_string \"INVALID_ADDRESS\""
															},
															"value": "INVALID_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c9aa80f6df0d7d66f29f9faed5ce34d8bae3d216a4ab057cfd7af24bdab39cb",
																"typeString": "literal_string \"INVALID_ADDRESS\""
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4610:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4610:126:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "4610:126:2"
											},
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 575,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "4747:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 576,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "4762:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4747:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "4747:28:2"
											},
											{
												"expression": {
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 579,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "4785:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2071",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 581,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "4807:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 580,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "4800:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2071_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4800:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2071",
															"typeString": "contract IERC20"
														}
													},
													"src": "4785:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "4785:36:2"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 585,
														"name": "bnbReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "4832:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 586,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "4846:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4846:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4832:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "4832:24:2"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 590,
														"name": "dripRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "4936:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 591,
														"name": "_dripRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4936:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "4936:20:2"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "lastPayout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "4966:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"expression": {
																	"id": 595,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "4980:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4980:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 597,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4979:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4966:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "4966:30:2"
											},
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "forPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "5031:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5041:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "5031:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "5031:11:2"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 604,
														"name": "forDivs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "5052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5062:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5052:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "5052:11:2"
											},
											{
												"expression": {
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 608,
														"name": "requiredBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5074:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5092:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5074:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "5074:19:2"
											}
										]
									},
									"id": 613,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 558,
											"modifierName": {
												"id": 557,
												"name": "Ownable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2297,
												"src": "4590:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Ownable_$2297_$",
													"typeString": "type(contract Ownable)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4590:9:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "4550:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "_dripRate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "4573:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 554,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4573:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:40:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4600:0:2"
									},
									"scope": 1993,
									"src": "4538:562:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "5259:124:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "bnbReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5287:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 620,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5300:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5300:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 616,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "5269:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5269:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5269:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 625,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5337:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5337:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 627,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5349:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5349:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 629,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5360:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "onDonateBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "5325:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "EmitStatement",
												"src": "5320:56:2"
											}
										]
									},
									"id": 634,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5239:2:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5259:0:2"
									},
									"scope": 1993,
									"src": "5232:151:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5584:521:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 644,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5698:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5698:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 648,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5718:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondSafe_$1993",
																				"typeString": "contract DiamondSafe"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondSafe_$1993",
																				"typeString": "contract DiamondSafe"
																			}
																		],
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5710:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 646,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5710:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5710:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 650,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "5725:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 642,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "5672:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2071",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2052,
																"src": "5672:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5672:61:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5664:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5664:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "5664:70:2"
											},
											{
												"expression": {
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 654,
														"name": "dripPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "5796:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 655,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5796:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "5796:26:2"
											},
											{
												"expression": {
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 658,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "5832:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 661,
															"indexExpression": {
																"expression": {
																	"id": 659,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5843:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5843:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5832:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xContributed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 430,
														"src": "5832:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5871:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5832:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "5832:40:2"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 666,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "5882:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 669,
															"indexExpression": {
																"expression": {
																	"id": 667,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5893:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5893:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5882:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contributed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 418,
														"src": "5882:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 671,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5920:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5882:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "5882:45:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 675,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6029:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6029:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 677,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6041:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 678,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6050:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6050:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "onDonate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "6020:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6020:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "EmitStatement",
												"src": "6015:51:2"
											},
											{
												"expression": {
													"id": 682,
													"name": "dripPoolBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 360,
													"src": "6083:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 683,
												"nodeType": "Return",
												"src": "6076:22:2"
											}
										]
									},
									"functionSelector": "f14faf6f",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5545:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5545:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5544:14:2"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5575:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:9:2"
									},
									"scope": 1993,
									"src": "5529:576:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "6182:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 693,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6209:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6209:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 695,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "6221:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "depositTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "6199:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6199:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 691,
												"id": 697,
												"nodeType": "Return",
												"src": "6192:37:2"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6143:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6143:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6142:14:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6173:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6173:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6172:9:2"
									},
									"scope": 1993,
									"src": "6126:110:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "6332:769:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 711,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6446:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6446:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 715,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "6466:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondSafe_$1993",
																				"typeString": "contract DiamondSafe"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondSafe_$1993",
																				"typeString": "contract DiamondSafe"
																			}
																		],
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6458:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 713,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6458:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6458:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 717,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "6473:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 709,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6420:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2071",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2052,
																"src": "6420:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6420:61:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "6412:70:2"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 721,
														"name": "totalDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "6544:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 722,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "6561:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6544:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "6544:24:2"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "6631:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6631:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "6660:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "6667:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_depositTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "6645:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6645:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6631:44:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 733,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "6750:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 734,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6769:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 736,
																"indexExpression": {
																	"id": 735,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "6780:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6769:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "6769:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 738,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "6810:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 740,
															"indexExpression": {
																"id": 739,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "6821:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6810:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 741,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6841:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 743,
																"indexExpression": {
																	"id": 742,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "6852:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6841:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "6841:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 745,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6882:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6882:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 732,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "6728:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "EmitStatement",
												"src": "6723:184:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 749,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "6982:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6982:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "6982:12:2"
											},
											{
												"expression": {
													"id": 752,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "7088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 707,
												"id": 753,
												"nodeType": "Return",
												"src": "7081:13:2"
											}
										]
									},
									"functionSelector": "ffaad6a5",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "6278:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6278:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "6293:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6293:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6277:29:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "6323:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6323:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6322:9:2"
									},
									"scope": 1993,
									"src": "6259:842:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "7162:34:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "_compoundTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "7172:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7172:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "7172:17:2"
											}
										]
									},
									"functionSelector": "f69e2046",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 758,
											"modifierName": {
												"id": 757,
												"name": "onlyEarners",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 408,
												"src": "7150:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7150:11:2"
										}
									],
									"name": "compound",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7140:2:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7162:0:2"
									},
									"scope": 1993,
									"src": "7123:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "7255:852:2",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "_user",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "7265:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 769,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7265:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"expression": {
														"id": 771,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "7281:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7281:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7265:26:2"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "7301:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7301:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "myEarnings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "7322:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7322:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7301:33:2"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 779,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7428:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 781,
														"indexExpression": {
															"id": 780,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7439:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7428:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 785,
																	"name": "_dividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "7458:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 786,
																	"name": "magnitude",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "7471:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7458:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7450:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 782,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7450:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 784,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7449:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7449:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7428:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "7428:53:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7567:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7574:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 791,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7545:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2020,
														"src": "7545:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7545:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "7545:40:2"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 798,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "7660:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 799,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "7671:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7660:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "withdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 412,
														"src": "7660:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 804,
																		"name": "accountOf_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "7716:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																			"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																		}
																	},
																	"id": 806,
																	"indexExpression": {
																		"id": 805,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "7727:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7716:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Account_$437_storage",
																		"typeString": "struct DiamondSafe.Account storage ref"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "withdrawn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "7716:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 808,
																"name": "_dividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "7757:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 802,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "7690:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2757,
															"src": "7690:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7690:87:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7660:117:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7660:117:2"
											},
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 812,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "7787:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 814,
															"indexExpression": {
																"id": 813,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "7798:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7787:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xWithdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "7787:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7819:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7787:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "7787:33:2"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 819,
														"name": "totalTxs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "7877:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7889:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7877:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "7877:13:2"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "totalClaims",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "7900:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 824,
														"name": "_dividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "7915:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7900:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "7900:25:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 828,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7983:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7990:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 830,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "8002:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8002:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 827,
														"name": "onWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															487
														],
														"referencedDeclaration": 487,
														"src": "7972:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7972:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "EmitStatement",
												"src": "7967:51:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 834,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "8088:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8088:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "8088:12:2"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 767,
											"modifierName": {
												"id": 766,
												"name": "onlyEarners",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 408,
												"src": "7243:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7243:11:2"
										}
									],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7233:2:2"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7255:0:2"
									},
									"scope": 1993,
									"src": "7217:890:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "8183:1471:2",
										"statements": [
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "_user",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "8193:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 845,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8193:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"expression": {
														"id": 847,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "8209:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8209:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8193:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "8237:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 852,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "8248:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 854,
																"indexExpression": {
																	"id": 853,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "8259:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8248:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8237:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8229:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "8229:37:2"
											},
											{
												"assignments": [
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "_undividedDividends",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "8277:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 862,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "8320:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 863,
																"name": "divsFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "8329:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 860,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "8307:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2813,
															"src": "8307:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8307:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8340:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "8307:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8277:66:2"
											},
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "isImmune",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "8370:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 868,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8370:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 871,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8400:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8400:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 870,
														"name": "checkImmunity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "8386:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8386:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8370:41:2"
											},
											{
												"condition": {
													"id": 875,
													"name": "isImmune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 869,
													"src": "8451:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "8447:129:2",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "8461:115:2",
													"statements": [
														{
															"expression": {
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 876,
																	"name": "_undividedDividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "8537:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8559:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8537:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "8537:23:2"
														}
													]
												}
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "_taxedTokens",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "8640:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8640:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "8677:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 887,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "8686:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 884,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "8664:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2779,
														"src": "8664:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8664:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8640:66:2"
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "currentTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "8716:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 893,
																"name": "currentTotalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "8750:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 894,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "8770:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 891,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "8737:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2779,
															"src": "8737:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8737:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8716:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8716:62:2"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 898,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "8788:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 900,
														"indexExpression": {
															"id": 899,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8788:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 903,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "8821:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"id": 904,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "8832:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8821:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 906,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "8840:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 901,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "8808:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2779,
															"src": "8808:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8808:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8788:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "8788:60:2"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "_updatedPayouts",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "8930:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 910,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8930:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "8977:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 916,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "8995:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8977:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 918,
																			"name": "_taxedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "9006:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 919,
																			"name": "magnitude",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "9021:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9006:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 921,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9005:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8977:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8956:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 912,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8956:6:2",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 914,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8955:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8955:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8930:111:2"
											},
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 925,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "9051:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 927,
														"indexExpression": {
															"id": 926,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "9062:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9051:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 928,
														"name": "_updatedPayouts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "9072:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "9051:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "9051:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "9181:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 931,
														"name": "allocateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "9168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9168:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "9168:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 936,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "9284:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9291:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "_taxedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9300:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 939,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "9314:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9314:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "onWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															487
														],
														"referencedDeclaration": 469,
														"src": "9273:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9273:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "EmitStatement",
												"src": "9268:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 944,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "9405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 945,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "9424:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 947,
																"indexExpression": {
																	"id": 946,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "9435:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9424:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "9424:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 949,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "9465:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 951,
															"indexExpression": {
																"id": 950,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "9476:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9465:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 952,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "9496:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 954,
																"indexExpression": {
																	"id": 953,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "9507:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9496:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "9496:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 956,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "9537:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9537:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 943,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "9383:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9383:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "EmitStatement",
												"src": "9378:184:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 960,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "9631:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9631:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "9631:12:2"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 843,
											"modifierName": {
												"id": 842,
												"name": "onlyHolders",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 397,
												"src": "8171:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8171:11:2"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "8147:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8147:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8146:17:2"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8183:0:2"
									},
									"scope": 1993,
									"src": "8129:1525:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9782:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "9815:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "9820:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 975,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "9799:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9799:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 974,
												"id": 979,
												"nodeType": "Return",
												"src": "9792:36:2"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 971,
											"modifierName": {
												"id": 970,
												"name": "onlyHolders",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 397,
												"src": "9755:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9755:11:2"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9703:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9724:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9693:52:2"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9776:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9776:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9775:6:2"
									},
									"scope": 1993,
									"src": "9676:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "10098:293:2",
										"statements": [
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "10108:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10108:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"hexValue": "30",
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10120:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10108:13:2"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "jpegTest1",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "10131:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2187",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 992,
															"name": "IERC721",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2187,
															"src": "10131:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$2187",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"nodeType": "VariableDeclarationStatement",
												"src": "10131:17:2"
											},
											{
												"body": {
													"id": 1021,
													"nodeType": "Block",
													"src": "10194:99:2",
													"statements": [
														{
															"expression": {
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1006,
																	"name": "jpegTest1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10208:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$2187",
																		"typeString": "contract IERC721"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1008,
																				"name": "jpeg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "10228:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
																					"typeString": "contract IERC721[] storage ref"
																				}
																			},
																			"id": 1010,
																			"indexExpression": {
																				"id": 1009,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "10233:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10228:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$2187",
																				"typeString": "contract IERC721"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC721_$2187",
																				"typeString": "contract IERC721"
																			}
																		],
																		"id": 1007,
																		"name": "IERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "10220:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721_$2187_$",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10220:16:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$2187",
																		"typeString": "contract IERC721"
																	}
																},
																"src": "10208:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$2187",
																	"typeString": "contract IERC721"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "10208:28:2"
														},
														{
															"expression": {
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1014,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "10251:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1017,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "10276:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1015,
																			"name": "jpegTest1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "10256:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$2187",
																				"typeString": "contract IERC721"
																			}
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2112,
																		"src": "10256:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10256:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10251:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "10251:31:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "10173:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1000,
															"name": "jpeg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "10177:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10177:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10173:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"initializationExpression": {
													"assignments": [
														996
													],
													"declarations": [
														{
															"constant": false,
															"id": 996,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1022,
															"src": "10162:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 995,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10162:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 998,
													"initialValue": {
														"hexValue": "30",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10170:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10162:9:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10190:3:2",
														"subExpression": {
															"id": 1003,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "10190:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1005,
													"nodeType": "ExpressionStatement",
													"src": "10190:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10158:135:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "10305:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1024,
														"name": "requiredBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "10310:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10305:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "10301:62:2",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "10327:36:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10348:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 987,
															"id": 1027,
															"nodeType": "Return",
															"src": "10341:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10379:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 987,
												"id": 1031,
												"nodeType": "Return",
												"src": "10372:12:2"
											}
										]
									},
									"functionSelector": "36599ead",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkImmunity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10047:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10047:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10046:15:2"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "isImmune",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10083:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10083:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10082:15:2"
									},
									"scope": 1993,
									"src": "10024:367:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "10447:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1039,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10474:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10474:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1038,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "10464:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10464:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1042,
												"nodeType": "Return",
												"src": "10457:28:2"
											}
										]
									},
									"functionSelector": "949e8acd",
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10414:2:2"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "10438:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:9:2"
									},
									"scope": 1993,
									"src": "10397:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "10550:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10579:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10579:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1049,
														"name": "dividendsOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "10567:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10567:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1053,
												"nodeType": "Return",
												"src": "10560:30:2"
											}
										]
									},
									"functionSelector": "ffe6bbd8",
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myEarnings",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10517:2:2"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "10541:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10541:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10540:9:2"
									},
									"scope": 1993,
									"src": "10498:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "10667:41:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1062,
														"name": "balanceOf_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "10684:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1064,
													"indexExpression": {
														"id": 1063,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "10695:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10684:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1061,
												"id": 1065,
												"nodeType": "Return",
												"src": "10677:24:2"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "10622:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10621:15:2"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "10658:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10657:9:2"
									},
									"scope": 1993,
									"src": "10603:105:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "10781:37:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1074,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "10798:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "10798:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1076,
												"nodeType": "Return",
												"src": "10791:20:2"
											}
										]
									},
									"functionSelector": "eedc966a",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "10736:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10735:15:2"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "10772:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10771:9:2"
									},
									"scope": 1993,
									"src": "10714:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "10878:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1087,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10926:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DiamondSafe_$1993",
																		"typeString": "contract DiamondSafe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DiamondSafe_$1993",
																		"typeString": "contract DiamondSafe"
																	}
																],
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10918:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1085,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10918:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10918:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 1083,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "10895:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2010,
														"src": "10895:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10895:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1082,
												"id": 1090,
												"nodeType": "Return",
												"src": "10888:44:2"
											}
										]
									},
									"functionSelector": "ad7a672f",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10845:2:2"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "10869:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10868:9:2"
									},
									"scope": 1993,
									"src": "10824:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "10998:42:2",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"name": "currentTotalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "11015:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1098,
												"nodeType": "Return",
												"src": "11008:25:2"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10965:2:2"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "10989:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10988:9:2"
									},
									"scope": 1993,
									"src": "10945:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "11112:174:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1113,
																				"name": "profitPerShare_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "11177:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1114,
																					"name": "balanceOf_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 445,
																					"src": "11195:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1116,
																				"indexExpression": {
																					"id": 1115,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "11206:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11195:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11177:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"components": [
																			{
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11169:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 1110,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11169:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1112,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11168:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11168:45:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1119,
																		"name": "payoutsOf_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "11236:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																			"typeString": "mapping(address => int256)"
																		}
																	},
																	"id": 1121,
																	"indexExpression": {
																		"id": 1120,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "11247:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11236:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11168:85:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"components": [
																{
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11142:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1107,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11142:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11141:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11141:126:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1124,
														"name": "magnitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "11270:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11141:138:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1126,
												"nodeType": "Return",
												"src": "11122:157:2"
											}
										]
									},
									"functionSelector": "0065318b",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dividendsOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "11067:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11067:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11066:15:2"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "11103:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:9:2"
									},
									"scope": 1993,
									"src": "11046:240:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "11344:214:2",
										"statements": [
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "11354:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11354:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11372:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11354:22:2"
											},
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "11386:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11386:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1143,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "11433:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1144,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "11442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1141,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2952,
																	"src": "11420:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "11420:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11420:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11452:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1139,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "11407:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2835,
														"src": "11407:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11407:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11386:70:2"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "_taxedTokens",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "11466:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11466:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"arguments": [
														{
															"id": 1153,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "11502:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1154,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "11511:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1151,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "11489:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2779,
														"src": "11489:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11466:56:2"
											},
											{
												"expression": {
													"id": 1157,
													"name": "_taxedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1150,
													"src": "11539:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1132,
												"id": 1158,
												"nodeType": "Return",
												"src": "11532:19:2"
											}
										]
									},
									"functionSelector": "4b750334",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11310:2:2"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "11335:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:9:2"
									},
									"scope": 1993,
									"src": "11292:266:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "11614:214:2",
										"statements": [
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "11624:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11624:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11642:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11624:22:2"
											},
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "11656:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11656:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1175,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "11703:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1176,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "11712:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1173,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2952,
																	"src": "11690:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "11690:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11690:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11722:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1171,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "11677:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2835,
														"src": "11677:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11677:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11656:70:2"
											},
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "_taxedTokens",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "11736:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11736:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"arguments": [
														{
															"id": 1185,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "11772:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1186,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "11781:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1183,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "11759:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2757,
														"src": "11759:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11759:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11736:56:2"
											},
											{
												"expression": {
													"id": 1189,
													"name": "_taxedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1182,
													"src": "11809:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1190,
												"nodeType": "Return",
												"src": "11802:19:2"
											}
										]
									},
									"functionSelector": "8620410b",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11581:2:2"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "11605:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11605:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11604:9:2"
									},
									"scope": 1993,
									"src": "11564:264:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "11928:203:2",
										"statements": [
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "_divies",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "11938:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11938:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "11982:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1206,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "11991:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1203,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2952,
																	"src": "11969:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "11969:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11969:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12001:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1201,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "11956:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2835,
														"src": "11956:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11956:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11938:67:2"
											},
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "_remains",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "12015:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [
														{
															"id": 1215,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "12047:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1216,
															"name": "_divies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "12056:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1213,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "12034:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2779,
														"src": "12034:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12034:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12015:49:2"
											},
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "_result",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "12074:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12074:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"id": 1221,
													"name": "_remains",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1212,
													"src": "12092:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12074:26:2"
											},
											{
												"expression": {
													"id": 1223,
													"name": "_result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1220,
													"src": "12117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1224,
												"nodeType": "Return",
												"src": "12110:14:2"
											}
										]
									},
									"functionSelector": "e02e1e9c",
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateSharesReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "11876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11866:31:2"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "11919:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11919:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11918:9:2"
									},
									"scope": 1993,
									"src": "11834:297:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "12231:251:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1234,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "12249:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1235,
																"name": "currentTotalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "12260:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12249:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12241:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12241:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "12241:38:2"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "12289:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"id": 1241,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1228,
													"src": "12307:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12289:25:2"
											},
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "_divies",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "12324:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12324:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1249,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "12368:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1250,
																	"name": "divsFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "12377:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1247,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2952,
																	"src": "12355:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "12355:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12355:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12387:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1245,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "12342:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2835,
														"src": "12342:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12342:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12324:67:2"
											},
											{
												"assignments": [
													1256
												],
												"declarations": [
													{
														"constant": false,
														"id": 1256,
														"mutability": "mutable",
														"name": "_remains",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "12401:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12401:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1262,
												"initialValue": {
													"arguments": [
														{
															"id": 1259,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "12433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1260,
															"name": "_divies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "12442:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1257,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "12420:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2779,
														"src": "12420:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12420:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12401:49:2"
											},
											{
												"expression": {
													"id": 1263,
													"name": "_remains",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1256,
													"src": "12467:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1264,
												"nodeType": "Return",
												"src": "12460:15:2"
											}
										]
									},
									"functionSelector": "10d0ffdd",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokensReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "12179:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12179:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12169:31:2"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "12222:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12221:9:2"
									},
									"scope": 1993,
									"src": "12137:345:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "12563:522:2",
										"statements": [
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 1319,
														"src": "12573:16:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
															"typeString": "struct DiamondSafe.Account"
														},
														"typeName": {
															"id": 1275,
															"name": "Account",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 437,
															"src": "12573:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage_ptr",
																"typeString": "struct DiamondSafe.Account"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"baseExpression": {
														"id": 1277,
														"name": "accountOf_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "12592:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
															"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
														}
													},
													"id": 1279,
													"indexExpression": {
														"id": 1278,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "12603:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12592:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Account_$437_storage",
														"typeString": "struct DiamondSafe.Account storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12573:36:2"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "accountArray",
														"nodeType": "VariableDeclaration",
														"scope": 1319,
														"src": "12619:31:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
															"typeString": "uint256[14]"
														},
														"typeName": {
															"baseType": {
																"id": 1284,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1285,
															"length": {
																"hexValue": "3134",
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12627:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14_by_1",
																	"typeString": "int_const 14"
																},
																"value": "14"
															},
															"nodeType": "ArrayTypeName",
															"src": "12619:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$14_storage_ptr",
																"typeString": "uint256[14]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"components": [
														{
															"expression": {
																"id": 1287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12667:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "12667:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1289,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12692:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "12692:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1291,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12717:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewarded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 416,
															"src": "12717:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1293,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12741:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "compounded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "12741:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contributed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 418,
															"src": "12767:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1297,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12794:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferredShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 420,
															"src": "12794:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1299,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12827:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "receivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 422,
															"src": "12827:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1301,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12857:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xInvested",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 424,
															"src": "12857:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xRewarded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 428,
															"src": "12882:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1305,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12907:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xContributed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 430,
															"src": "12907:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1307,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12935:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xWithdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "12935:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1309,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12961:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xTransferredShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 434,
															"src": "12961:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "12995:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xReceivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 436,
															"src": "12995:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1313,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "13026:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_memory_ptr",
																	"typeString": "struct DiamondSafe.Account memory"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "xCompounded",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 426,
															"src": "13026:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1315,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12653:396:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
														"typeString": "uint256[14] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12619:430:2"
											},
											{
												"expression": {
													"id": 1317,
													"name": "accountArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1286,
													"src": "13066:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
														"typeString": "uint256[14] memory"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1318,
												"nodeType": "Return",
												"src": "13059:19:2"
											}
										]
									},
									"functionSelector": "8086b8ba",
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accountOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "12507:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12507:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12506:15:2"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "12543:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$14_memory_ptr",
													"typeString": "uint256[14]"
												},
												"typeName": {
													"baseType": {
														"id": 1270,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12543:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1272,
													"length": {
														"hexValue": "3134",
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_14_by_1",
															"typeString": "int_const 14"
														},
														"value": "14"
													},
													"nodeType": "ArrayTypeName",
													"src": "12543:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$14_storage_ptr",
														"typeString": "uint256[14]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12542:20:2"
									},
									"scope": 1993,
									"src": "12488:597:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "13159:215:2",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "share",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "13169:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1336,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13219:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1331,
																	"name": "dripRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "13205:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1329,
																	"name": "dripPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "13185:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "13185:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13185:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2835,
														"src": "13185:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13185:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13169:54:2"
											},
											{
												"expression": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1337,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "13253:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13253:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1340,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13252:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13366:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13252:115:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 1348,
																"name": "currentTotalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "13328:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1343,
																			"name": "balanceOf_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "13305:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1345,
																		"indexExpression": {
																			"id": 1344,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "13316:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13305:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1341,
																		"name": "share",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "13295:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2813,
																	"src": "13295:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13295:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2835,
															"src": "13295:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13295:52:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1352,
												"nodeType": "Return",
												"src": "13233:134:2"
											}
										]
									},
									"functionSelector": "fbaf1bbd",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dailyEstimate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13114:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13113:15:2"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13150:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13150:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13149:9:2"
									},
									"scope": 1993,
									"src": "13091:283:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "13610:296:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1368,
																		"name": "_divs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "13638:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1366,
																		"name": "_pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "13628:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2757,
																	"src": "13628:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13628:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13648:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "13628:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54454e5f504f5254494f4e535f524551554952455f4449564953494f4e",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13652:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c70c5fa0b5c0d2773598ee22ede93a0b89d086249c68ce8bc880fe634a056ae",
																"typeString": "literal_string \"TEN_PORTIONS_REQUIRE_DIVISION\""
															},
															"value": "TEN_PORTIONS_REQUIRE_DIVISION"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c70c5fa0b5c0d2773598ee22ede93a0b89d086249c68ce8bc880fe634a056ae",
																"typeString": "literal_string \"TEN_PORTIONS_REQUIRE_DIVISION\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13620:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13620:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "13620:64:2"
											},
											{
												"expression": {
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1375,
														"name": "forPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "13728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1376,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "13738:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13728:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "13728:15:2"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1379,
														"name": "forDivs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "13753:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1380,
														"name": "_divs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "13763:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13753:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "13753:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1384,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "13848:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1385,
															"name": "_divs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "13855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1386,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "13862:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13862:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"name": "onSetFeeSplit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "13834:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13834:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "EmitStatement",
												"src": "13829:49:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13895:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1364,
												"id": 1391,
												"nodeType": "Return",
												"src": "13888:11:2"
											}
										]
									},
									"functionSelector": "7e6335c7",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1361,
											"modifierName": {
												"id": 1360,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "13576:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13576:9:2"
										}
									],
									"name": "setFeeSplit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "13526:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_divs",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "13549:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13516:52:2"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "13595:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13595:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13594:15:2"
									},
									"scope": 1993,
									"src": "13496:410:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "14077:415:2",
										"statements": [
											{
												"body": {
													"id": 1424,
													"nodeType": "Block",
													"src": "14119:130:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30783830616335386364",
																				"id": 1419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14212:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2158778573_by_1",
																					"typeString": "int_const 2158778573"
																				},
																				"value": "0x80ac58cd"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2158778573_by_1",
																					"typeString": "int_const 2158778573"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 1415,
																					"name": "_contract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1396,
																					"src": "14181:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
																						"typeString": "contract IERC721[] memory"
																					}
																				},
																				"id": 1417,
																				"indexExpression": {
																					"id": 1416,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "14191:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14181:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC721_$2187",
																					"typeString": "contract IERC721"
																				}
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2963,
																			"src": "14181:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14181:42:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e4f545f455243373231",
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14225:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d74553be9cf5182c4eb87cee7703c25a8fb7e946d1fe89483a54f86d57680453",
																			"typeString": "literal_string \"NOT_ERC721\""
																		},
																		"value": "NOT_ERC721"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d74553be9cf5182c4eb87cee7703c25a8fb7e946d1fe89483a54f86d57680453",
																			"typeString": "literal_string \"NOT_ERC721\""
																		}
																	],
																	"id": 1414,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "14173:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14173:65:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1423,
															"nodeType": "ExpressionStatement",
															"src": "14173:65:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1407,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "14098:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1408,
															"name": "jpeg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "14102:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
																"typeString": "contract IERC721[] storage ref"
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14102:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14098:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1425,
												"initializationExpression": {
													"assignments": [
														1404
													],
													"declarations": [
														{
															"constant": false,
															"id": 1404,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1425,
															"src": "14087:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1403,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "14087:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1406,
													"initialValue": {
														"hexValue": "30",
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14095:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14087:9:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14115:3:2",
														"subExpression": {
															"id": 1411,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "14115:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1413,
													"nodeType": "ExpressionStatement",
													"src": "14115:3:2"
												},
												"nodeType": "ForStatement",
												"src": "14083:166:2"
											},
											{
												"assignments": [
													1429
												],
												"declarations": [
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "oldContract",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "14258:28:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
															"typeString": "contract IERC721[]"
														},
														"typeName": {
															"baseType": {
																"id": 1427,
																"name": "IERC721",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2187,
																"src": "14258:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$2187",
																	"typeString": "contract IERC721"
																}
															},
															"id": 1428,
															"nodeType": "ArrayTypeName",
															"src": "14258:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage_ptr",
																"typeString": "contract IERC721[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"id": 1430,
													"name": "jpeg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "14289:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
														"typeString": "contract IERC721[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14258:35:2"
											},
											{
												"expression": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1432,
														"name": "jpeg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "14303:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
															"typeString": "contract IERC721[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1433,
														"name": "_contract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "14310:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
															"typeString": "contract IERC721[] memory"
														}
													},
													"src": "14303:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage",
														"typeString": "contract IERC721[] storage ref"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "14303:16:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1437,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14367:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14367:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1439,
															"name": "oldContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "14391:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															}
														},
														{
															"id": 1440,
															"name": "_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "14416:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															}
														},
														{
															"expression": {
																"id": 1441,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "14439:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "14439:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
																"typeString": "contract IERC721[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1436,
														"name": "onSetImmunityToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "14335:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr_$_t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,contract IERC721[] memory,contract IERC721[] memory,uint256)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14335:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "EmitStatement",
												"src": "14330:134:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14481:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1402,
												"id": 1446,
												"nodeType": "Return",
												"src": "14474:11:2"
											}
										]
									},
									"functionSelector": "f6db0da0",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1399,
											"modifierName": {
												"id": 1398,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "14043:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14043:9:2"
										}
									],
									"name": "setImmunityToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_contract",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "14003:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_memory_ptr",
													"typeString": "contract IERC721[]"
												},
												"typeName": {
													"baseType": {
														"id": 1394,
														"name": "IERC721",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2187,
														"src": "14003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$2187",
															"typeString": "contract IERC721"
														}
													},
													"id": 1395,
													"nodeType": "ArrayTypeName",
													"src": "14003:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC721_$2187_$dyn_storage_ptr",
														"typeString": "contract IERC721[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13993:42:2"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "14062:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14062:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14061:15:2"
									},
									"scope": 1993,
									"src": "13968:524:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "14702:697:2",
										"statements": [
											{
												"assignments": [
													1454
												],
												"declarations": [
													{
														"constant": false,
														"id": 1454,
														"mutability": "mutable",
														"name": "_onePiece",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "14712:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14712:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14740:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1455,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "14732:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2835,
														"src": "14732:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14732:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14712:31:2"
											},
											{
												"assignments": [
													1461
												],
												"declarations": [
													{
														"constant": false,
														"id": 1461,
														"mutability": "mutable",
														"name": "_forPool",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "14754:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1460,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14754:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1467,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1464,
																	"name": "forPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "14788:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1462,
																	"name": "_onePiece",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "14774:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "14774:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14774:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1466,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14773:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14754:43:2"
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "_forDivs",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "14828:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1472,
																	"name": "forDivs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "14862:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1470,
																	"name": "_onePiece",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "14848:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2813,
																"src": "14848:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14848:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1474,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14847:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14828:43:2"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "dripPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "14902:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1479,
																"name": "_forPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "14940:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1477,
																"name": "dripPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "14920:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2757,
															"src": "14920:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14920:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14902:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "14902:47:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1483,
														"name": "currentTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "15028:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15049:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15028:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1504,
													"nodeType": "Block",
													"src": "15269:124:2",
													"statements": [
														{
															"expression": {
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1500,
																	"name": "dripPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "15355:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1501,
																	"name": "_forDivs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "15374:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15355:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "15355:27:2"
														}
													]
												},
												"id": 1505,
												"nodeType": "IfStatement",
												"src": "15024:369:2",
												"trueBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "15052:211:2",
													"statements": [
														{
															"expression": {
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1486,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "15114:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1489,
																			"name": "profitPerShare_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "15162:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1490,
																							"name": "_forDivs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1469,
																							"src": "15196:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1491,
																							"name": "magnitude",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 370,
																							"src": "15207:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15196:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1493,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "15195:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1494,
																				"name": "currentTotalStaked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "15220:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15195:43:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1487,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2952,
																			"src": "15132:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2757,
																		"src": "15132:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15132:120:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15114:138:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1498,
															"nodeType": "ExpressionStatement",
															"src": "15114:138:2"
														}
													]
												}
											}
										]
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocateFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "14684:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14684:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14683:10:2"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14702:0:2"
									},
									"scope": 1993,
									"src": "14662:737:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "15470:1212:2",
										"statements": [
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "_currentTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "15480:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1510,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15480:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"components": [
														{
															"expression": {
																"id": 1512,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "15506:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "15506:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1514,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15505:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15480:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1518,
																"name": "lastRebaseTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "15613:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1516,
																"name": "_currentTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "15587:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safeSub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2951,
															"src": "15587:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15587:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1520,
														"name": "rebaseFrequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "15631:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15587:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "15583:278:2",
												"trueBody": {
													"id": 1532,
													"nodeType": "Block",
													"src": "15648:213:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1523,
																			"name": "totalBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1092,
																			"src": "15711:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15711:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1525,
																		"name": "_currentTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "15727:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1522,
																	"name": "onRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "15702:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15702:43:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1527,
															"nodeType": "EmitStatement",
															"src": "15697:48:2"
														},
														{
															"expression": {
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1528,
																	"name": "lastRebaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "15816:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1529,
																	"name": "_currentTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "15833:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15816:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1531,
															"nodeType": "ExpressionStatement",
															"src": "15816:34:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1536,
																	"name": "_currentTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "15950:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1537,
																	"name": "lastPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "15969:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1534,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2952,
																	"src": "15933:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safeSub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2951,
																"src": "15933:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15933:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1539,
															"name": "payoutFrequency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "15983:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15933:65:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1541,
															"name": "currentTotalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "16014:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16035:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16014:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15933:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "15916:760:2",
												"trueBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "16047:629:2",
													"statements": [
														{
															"assignments": [
																1546
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1546,
																	"mutability": "mutable",
																	"name": "share",
																	"nodeType": "VariableDeclaration",
																	"scope": 1591,
																	"src": "16108:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1545,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16108:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1557,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16184:8:2",
																		"subdenomination": "hours",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "24"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16158:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1549,
																						"name": "dripRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 362,
																						"src": "16144:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"expression": {
																						"id": 1547,
																						"name": "dripPoolBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "16124:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2813,
																					"src": "16124:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16124:29:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2835,
																			"src": "16124:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16124:38:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2835,
																	"src": "16124:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16124:82:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16108:98:2"
														},
														{
															"assignments": [
																1559
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1559,
																	"mutability": "mutable",
																	"name": "profit",
																	"nodeType": "VariableDeclaration",
																	"scope": 1591,
																	"src": "16220:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1558,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16220:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1566,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1560,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "16237:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1563,
																			"name": "lastPayout",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "16271:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1561,
																			"name": "_currentTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1511,
																			"src": "16245:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeSub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2951,
																		"src": "16245:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16245:37:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16237:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16220:62:2"
														},
														{
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1567,
																	"name": "dripPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "16373:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1570,
																			"name": "profit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "16415:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1568,
																			"name": "dripPoolBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "16391:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeSub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2951,
																		"src": "16391:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16391:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16373:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "16373:49:2"
														},
														{
															"expression": {
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1574,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "16436:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1577,
																			"name": "profitPerShare_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "16484:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1580,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1578,
																							"name": "profit",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1559,
																							"src": "16518:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1579,
																							"name": "magnitude",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 370,
																							"src": "16527:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16518:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1581,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "16517:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1582,
																				"name": "currentTotalStaked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "16540:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16517:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1575,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2952,
																			"src": "16454:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2757,
																		"src": "16454:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16454:118:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16436:136:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "16436:136:2"
														},
														{
															"expression": {
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1587,
																	"name": "lastPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "16635:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1588,
																	"name": "_currentTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "16648:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16635:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1590,
															"nodeType": "ExpressionStatement",
															"src": "16635:30:2"
														}
													]
												}
											}
										]
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15459:2:2"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15470:0:2"
									},
									"scope": 1993,
									"src": "15440:1242:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "16838:1466:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1603,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "16940:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1605,
																"indexExpression": {
																	"id": 1604,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "16951:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16940:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "16940:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16976:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16940:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1609,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "16993:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1611,
																"indexExpression": {
																	"id": 1610,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "17004:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16993:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "receivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 422,
															"src": "16993:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17034:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16993:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16940:95:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1621,
												"nodeType": "IfStatement",
												"src": "16923:158:2",
												"trueBody": {
													"id": 1620,
													"nodeType": "Block",
													"src": "17046:35:2",
													"statements": [
														{
															"expression": {
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1616,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "17060:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17069:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17060:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1619,
															"nodeType": "ExpressionStatement",
															"src": "17060:10:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1622,
														"name": "totalTxs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "17119:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17131:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "17119:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "17119:13:2"
											},
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "_undividedDividends",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "17148:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1630,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "17191:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1631,
																"name": "divsFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "17200:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 1628,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "17178:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2813,
															"src": "17178:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17178:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17211:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "17178:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17148:66:2"
											},
											{
												"assignments": [
													1637
												],
												"declarations": [
													{
														"constant": false,
														"id": 1637,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "17226:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1643,
												"initialValue": {
													"arguments": [
														{
															"id": 1640,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "17259:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1641,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "17268:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1638,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "17246:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2779,
														"src": "17246:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17246:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17226:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1645,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "17353:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "17365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1647,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "17374:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1648,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "17383:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "17383:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1644,
														"name": "onDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "17343:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "EmitStatement",
												"src": "17338:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1653,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "17498:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17508:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17498:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1658,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1637,
																			"src": "17542:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1659,
																			"name": "currentTotalStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 384,
																			"src": "17551:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1656,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2952,
																			"src": "17529:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2757,
																		"src": "17529:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17529:41:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1661,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "17573:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17529:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17498:93:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17477:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17477:124:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "17477:124:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1666,
														"name": "currentTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "17615:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17636:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17615:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "17699:53:2",
													"statements": [
														{
															"expression": {
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1674,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "17713:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1675,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "17734:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17713:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1677,
															"nodeType": "ExpressionStatement",
															"src": "17713:28:2"
														}
													]
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "17611:141:2",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "17639:54:2",
													"statements": [
														{
															"expression": {
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1669,
																	"name": "currentTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "17653:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1670,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "17675:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17653:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1672,
															"nodeType": "ExpressionStatement",
															"src": "17653:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1681,
															"name": "_undividedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "17830:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1680,
														"name": "allocateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "17817:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17817:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "17817:33:2"
											},
											{
												"expression": {
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1684,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "17860:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1686,
														"indexExpression": {
															"id": 1685,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "17871:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17860:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1689,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "17898:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1691,
																"indexExpression": {
																	"id": 1690,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "17909:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17898:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1692,
																"name": "_tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "17922:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1687,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "17885:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2757,
															"src": "17885:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17885:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17860:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "17860:70:2"
											},
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "_updatedPayouts",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "17971:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1696,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "17971:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "profitPerShare_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "18005:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1702,
																"name": "_tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "18023:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18005:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17997:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1698,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17997:6:2",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 1700,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17996:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17971:60:2"
											},
											{
												"expression": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1706,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "18069:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1708,
														"indexExpression": {
															"id": 1707,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "18080:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18069:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1709,
														"name": "_updatedPayouts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "18095:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18069:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "18069:41:2"
											},
											{
												"expression": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1712,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "18120:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1714,
															"indexExpression": {
																"id": 1713,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "18131:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18120:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "deposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "18120:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1716,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "18156:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18120:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "18120:43:2"
											},
											{
												"expression": {
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1719,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "18173:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1721,
															"indexExpression": {
																"id": 1720,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "18184:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18173:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xInvested",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 424,
														"src": "18173:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18209:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18173:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "18173:37:2"
											},
											{
												"expression": {
													"id": 1726,
													"name": "_tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1637,
													"src": "18290:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1727,
												"nodeType": "Return",
												"src": "18283:14:2"
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "16761:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "16789:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16789:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16751:59:2"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "16829:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16828:9:2"
									},
									"scope": 1993,
									"src": "16728:1576:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "18398:1124:2",
										"statements": [
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "_user",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "18408:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1734,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18408:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"expression": {
														"id": 1736,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "18424:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "18424:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18408:26:2"
											},
											{
												"assignments": [
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "_dividends",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "18510:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18510:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"arguments": [
														{
															"id": 1742,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "18543:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1741,
														"name": "dividendsOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "18531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18531:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18510:39:2"
											},
											{
												"expression": {
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1745,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "18559:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1747,
														"indexExpression": {
															"id": 1746,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "18570:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18559:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1751,
																	"name": "_dividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "18589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1752,
																	"name": "magnitude",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "18602:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18589:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18581:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1748,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "18581:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1750,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18580:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18580:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18559:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "18559:53:2"
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "_tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "18767:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "18800:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18800:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1762,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "18812:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1759,
														"name": "_depositTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "18785:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18785:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18767:56:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1766,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "18881:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1767,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "18888:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1768,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "18900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1769,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "18909:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18909:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1765,
														"name": "onCompound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "18870:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18870:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "EmitStatement",
												"src": "18865:60:2"
											},
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1773,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "18972:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1775,
															"indexExpression": {
																"id": 1774,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "18983:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18972:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "compounded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "18972:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 1779,
																		"name": "accountOf_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "19029:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																			"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																		}
																	},
																	"id": 1781,
																	"indexExpression": {
																		"id": 1780,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "19040:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19029:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Account_$437_storage",
																		"typeString": "struct DiamondSafe.Account storage ref"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "compounded",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 414,
																"src": "19029:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1783,
																"name": "_dividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "19071:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1777,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "19003:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2757,
															"src": "19003:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19003:88:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18972:119:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "18972:119:2"
											},
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1787,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "19101:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1789,
															"indexExpression": {
																"id": 1788,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "19112:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19101:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xCompounded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 426,
														"src": "19101:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19134:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "19101:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "19101:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1795,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "19210:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1796,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "19229:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1798,
																"indexExpression": {
																	"id": 1797,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "19240:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19229:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "19229:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1800,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "19270:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1802,
															"indexExpression": {
																"id": 1801,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "19281:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19270:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1803,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "19301:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1805,
																"indexExpression": {
																	"id": 1804,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "19312:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19301:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "19301:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1807,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "19342:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "19342:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1794,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "19188:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19188:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "EmitStatement",
												"src": "19183:184:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1811,
														"name": "distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "19446:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19446:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "19446:12:2"
											},
											{
												"expression": {
													"id": 1814,
													"name": "_tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1758,
													"src": "19508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1815,
												"nodeType": "Return",
												"src": "19501:14:2"
											}
										]
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_compoundTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18368:2:2"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "18389:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18389:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18388:9:2"
									},
									"scope": 1993,
									"src": "18344:1178:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "19686:1852:2",
										"statements": [
											{
												"assignments": [
													1827
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 1991,
														"src": "19696:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1826,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19696:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1830,
												"initialValue": {
													"expression": {
														"id": 1828,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "19714:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19714:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19696:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "19742:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1833,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "19753:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1835,
																"indexExpression": {
																	"id": 1834,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "19764:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19753:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19742:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1831,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19734:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19734:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "19734:39:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1839,
															"name": "myEarnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "19873:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19873:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19888:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19873:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "IfStatement",
												"src": "19869:56:2",
												"trueBody": {
													"id": 1846,
													"nodeType": "Block",
													"src": "19891:34:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1843,
																	"name": "harvest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "19905:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19905:9:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "19905:9:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1848,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "19967:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1850,
														"indexExpression": {
															"id": 1849,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "19978:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19967:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1853,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "20002:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1855,
																"indexExpression": {
																	"id": 1854,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "20013:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20002:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1856,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "20023:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1851,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "19989:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2779,
															"src": "19989:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19989:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19967:64:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "19967:64:2"
											},
											{
												"expression": {
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1860,
															"name": "balanceOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "20041:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1862,
														"indexExpression": {
															"id": 1861,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "20052:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20041:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1865,
																	"name": "balanceOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "20079:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1867,
																"indexExpression": {
																	"id": 1866,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "20090:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20079:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1868,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "20103:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1863,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "20066:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2952_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2757,
															"src": "20066:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20066:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20041:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "20041:70:2"
											},
											{
												"expression": {
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "20183:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1874,
														"indexExpression": {
															"id": 1873,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "20194:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20183:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1878,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "20215:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1879,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "20233:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20215:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20207:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1875,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20207:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1877,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20206:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20206:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20183:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "20183:58:2"
											},
											{
												"expression": {
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1884,
															"name": "payoutsOf_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "20251:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 1886,
														"indexExpression": {
															"id": 1885,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "20262:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20251:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1890,
																	"name": "profitPerShare_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "20286:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1891,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "20304:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20286:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"components": [
																{
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20278:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1887,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20278:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1889,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20277:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20277:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20251:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "20251:61:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1896,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "20415:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1898,
																"indexExpression": {
																	"id": 1897,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "20426:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20415:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "20415:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20451:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20415:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1902,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "20468:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1904,
																"indexExpression": {
																	"id": 1903,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "20479:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20468:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "receivedShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 422,
															"src": "20468:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20509:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20468:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20415:95:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1914,
												"nodeType": "IfStatement",
												"src": "20398:158:2",
												"trueBody": {
													"id": 1913,
													"nodeType": "Block",
													"src": "20521:35:2",
													"statements": [
														{
															"expression": {
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1909,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "20535:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20535:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1912,
															"nodeType": "ExpressionStatement",
															"src": "20535:10:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1915,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "20592:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1917,
															"indexExpression": {
																"id": 1916,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "20603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20592:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xTransferredShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 434,
														"src": "20592:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20634:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20592:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "20592:43:2"
											},
											{
												"expression": {
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1922,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "20645:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1924,
															"indexExpression": {
																"id": 1923,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "20656:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20645:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "transferredShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "20645:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1926,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "20686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20645:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "20645:48:2"
											},
											{
												"expression": {
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1929,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "20703:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1931,
															"indexExpression": {
																"id": 1930,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "20714:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20703:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "receivedShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 422,
														"src": "20703:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1933,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "20744:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20703:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "20703:48:2"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1936,
																"name": "accountOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "20761:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																	"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																}
															},
															"id": 1938,
															"indexExpression": {
																"id": 1937,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "20772:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20761:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$437_storage",
																"typeString": "struct DiamondSafe.Account storage ref"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "xReceivedShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "20761:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20803:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20761:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "20761:43:2"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "totalTxs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "20856:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20868:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20856:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "20856:13:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1948,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "20946:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "20955:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1950,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "20967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1951,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "20976:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "20976:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1947,
														"name": "onTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "20935:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20935:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "EmitStatement",
												"src": "20930:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1956,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "21078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1957,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "21099:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1959,
																"indexExpression": {
																	"id": 1958,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "21110:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21099:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "21099:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1961,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "21142:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1963,
															"indexExpression": {
																"id": 1962,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "21153:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21142:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1964,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "21175:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1966,
																"indexExpression": {
																	"id": 1965,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "21186:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21175:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "21175:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1968,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "21218:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "21218:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1955,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "21056:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21056:187:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1971,
												"nodeType": "EmitStatement",
												"src": "21051:192:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1973,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "21332:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1974,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "21356:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1976,
																"indexExpression": {
																	"id": 1975,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "21367:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21356:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 410,
															"src": "21356:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1978,
																"name": "balanceOf_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "21402:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1980,
															"indexExpression": {
																"id": 1979,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "21413:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21402:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1981,
																	"name": "accountOf_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "21438:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$437_storage_$",
																		"typeString": "mapping(address => struct DiamondSafe.Account storage ref)"
																	}
																},
																"id": 1983,
																"indexExpression": {
																	"id": 1982,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "21449:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21438:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Account_$437_storage",
																	"typeString": "struct DiamondSafe.Account storage ref"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 412,
															"src": "21438:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1985,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "21484:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "21484:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1972,
														"name": "onUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "21310:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21310:199:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "EmitStatement",
												"src": "21305:204:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1825,
												"id": 1990,
												"nodeType": "Return",
												"src": "21520:11:2"
											}
										]
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "19603:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "19631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19593:59:2"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "19671:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19671:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19670:15:2"
									},
									"scope": 1993,
									"src": "19569:1969:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1994,
							"src": "237:21303:2"
						}
					],
					"src": "32:21509:2"
				},
				"id": 2
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2071
						]
					},
					"id": 2072,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1995,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1996,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2071,
							"linearizedBaseContracts": [
								2071
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 2071,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 2071,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2011,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 2071,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 2071,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 2071,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 2071,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 2061,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 2070,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 2072,
							"src": "137:2566:3"
						}
					],
					"src": "33:2670:3"
				},
				"id": 3
			},
			"contracts/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2964
						],
						"IERC721": [
							2187
						]
					},
					"id": 2188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2073,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "lib/utils/introspection/IERC165.sol",
							"file": "../lib/utils/introspection/IERC165.sol",
							"id": 2074,
							"nodeType": "ImportDirective",
							"scope": 2188,
							"sourceUnit": 2965,
							"src": "133:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2076,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2964,
										"src": "272:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$2964",
											"typeString": "contract IERC165"
										}
									},
									"id": 2077,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:4"
								}
							],
							"contractDependencies": [
								2964
							],
							"contractKind": "interface",
							"documentation": {
								"id": 2075,
								"nodeType": "StructuredDocumentation",
								"src": "183:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 2187,
							"linearizedBaseContracts": [
								2187,
								2964
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "286:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 2086,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "394:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "416:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "436:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:67:4"
									},
									"src": "379:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "467:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 2095,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "581:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "604:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "630:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:74:4"
									},
									"src": "566:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "661:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 2104,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "804:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "827:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "853:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:64:4"
									},
									"src": "783:85:4"
								},
								{
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "874:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 2112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "974:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:4"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "1012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:17:4"
									},
									"scope": 2187,
									"src": "955:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "1035:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1188:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:17:4"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1228:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:15:4"
									},
									"scope": 2187,
									"src": "1171:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "1249:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "1845:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "1867:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "1887:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "1912:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1912:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:102:4"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:0:4"
									},
									"scope": 2187,
									"src": "1810:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "1953:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 2142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2680:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2680:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2702:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:73:4"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:4"
									},
									"scope": 2187,
									"src": "2645:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "2759:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "3527:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "3549:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "3569:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:73:4"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3599:0:4"
									},
									"scope": 2187,
									"src": "3496:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "3606:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "4080:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "4092:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:29:4"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4117:0:4"
									},
									"scope": 2187,
									"src": "4063:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "4124:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "4465:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "4483:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4483:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:34:4"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:0:4"
									},
									"scope": 2187,
									"src": "4438:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "4514:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "4679:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4678:17:4"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "4719:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:18:4"
									},
									"scope": 2187,
									"src": "4658:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2177,
										"nodeType": "StructuredDocumentation",
										"src": "4743:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 2186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "4912:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "4927:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4911:33:4"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "4968:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4968:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:6:4"
									},
									"scope": 2187,
									"src": "4886:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2188,
							"src": "251:4725:4"
						}
					],
					"src": "108:4868:4"
				},
				"id": 4
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							318
						],
						"Ownable": [
							2297
						]
					},
					"id": 2298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2189,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 2190,
							"nodeType": "ImportDirective",
							"scope": 2298,
							"sourceUnit": 319,
							"src": "66:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2192,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 318,
										"src": "614:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$318",
											"typeString": "contract Context"
										}
									},
									"id": 2193,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:5"
								}
							],
							"contractDependencies": [
								318
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2191,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2297,
							"linearizedBaseContracts": [
								2297,
								318
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2195,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 2297,
									"src": "628:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2194,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2201,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "684:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "715:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:5"
									},
									"src": "657:84:5"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "867:135:5",
										"statements": [
											{
												"assignments": [
													2206
												],
												"declarations": [
													{
														"constant": false,
														"id": 2206,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 2222,
														"src": "877:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2205,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "877:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2209,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2207,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "877:32:5"
											},
											{
												"expression": {
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2210,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "919:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2211,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "928:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "919:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "919:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "973:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2215,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "973:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "973:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2219,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "985:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2214,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "952:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "952:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2221,
												"nodeType": "EmitStatement",
												"src": "947:48:5"
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2223,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:5"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:5"
									},
									"scope": 2297,
									"src": "843:159:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "1133:30:5",
										"statements": [
											{
												"expression": {
													"id": 2229,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2195,
													"src": "1150:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2228,
												"id": 2230,
												"nodeType": "Return",
												"src": "1143:13:5"
											}
										]
									},
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "1008:65:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1092:2:5"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1124:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:9:5"
									},
									"scope": 2297,
									"src": "1078:85:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "1272:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2236,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "1290:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1290:7:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2238,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1301:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1290:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "1282:68:5"
											},
											{
												"id": 2244,
												"nodeType": "PlaceholderStatement",
												"src": "1360:1:5"
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "1169:77:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2246,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:2:5"
									},
									"src": "1251:117:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2267,
										"nodeType": "Block",
										"src": "1764:91:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2253,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "1800:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1816:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1808:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1808:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1808:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2252,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "1779:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2259,
												"nodeType": "EmitStatement",
												"src": "1774:45:5"
											},
											{
												"expression": {
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2260,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "1829:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1846:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1838:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2261,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1838:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1838:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1829:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "1829:19:5"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "1374:331:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2250,
											"modifierName": {
												"id": 2249,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "1754:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1754:9:5"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:2:5"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:0:5"
									},
									"scope": 2297,
									"src": "1710:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "2074:170:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "2092:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2104:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2104:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2104:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2092:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2116:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2084:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2084:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "2084:73:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2287,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "2193:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2288,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "2201:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2286,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "2172:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "EmitStatement",
												"src": "2167:43:5"
											},
											{
												"expression": {
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2291,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "2220:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2292,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2271,
														"src": "2229:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2294,
												"nodeType": "ExpressionStatement",
												"src": "2220:17:5"
											}
										]
									},
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "1861:138:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2274,
											"modifierName": {
												"id": 2273,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "2064:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2064:9:5"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "2031:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:18:5"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:5"
									},
									"scope": 2297,
									"src": "2004:240:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2298,
							"src": "585:1661:5"
						}
					],
					"src": "33:2213:5"
				},
				"id": 5
			},
			"contracts/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2362
						]
					},
					"id": 2363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2299,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2300,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2362,
							"linearizedBaseContracts": [
								2362
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2303,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 2362,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2301,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2302,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2306,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 2362,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2304,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2308,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 2362,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2307,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2311,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2312,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2314,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 2316,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 2362,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2319,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2342,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2321,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 2322,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2323,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 2327,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2332,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2337,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2338,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2340,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 2362,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2345,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2346,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2348,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 2362,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2356,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2357,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2355,
												"id": 2359,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 2362,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2363,
							"src": "888:2238:6"
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"contracts/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"IERC20": [
							2071
						],
						"SafeERC20": [
							2575
						],
						"SafeMath": [
							2952
						]
					},
					"id": 2576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2364,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2365,
							"nodeType": "ImportDirective",
							"scope": 2576,
							"sourceUnit": 2072,
							"src": "66:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2366,
							"nodeType": "ImportDirective",
							"scope": 2576,
							"sourceUnit": 2953,
							"src": "89:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 2367,
							"nodeType": "ImportDirective",
							"scope": 2576,
							"sourceUnit": 296,
							"src": "114:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2368,
								"nodeType": "StructuredDocumentation",
								"src": "139:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2575,
							"linearizedBaseContracts": [
								2575
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2371,
									"libraryName": {
										"id": 2369,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2952,
										"src": "627:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2952",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "621:27:7",
									"typeName": {
										"id": 2370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2374,
									"libraryName": {
										"id": 2372,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 295,
										"src": "659:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$295",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:26:7",
									"typeName": {
										"id": 2373,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "757:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2384,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "787:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2387,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2376,
																			"src": "817:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2071",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2020,
																		"src": "817:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "817:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2390,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "842:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "846:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2385,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "794:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "794:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "794:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2383,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "767:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2071_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "767:86:7"
											}
										]
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "707:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2071",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2375,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2071,
													"src": "707:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "721:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "733:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:41:7"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:7"
									},
									"scope": 2575,
									"src": "685:175:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "956:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2408,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "986:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2411,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2398,
																			"src": "1016:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2071",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2052,
																		"src": "1016:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1016:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2414,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "1045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2415,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "1051:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2416,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "1055:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2409,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "993:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "993:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "993:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2407,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "966:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2071_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "966:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2419,
												"nodeType": "ExpressionStatement",
												"src": "966:96:7"
											}
										]
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "892:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2071",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2397,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2071,
													"src": "892:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "906:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "920:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "932:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:55:7"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:0:7"
									},
									"scope": 2575,
									"src": "866:203:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "1405:537:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2428,
																			"src": "1694:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1703:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1694:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2435,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1693:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2440,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1734:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2575",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2575",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1726:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2438,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1726:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1726:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2442,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "1741:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2436,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2424,
																					"src": "1710:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2071",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2030,
																				"src": "1710:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1710:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1753:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1710:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2446,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1709:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1693:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1769:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1685:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1685:150:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "1685:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2452,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "1865:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2455,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "1895:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2071",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2040,
																		"src": "1895:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1895:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2458,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "1919:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "1928:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2453,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1872:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1872:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2451,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "1845:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2071_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "1845:90:7"
											}
										]
									},
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "1075:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2071",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2423,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2071,
													"src": "1350:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1364:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "1381:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:46:7"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:0:7"
									},
									"scope": 2575,
									"src": "1329:613:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "2034:197:7",
										"statements": [
											{
												"assignments": [
													2474
												],
												"declarations": [
													{
														"constant": false,
														"id": 2474,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "2044:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2044:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2486,
												"initialValue": {
													"arguments": [
														{
															"id": 2484,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "2111:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2479,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2091:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2575",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2575",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2083:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2477,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2083:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2083:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2481,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "2098:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2475,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "2067:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2071",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2030,
																"src": "2067:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2067:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2757,
														"src": "2067:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2044:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2488,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "2147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2491,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2466,
																			"src": "2177:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2071",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2040,
																		"src": "2177:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2177:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2494,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "2201:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2495,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "2210:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2489,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2154:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2154:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2487,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "2127:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2071_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2498,
												"nodeType": "ExpressionStatement",
												"src": "2127:97:7"
											}
										]
									},
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "1979:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2071",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2465,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2071,
													"src": "1979:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "1993:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "2010:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:46:7"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:7"
									},
									"scope": 2575,
									"src": "1948:283:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "2323:242:7",
										"statements": [
											{
												"assignments": [
													2510
												],
												"declarations": [
													{
														"constant": false,
														"id": 2510,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "2333:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2509,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2333:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2523,
												"initialValue": {
													"arguments": [
														{
															"id": 2520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "2400:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2407:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2515,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2380:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2575",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2575",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2372:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2513,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2372:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2372:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2517,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "2387:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2511,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "2356:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2071",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2030,
																"src": "2356:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2356:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2881,
														"src": "2356:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2333:118:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2525,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "2481:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2528,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "2511:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2071",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2040,
																		"src": "2511:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2511:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2531,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "2535:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2532,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "2544:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2526,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2488:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2488:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2488:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2071",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2524,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "2461:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2071_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2535,
												"nodeType": "ExpressionStatement",
												"src": "2461:97:7"
											}
										]
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "2268:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2071",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2501,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2071,
													"src": "2268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "2282:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "2299:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:46:7"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2323:0:7"
									},
									"scope": 2575,
									"src": "2237:328:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "3018:681:7",
										"statements": [
											{
												"assignments": [
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2573,
														"src": "3367:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3367:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2555,
												"initialValue": {
													"arguments": [
														{
															"id": 2552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2542,
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3427:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2549,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2540,
																	"src": "3401:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2071",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2071",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3393:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3393:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3393:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "3393:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3367:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2556,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "3476:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3476:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3476:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2572,
												"nodeType": "IfStatement",
												"src": "3472:221:7",
												"trueBody": {
													"id": 2571,
													"nodeType": "Block",
													"src": "3499:194:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2563,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2546,
																				"src": "3616:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3629:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2564,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3629:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2566,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3628:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2561,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3605:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3605:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3605:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3637:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2560,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3597:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3597:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2570,
															"nodeType": "ExpressionStatement",
															"src": "3597:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "2571:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2977:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2071",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2539,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2071,
													"src": "2977:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2071",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "2991:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2991:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:33:7"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3018:0:7"
									},
									"scope": 2575,
									"src": "2948:751:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2576,
							"src": "597:3104:7"
						}
					],
					"src": "33:3668:7"
				},
				"id": 7
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2952
						]
					},
					"id": 2953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2577,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2578,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2952,
							"linearizedBaseContracts": [
								2952
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2608,
										"nodeType": "Block",
										"src": "865:98:8",
										"statements": [
											{
												"assignments": [
													2591
												],
												"declarations": [
													{
														"constant": false,
														"id": 2591,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2608,
														"src": "875:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2595,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2592,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2581,
														"src": "887:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2593,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "891:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2596,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2591,
														"src": "906:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2597,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2581,
														"src": "910:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2603,
												"nodeType": "IfStatement",
												"src": "902:28:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2601,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2589,
													"id": 2602,
													"nodeType": "Return",
													"src": "913:17:8"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2605,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "954:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2606,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2589,
												"id": 2607,
												"nodeType": "Return",
												"src": "940:16:8"
											}
										]
									},
									"documentation": {
										"id": 2579,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "805:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "816:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:8"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "850:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "856:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:8"
									},
									"scope": 2952,
									"src": "789:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "1185:75:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2621,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "1199:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2622,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "1203:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2628,
												"nodeType": "IfStatement",
												"src": "1195:28:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2620,
													"id": 2627,
													"nodeType": "Return",
													"src": "1206:17:8"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2630,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2612,
																"src": "1247:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2631,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2614,
																"src": "1251:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2633,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2620,
												"id": 2634,
												"nodeType": "Return",
												"src": "1233:20:8"
											}
										]
									},
									"documentation": {
										"id": 2610,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:8",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "1125:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "1136:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:8"
									},
									"returnParameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "1170:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "1176:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:8"
									},
									"scope": 2952,
									"src": "1109:151:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "1484:359:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2648,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "1716:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2655,
												"nodeType": "IfStatement",
												"src": "1712:28:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2653,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2647,
													"id": 2654,
													"nodeType": "Return",
													"src": "1724:16:8"
												}
											},
											{
												"assignments": [
													2657
												],
												"declarations": [
													{
														"constant": false,
														"id": 2657,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2676,
														"src": "1750:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2661,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2658,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "1762:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2659,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2641,
														"src": "1766:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2662,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "1781:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2663,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "1785:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2665,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2641,
														"src": "1790:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2671,
												"nodeType": "IfStatement",
												"src": "1777:33:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2669,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2647,
													"id": 2670,
													"nodeType": "Return",
													"src": "1793:17:8"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2673,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "1834:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2674,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2647,
												"id": 2675,
												"nodeType": "Return",
												"src": "1820:16:8"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "1424:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "1435:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:8"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "1469:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "1475:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:8"
									},
									"scope": 2952,
									"src": "1408:435:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "2068:76:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2689,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "2082:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2696,
												"nodeType": "IfStatement",
												"src": "2078:29:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2694,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2688,
													"id": 2695,
													"nodeType": "Return",
													"src": "2090:17:8"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2698,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "2131:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2699,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "2135:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2701,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2688,
												"id": 2702,
												"nodeType": "Return",
												"src": "2117:20:8"
											}
										]
									},
									"documentation": {
										"id": 2678,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "2019:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:8"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "2053:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "2059:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:8"
									},
									"scope": 2952,
									"src": "1992:152:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "2379:76:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2709,
														"src": "2393:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2723,
												"nodeType": "IfStatement",
												"src": "2389:29:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2721,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2715,
													"id": 2722,
													"nodeType": "Return",
													"src": "2401:17:8"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2725,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2707,
																"src": "2442:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2726,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "2446:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2728,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2715,
												"id": 2729,
												"nodeType": "Return",
												"src": "2428:20:8"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "2319:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "2330:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:8"
									},
									"returnParameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "2364:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "2370:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:8"
									},
									"scope": 2952,
									"src": "2303:152:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2756,
										"nodeType": "Block",
										"src": "2757:108:8",
										"statements": [
											{
												"assignments": [
													2742
												],
												"declarations": [
													{
														"constant": false,
														"id": 2742,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2756,
														"src": "2767:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "2779:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2736,
														"src": "2783:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2748,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "2802:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2749,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2734,
																"src": "2807:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:8"
											},
											{
												"expression": {
													"id": 2754,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2742,
													"src": "2857:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2740,
												"id": 2755,
												"nodeType": "Return",
												"src": "2850:8:8"
											}
										]
									},
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "2703:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "2714:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:8"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "2748:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:8"
									},
									"scope": 2952,
									"src": "2690:175:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2778,
										"nodeType": "Block",
										"src": "3203:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2768,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "3221:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2769,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2760,
																"src": "3226:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2773,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2760,
														"src": "3279:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "3283:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2766,
												"id": 2777,
												"nodeType": "Return",
												"src": "3272:12:8"
											}
										]
									},
									"documentation": {
										"id": 2758,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "3149:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "3160:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:8"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "3194:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:8"
									},
									"scope": 2952,
									"src": "3136:155:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "3605:148:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "3619:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2794,
												"nodeType": "IfStatement",
												"src": "3615:20:8",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2788,
													"id": 2793,
													"nodeType": "Return",
													"src": "3627:8:8"
												}
											},
											{
												"assignments": [
													2796
												],
												"declarations": [
													{
														"constant": false,
														"id": 2796,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "3645:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2800,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2797,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "3657:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2798,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2784,
														"src": "3661:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2802,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2796,
																	"src": "3680:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2803,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "3684:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2784,
																"src": "3689:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:8"
											},
											{
												"expression": {
													"id": 2810,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2796,
													"src": "3745:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2788,
												"id": 2811,
												"nodeType": "Return",
												"src": "3738:8:8"
											}
										]
									},
									"documentation": {
										"id": 2780,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "3551:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "3562:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:8"
									},
									"returnParameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "3596:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:8"
									},
									"scope": 2952,
									"src": "3538:215:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "4284:83:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "4302:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2829,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2830,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "4355:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2831,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2818,
														"src": "4359:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2833,
												"nodeType": "Return",
												"src": "4348:12:8"
											}
										]
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "4230:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "4241:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:8"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "4275:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:8"
									},
									"scope": 2952,
									"src": "4217:150:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "4887:81:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2846,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "4905:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2851,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2852,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2838,
														"src": "4956:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2853,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2840,
														"src": "4960:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2844,
												"id": 2855,
												"nodeType": "Return",
												"src": "4949:12:8"
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "4833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "4844:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:8"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "4878:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:8"
									},
									"scope": 2952,
									"src": "4820:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2880,
										"nodeType": "Block",
										"src": "5527:68:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "5545:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2871,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2860,
																"src": "5550:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2873,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "5553:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2876,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2860,
														"src": "5583:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2877,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2862,
														"src": "5587:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2868,
												"id": 2879,
												"nodeType": "Return",
												"src": "5576:12:8"
											}
										]
									},
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "5445:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "5456:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "5467:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:8"
									},
									"returnParameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "5518:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:8"
									},
									"scope": 2952,
									"src": "5432:163:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2904,
										"nodeType": "Block",
										"src": "6347:67:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2894,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "6365:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2897,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "6372:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2900,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2884,
														"src": "6402:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2901,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2886,
														"src": "6406:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2892,
												"id": 2903,
												"nodeType": "Return",
												"src": "6395:12:8"
											}
										]
									},
									"documentation": {
										"id": 2882,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "6265:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "6276:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "6287:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:50:8"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "6338:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:9:8"
									},
									"scope": 2952,
									"src": "6252:162:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2928,
										"nodeType": "Block",
										"src": "7155:67:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2918,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2910,
																"src": "7173:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2921,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2912,
															"src": "7180:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2923,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2924,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "7210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2925,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "7214:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2916,
												"id": 2927,
												"nodeType": "Return",
												"src": "7203:12:8"
											}
										]
									},
									"documentation": {
										"id": 2906,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "7073:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "7084:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "7095:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:50:8"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "7146:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7145:9:8"
									},
									"scope": 2952,
									"src": "7060:162:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "7350:103:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2938,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2933,
														"src": "7364:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2939,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "7368:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7364:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2948,
													"nodeType": "Block",
													"src": "7410:37:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2944,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2931,
																	"src": "7431:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2945,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2933,
																	"src": "7435:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7431:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2937,
															"id": 2947,
															"nodeType": "Return",
															"src": "7424:12:8"
														}
													]
												},
												"id": 2949,
												"nodeType": "IfStatement",
												"src": "7360:87:8",
												"trueBody": {
													"id": 2943,
													"nodeType": "Block",
													"src": "7371:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7392:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2937,
															"id": 2942,
															"nodeType": "Return",
															"src": "7385:8:8"
														}
													]
												}
											}
										]
									},
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "7305:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7305:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "7313:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7313:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7304:16:8"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "7344:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2935,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7344:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7343:6:8"
									},
									"scope": 2952,
									"src": "7288:165:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2953,
							"src": "630:6825:8"
						}
					],
					"src": "33:7422:8"
				},
				"id": 8
			},
			"lib/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2964
						]
					},
					"id": 2965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2954,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2955,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2964,
							"linearizedBaseContracts": [
								2964
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2957,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 2964,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2965,
							"src": "405:447:9"
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			}
		}
	}
}